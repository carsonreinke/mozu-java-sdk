/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.content.documentlists;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the folder tree subresource to view individual folders in the document hierarchy.
/// </summary>
public class FolderTreeClient {
	
	
	/**
	* Retrieves the folder hierarchy used to organize documents in lists.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.content.FolderTree> mozuClient=GetFolderTreeClient( documentListName);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* FolderTree folderTree = client.Result();
	* </code></pre></p>
	* @param documentListName The name of the document list that contains this folder hierarchy.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.FolderTree>
	* @see com.mozu.api.contracts.content.FolderTree
	*/
	public static MozuClient<com.mozu.api.contracts.content.FolderTree> getFolderTreeClient(String documentListName) throws Exception
	{
		return getFolderTreeClient( documentListName,  null,  null,  null);
	}

/**
	* Retrieves the folder hierarchy used to organize documents in lists.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.content.FolderTree> mozuClient=GetFolderTreeClient( documentListName,  levels,  rootFolderId,  rootFolderPath);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* FolderTree folderTree = client.Result();
	* </code></pre></p>
	* @param documentListName The name of the document list that contains this folder hierarchy.
	* @param levels The number of levels in the folder hierarchy to return.
	* @param rootFolderId The unique identifier of the top-level folder in the document list.
	* @param rootFolderPath The location in the document hierarchy of the top-level folder in the document list.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.FolderTree>
	* @see com.mozu.api.contracts.content.FolderTree
	*/
	public static MozuClient<com.mozu.api.contracts.content.FolderTree> getFolderTreeClient(String documentListName, Long levels, String rootFolderId, String rootFolderPath) throws Exception
	{
		String url = com.mozu.api.urls.content.documentlists.FolderTreeUrl.getFolderTreeUrl(documentListName, levels, rootFolderId, rootFolderPath);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.content.FolderTree.class;
		MozuClient<com.mozu.api.contracts.content.FolderTree> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

			
}



