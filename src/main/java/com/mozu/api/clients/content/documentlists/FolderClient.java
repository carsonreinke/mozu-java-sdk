/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.content.documentlists;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class FolderClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.Folder> mozuClient=GetFolderClient( documentListName,  folderId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Folder folder = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param folderId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.Folder>
	 * @see com.mozu.api.contracts.content.Folder
	 */
	public static MozuClient<com.mozu.api.contracts.content.Folder> getFolderClient(String documentListName, String folderId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.FolderUrl.getFolderUrl(documentListName, folderId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.content.Folder.class;
		MozuClient<com.mozu.api.contracts.content.Folder> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.FolderCollection> mozuClient=GetFoldersClient( documentListName,  filter);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FolderCollection folderCollection = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param filter 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.FolderCollection>
	 * @see com.mozu.api.contracts.content.FolderCollection
	 */
	public static MozuClient<com.mozu.api.contracts.content.FolderCollection> getFoldersClient(String documentListName, String filter) throws Exception
	{
		return getFoldersClient( documentListName,  filter,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.FolderCollection> mozuClient=GetFoldersClient( documentListName,  filter,  pageSize,  sort,  startIndex, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FolderCollection folderCollection = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param filter 
	 * @param pageSize 
	 * @param sort 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.FolderCollection>
	 * @see com.mozu.api.contracts.content.FolderCollection
	 */
	public static MozuClient<com.mozu.api.contracts.content.FolderCollection> getFoldersClient(String documentListName, String filter, Integer pageSize, String sort, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.FolderUrl.getFoldersUrl(documentListName, filter, pageSize, sort, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.content.FolderCollection.class;
		MozuClient<com.mozu.api.contracts.content.FolderCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.Folder> mozuClient=CreateFolderClient( folder,  documentListName, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Folder folder = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @param folder 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.Folder>
	 * @see com.mozu.api.contracts.content.Folder
	 * @see com.mozu.api.contracts.content.Folder
	 */
	public static MozuClient<com.mozu.api.contracts.content.Folder> createFolderClient(com.mozu.api.contracts.content.Folder folder, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.FolderUrl.createFolderUrl(documentListName);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.content.Folder.class;
		MozuClient<com.mozu.api.contracts.content.Folder> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(folder);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.Folder> mozuClient=UpdateFolderClient( folder,  documentListName,  folderId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Folder folder = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param folderId 
	 * @param authTicket User Auth Ticket
	 * @param folder 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.Folder>
	 * @see com.mozu.api.contracts.content.Folder
	 * @see com.mozu.api.contracts.content.Folder
	 */
	public static MozuClient<com.mozu.api.contracts.content.Folder> updateFolderClient(com.mozu.api.contracts.content.Folder folder, String documentListName, String folderId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.FolderUrl.updateFolderUrl(documentListName, folderId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.content.Folder.class;
		MozuClient<com.mozu.api.contracts.content.Folder> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(folder);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteFolderClient( documentListName,  folderId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param folderId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deleteFolderClient(String documentListName, String folderId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.FolderUrl.deleteFolderUrl(documentListName, folderId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



