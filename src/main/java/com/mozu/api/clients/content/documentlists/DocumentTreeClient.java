/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.content.documentlists;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class DocumentTreeClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=GetTreeDocumentContentClient( documentListName,  documentName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient getTreeDocumentContentClient(String documentListName, String documentName) throws Exception
	{
		return getTreeDocumentContentClient( documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=GetTreeDocumentContentClient( documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient getTreeDocumentContentClient(String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.DocumentTreeUrl.getTreeDocumentContentUrl(documentListName, documentName, folderId, folderPath);
		String verb = "GET";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.Document> mozuClient=GetTreeDocumentClient( documentListName,  documentName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Document document = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.Document>
	 * @see com.mozu.api.contracts.content.Document
	 */
	public static MozuClient<com.mozu.api.contracts.content.Document> getTreeDocumentClient(String documentListName, String documentName) throws Exception
	{
		return getTreeDocumentClient( documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.content.Document> mozuClient=GetTreeDocumentClient( documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Document document = client.Result();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.content.Document>
	 * @see com.mozu.api.contracts.content.Document
	 */
	public static MozuClient<com.mozu.api.contracts.content.Document> getTreeDocumentClient(String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.DocumentTreeUrl.getTreeDocumentUrl(documentListName, documentName, folderId, folderPath);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.content.Document.class;
		MozuClient<com.mozu.api.contracts.content.Document> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=UpdateTreeDocumentContentClient( stream,  documentListName,  documentName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient 
	 * @see Stream
	 */
	public static MozuClient updateTreeDocumentContentClient(java.io.InputStream stream, String documentListName, String documentName) throws Exception
	{
		return updateTreeDocumentContentClient( stream,  documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=UpdateTreeDocumentContentClient( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient 
	 * @see Stream
	 */
	public static MozuClient updateTreeDocumentContentClient(java.io.InputStream stream, String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.DocumentTreeUrl.updateTreeDocumentContentUrl(documentListName, documentName, folderId, folderPath);
		String verb = "PUT";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(stream);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteTreeDocumentContentClient( stream,  documentListName,  documentName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient 
	 * @see Stream
	 */
	public static MozuClient deleteTreeDocumentContentClient(java.io.InputStream stream, String documentListName, String documentName) throws Exception
	{
		return deleteTreeDocumentContentClient( stream,  documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteTreeDocumentContentClient( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient 
	 * @see Stream
	 */
	public static MozuClient deleteTreeDocumentContentClient(java.io.InputStream stream, String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.content.documentlists.DocumentTreeUrl.deleteTreeDocumentContentUrl(documentListName, documentName, folderId, folderPath);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(stream);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



