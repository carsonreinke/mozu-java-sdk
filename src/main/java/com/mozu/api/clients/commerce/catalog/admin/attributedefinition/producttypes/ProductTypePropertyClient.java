/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
/// </summary>
public class ProductTypePropertyClient {
	
	
	/**
	* Retrieves a list of product property attributes defined for a product type.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>> mozuClient=GetPropertiesClient( productTypeId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* AttributeInProductType attributeInProductType = client.Result();
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.productadmin.AttributeInProductType>>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>> getPropertiesClient(Integer productTypeId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyUrl.getPropertiesUrl(productTypeId);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>(){}.getClass();
		MozuClient<ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves a product property attribute definition for the specified product type.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient=GetPropertyClient( attributeFQN,  productTypeId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* AttributeInProductType attributeInProductType = client.Result();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.AttributeInProductType>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> getPropertyClient(String attributeFQN, Integer productTypeId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyUrl.getPropertyUrl(attributeFQN, productTypeId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.productadmin.AttributeInProductType.class;
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Assigns a property attribute to the specified product type, according to the information defined in the request.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient=AddPropertyClient( productTypeId,  attributeInProductType);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* AttributeInProductType attributeInProductType = client.Result();
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType Properties of the property attribute to define for the specified product type.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.AttributeInProductType>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> addPropertyClient(Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyUrl.addPropertyUrl(productTypeId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.productadmin.AttributeInProductType.class;
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(attributeInProductType);
		return mozuClient;

	}

	/**
	* Updates the definition of a property attribute for the specified product type.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient=UpdatePropertyClient( attributeFQN,  productTypeId,  attributeInProductType);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* AttributeInProductType attributeInProductType = client.Result();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType Properties of the property attribute to define for the product type.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.AttributeInProductType>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> updatePropertyClient(String attributeFQN, Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyUrl.updatePropertyUrl(attributeFQN, productTypeId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.productadmin.AttributeInProductType.class;
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(attributeInProductType);
		return mozuClient;

	}

	/**
	* Removes a property attribute previously defined for the specified product type.
	* <p><pre><code>
	*   MozuClient mozuClient=DeletePropertyClient( attributeFQN,  productTypeId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deletePropertyClient(String attributeFQN, Integer productTypeId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyUrl.deletePropertyUrl(attributeFQN, productTypeId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



