/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates estimated prices, discounts, tax, and shipping.
/// </summary>
public class CartClient {
	
	
	/**
	* Retrieve a cart specified by its cart ID.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient=GetCartClient( cartId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Cart cart = client.Result();
	* </code></pre></p>
	* @param cartId Identifier of the cart being retrieved.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.Cart>
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> getCartClient(String cartId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.getCartUrl(cartId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.Cart.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves a cart's contents for the current shopper. If the shopper does not have an active cart on the site, the service creates one.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient=GetOrCreateCartClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Cart cart = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.Cart>
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> getOrCreateCartClient() throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.getOrCreateCartUrl();
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.Cart.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the number of items in the active cart and the status of the cart such as whether or not it has expired. Only an anonymous user's cart (guest that does not log in) that is emptied and idle will expire after 14 days. Note that the expiration counter is renewed each time action is made to the cart. For shoppers or users that are logged in, the cart does not expire.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> mozuClient=GetCartSummaryClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CartSummary cartSummary = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartSummary>
	* @see com.mozu.api.contracts.commerceruntime.carts.CartSummary
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> getCartSummaryClient() throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.getCartSummaryUrl();
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartSummary.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieve a user's cart by specifying the user ID.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient=GetUserCartClient( userId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Cart cart = client.Result();
	* </code></pre></p>
	* @param userId Unique identifier of the user whose cart you want to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.Cart>
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> getUserCartClient(String userId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.getUserCartUrl(userId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.Cart.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the current status of the specified user's cart, including the number of items in the active cart.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> mozuClient=GetUserCartSummaryClient( userId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CartSummary cartSummary = client.Result();
	* </code></pre></p>
	* @param userId Unique identifier of the user whose cart details you want to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartSummary>
	* @see com.mozu.api.contracts.commerceruntime.carts.CartSummary
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> getUserCartSummaryClient(String userId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.getUserCartSummaryUrl(userId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartSummary.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartSummary> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

		/**
	* Update the current shopper's cart.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient=UpdateCartClient( cart);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Cart cart = client.Result();
	* </code></pre></p>
	* @param cart All of the properties of the cart to update. The product code is required.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.Cart>
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> updateCartClient(com.mozu.api.contracts.commerceruntime.carts.Cart cart) throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.updateCartUrl();
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.Cart.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(cart);
		return mozuClient;

	}

	/**
	* Delete the cart specified by its cart ID.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteCartClient( cartId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param cartId Identifier of the cart being deleted.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteCartClient(String cartId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.deleteCartUrl(cartId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Deletes the cart of the currently active shopper.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteCurrentCartClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteCurrentCartClient() throws Exception
	{
		String url = com.mozu.api.urls.commerce.CartUrl.deleteCurrentCartUrl();
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



