/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.carts;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class CartItemClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItemCollection> mozuClient=GetCartItemsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CartItemCollection cartItemCollection = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItemCollection> getCartItemsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.getCartItemsUrl();
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartItemCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItemCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient=GetCartItemClient( cartItemId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CartItem cartItem = client.Result();
	 * </code></pre></p>
	 * @param cartItemId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartItem>
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> getCartItemClient(String cartItemId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.getCartItemUrl(cartItemId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient=AddItemToCartClient( cartItem, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CartItem cartItem = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param cartItem 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartItem>
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> addItemToCartClient(com.mozu.api.contracts.commerceruntime.carts.CartItem cartItem, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.addItemToCartUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(cartItem);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient=UpdateCartItemClient( cartItem,  cartItemId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CartItem cartItem = client.Result();
	 * </code></pre></p>
	 * @param cartItemId 
	 * @param authTicket User Auth Ticket
	 * @param cartItem 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartItem>
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> updateCartItemClient(com.mozu.api.contracts.commerceruntime.carts.CartItem cartItem, String cartItemId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.updateCartItemUrl(cartItemId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(cartItem);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient=UpdateCartItemQuantityClient( cartItemId,  quantity, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CartItem cartItem = client.Result();
	 * </code></pre></p>
	 * @param cartItemId 
	 * @param quantity 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.CartItem>
	 * @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> updateCartItemQuantityClient(String cartItemId, Integer quantity, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.updateCartItemQuantityUrl(cartItemId, quantity);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.CartItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient=RemoveAllCartItemsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Cart cart = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.carts.Cart>
	 * @see com.mozu.api.contracts.commerceruntime.carts.Cart
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> removeAllCartItemsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.removeAllCartItemsUrl();
		String verb = "DELETE";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.carts.Cart.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteCartItemClient( cartItemId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param cartItemId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deleteCartItemClient(String cartItemId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.carts.CartItemUrl.deleteCartItemUrl(cartItemId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



