/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.catalog.admin;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
/// </summary>
public class DiscountClient {
	
	
	/**
	* Retrieves a list of discounts according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> mozuClient=GetDiscountsClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* DiscountCollection discountCollection = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.DiscountCollection>
	* @see com.mozu.api.contracts.productadmin.DiscountCollection
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> getDiscountsClient() throws Exception
	{
		return getDiscountsClient( null,  null,  null,  null);
	}

/**
	* Retrieves a list of discounts according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> mozuClient=GetDiscountsClient( filter,  pageSize,  sortBy,  startIndex);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* DiscountCollection discountCollection = client.Result();
	* </code></pre></p>
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param sortBy 
	* @param startIndex 
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.DiscountCollection>
	* @see com.mozu.api.contracts.productadmin.DiscountCollection
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> getDiscountsClient(String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.getDiscountsUrl(filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.productadmin.DiscountCollection.class;
		MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the details of a single discount.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient=GetDiscountClient( discountId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Discount discount = client.Result();
	* </code></pre></p>
	* @param discountId Unique identifier of the discount. System-supplied and read-only.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.Discount>
	* @see com.mozu.api.contracts.productadmin.Discount
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.Discount> getDiscountClient(Integer discountId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.getDiscountUrl(discountId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.productadmin.Discount.class;
		MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the localized content specified for the specified discount.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> mozuClient=GetDiscountContentClient( discountId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* DiscountLocalizedContent discountLocalizedContent = client.Result();
	* </code></pre></p>
	* @param discountId Unique identifier of the discount. System-supplied and read-only.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.DiscountLocalizedContent>
	* @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> getDiscountContentClient(Integer discountId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.getDiscountContentUrl(discountId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.productadmin.DiscountLocalizedContent.class;
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Generates a random code for a coupon.
	* <p><pre><code>
	*   MozuClient<String> mozuClient=GenerateRandomCouponClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* string string = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <string>
	* @see string
	*/
	public static MozuClient<String> generateRandomCouponClient() throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.generateRandomCouponUrl();
		String verb = "GET";
		Class<?> clz = String.class;
		MozuClient<String> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Creates a discount.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient=CreateDiscountClient( discount);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Discount discount = client.Result();
	* </code></pre></p>
	* @param discount Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.Discount>
	* @see com.mozu.api.contracts.productadmin.Discount
	* @see com.mozu.api.contracts.productadmin.Discount
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.Discount> createDiscountClient(com.mozu.api.contracts.productadmin.Discount discount) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.createDiscountUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.productadmin.Discount.class;
		MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(discount);
		return mozuClient;

	}

/**
	* Redeems a discount configured in the product admin.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.discounts.Redemption> mozuClient=RedeemDiscountClient( redemption);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Redemption redemption = client.Result();
	* </code></pre></p>
	* @param redemption Properties of the product discount redemption.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.discounts.Redemption>
	* @see com.mozu.api.contracts.productadmin.discounts.Redemption
	* @see com.mozu.api.contracts.productadmin.discounts.Redemption
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.discounts.Redemption> redeemDiscountClient(com.mozu.api.contracts.productadmin.discounts.Redemption redemption) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.redeemDiscountUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.productadmin.discounts.Redemption.class;
		MozuClient<com.mozu.api.contracts.productadmin.discounts.Redemption> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(redemption);
		return mozuClient;

	}

	/**
	* Modifies a discount.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient=UpdateDiscountClient( discountId,  discount);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* Discount discount = client.Result();
	* </code></pre></p>
	* @param discountId Unique identifier of the discount. System-supplied and read-only.
	* @param discount Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.Discount>
	* @see com.mozu.api.contracts.productadmin.Discount
	* @see com.mozu.api.contracts.productadmin.Discount
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.Discount> updateDiscountClient(Integer discountId, com.mozu.api.contracts.productadmin.Discount discount) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.updateDiscountUrl(discountId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.productadmin.Discount.class;
		MozuClient<com.mozu.api.contracts.productadmin.Discount> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(discount);
		return mozuClient;

	}

/**
	* Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> mozuClient=UpdateDiscountContentClient( discountId,  content);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* DiscountLocalizedContent discountLocalizedContent = client.Result();
	* </code></pre></p>
	* @param discountId Unique identifier of the discount. System-supplied and read-only.
	* @param content New Name and/or LocaleCode. Properties of the content to update. Required property: Name.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.DiscountLocalizedContent>
	* @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	* @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> updateDiscountContentClient(Integer discountId, com.mozu.api.contracts.productadmin.DiscountLocalizedContent content) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.updateDiscountContentUrl(discountId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.productadmin.DiscountLocalizedContent.class;
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(content);
		return mozuClient;

	}

	/**
	* Deletes a discount specified by its discount ID.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteDiscountClient( discountId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param discountId Unique identifier of the discount. System-supplied and read-only.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteDiscountClient(Integer discountId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.deleteDiscountUrl(discountId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Deletes a previous discount redemption from an order.
	* <p><pre><code>
	*   MozuClient mozuClient=UnRedeemDiscountClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient unRedeemDiscountClient() throws Exception
	{
		return unRedeemDiscountClient( null,  null);
	}

/**
	* Deletes a previous discount redemption from an order.
	* <p><pre><code>
	*   MozuClient mozuClient=UnRedeemDiscountClient( discountId,  orderNumber);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param discountId Unique identifier of the previously redeemed discount. System-supplied and read only.
	* @param orderNumber The number of the order associated with the redeemed product discount.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient unRedeemDiscountClient(Integer discountId, Integer orderNumber) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.DiscountUrl.unRedeemDiscountUrl(discountId, orderNumber);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



