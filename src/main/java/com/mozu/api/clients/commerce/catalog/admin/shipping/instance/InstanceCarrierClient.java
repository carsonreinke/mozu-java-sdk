/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.catalog.admin.shipping.instance;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Configure the shipping carrier for the site.
/// </summary>
public class InstanceCarrierClient {
	
	
	/**
	* Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection> mozuClient=GetConfigurationsClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CarrierConfigurationCollection carrierConfigurationCollection = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection>
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection
	*/
	public static MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection> getConfigurationsClient() throws Exception
	{
		return getConfigurationsClient( null,  null,  null,  null);
	}

/**
	* Retrieves a list of carrier configurations according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection> mozuClient=GetConfigurationsClient( filter,  pageSize,  sortBy,  startIndex);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CarrierConfigurationCollection carrierConfigurationCollection = client.Result();
	* </code></pre></p>
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param sortBy 
	* @param startIndex 
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection>
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection
	*/
	public static MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection> getConfigurationsClient(String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.shipping.instance.InstanceCarrierUrl.getConfigurationsUrl(filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection.class;
		MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfigurationCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the carrier configuration for a specific site by providing the carrier ID.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient=GetConfigurationClient( carrierId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CarrierConfiguration carrierConfiguration = client.Result();
	* </code></pre></p>
	* @param carrierId Identifier of the shipping carrier associated with the configuration details to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.shippingadmin.CarrierConfiguration>
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfiguration
	*/
	public static MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> getConfigurationClient(String carrierId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.shipping.instance.InstanceCarrierUrl.getConfigurationUrl(carrierId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.shippingadmin.CarrierConfiguration.class;
		MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Create a new carrier configuration for the site.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient=CreateConfigurationClient( carrierId,  carrierConfiguration);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CarrierConfiguration carrierConfiguration = client.Result();
	* </code></pre></p>
	* @param carrierId Identifier of the carrier configuration being created.
	* @param carrierConfiguration The properties of the carrier configuration to create.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.shippingadmin.CarrierConfiguration>
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfiguration
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfiguration
	*/
	public static MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> createConfigurationClient(String carrierId, com.mozu.api.contracts.shippingadmin.CarrierConfiguration carrierConfiguration) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.shipping.instance.InstanceCarrierUrl.createConfigurationUrl(carrierId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.shippingadmin.CarrierConfiguration.class;
		MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(carrierConfiguration);
		return mozuClient;

	}

	/**
	* Update and existing shipping carrier configuration.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient=UpdateConfigurationClient( carrierId,  carrierConfiguration);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CarrierConfiguration carrierConfiguration = client.Result();
	* </code></pre></p>
	* @param carrierId Identifier of the shipping carrier configuration to update.
	* @param carrierConfiguration The properties of the shipping carrier configuration to update.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.shippingadmin.CarrierConfiguration>
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfiguration
	* @see com.mozu.api.contracts.shippingadmin.CarrierConfiguration
	*/
	public static MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> updateConfigurationClient(String carrierId, com.mozu.api.contracts.shippingadmin.CarrierConfiguration carrierConfiguration) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.shipping.instance.InstanceCarrierUrl.updateConfigurationUrl(carrierId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.shippingadmin.CarrierConfiguration.class;
		MozuClient<com.mozu.api.contracts.shippingadmin.CarrierConfiguration> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(carrierConfiguration);
		return mozuClient;

	}

	/**
	* Delete the shipping carrier for the site.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteConfigurationClient( carrierId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param carrierId Identifier of the specific shipping carrier to delete.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteConfigurationClient(String carrierId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.shipping.instance.InstanceCarrierUrl.deleteConfigurationUrl(carrierId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



