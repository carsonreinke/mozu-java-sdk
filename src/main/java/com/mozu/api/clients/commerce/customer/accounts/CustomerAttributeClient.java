/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.customer.accounts;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Mozu customers and merchants can create, view, update, and delete attributes for a customer account.
/// </summary>
public class CustomerAttributeClient {
	
	
	/**
	* Retrieves the contents of an attribute associated with the specified customer account.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=GetAccountAttributeClient( accountId,  attributeId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttribute customerAttribute = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the attribute to retrieve.
	* @param attributeId Identifier of the customer account attribute to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> getAccountAttributeClient(Integer accountId, Integer attributeId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerAttributeUrl.getAccountAttributeUrl(accountId, attributeId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttribute.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the list of customer account attributes.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient=GetAccountAttributesClient( accountId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttributeCollection customerAttributeCollection = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the attributes to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttributeCollection>
	* @see com.mozu.api.contracts.customer.CustomerAttributeCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> getAccountAttributesClient(Integer accountId) throws Exception
	{
		return getAccountAttributesClient( accountId,  null,  null,  null,  null);
	}

/**
	* Retrieves the list of customer account attributes.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient=GetAccountAttributesClient( accountId,  filter,  pageSize,  sortBy,  startIndex);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttributeCollection customerAttributeCollection = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the attributes to retrieve.
	* @param filter 
	* @param pageSize 
	* @param sortBy 
	* @param startIndex 
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttributeCollection>
	* @see com.mozu.api.contracts.customer.CustomerAttributeCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> getAccountAttributesClient(Integer accountId, String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerAttributeUrl.getAccountAttributesUrl(accountId, filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttributeCollection.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Adds a new attribute to associate with the specified customer account.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> mozuClient=AddAccountAttributesClient( accountId,  customerAccountAttributes);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttribute customerAttribute = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the new attribute.
	* @param customerAccountAttributes The properties of the customer account attribute to create.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.customer.CustomerAttribute>>
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> addAccountAttributesClient(Integer accountId, ArrayList<com.mozu.api.contracts.customer.CustomerAttribute> customerAccountAttributes) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerAttributeUrl.addAccountAttributesUrl(accountId);
		String verb = "POST";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>(){}.getClass();
		MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(customerAccountAttributes);
		return mozuClient;

	}

	/**
	* Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> mozuClient=UpdateAccountAttributeClient( accountId,  customerAccountAttribute);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttribute customerAttribute = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the attribute.
	* @param customerAccountAttribute The properties of the customer account attribute being updated.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.customer.CustomerAttribute>>
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> updateAccountAttributeClient(Integer accountId, ArrayList<com.mozu.api.contracts.customer.CustomerAttribute> customerAccountAttribute) throws Exception
	{
		return updateAccountAttributeClient( accountId,  false,  customerAccountAttribute);
	}

/**
	* Update a single customer account attribute by providing the customer account ID. This operation can optionally indicate whether or not items missing from the collection should be removed.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> mozuClient=UpdateAccountAttributeClient( accountId,  removeMissing,  customerAccountAttribute);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerAttribute customerAttribute = client.Result();
	* </code></pre></p>
	* @param accountId Identifier of the customer account associated with the attribute.
	* @param removeMissing If true, remove the items missing from the collection. If false, do not remove items missing from the collection.
	* @param customerAccountAttribute The properties of the customer account attribute being updated.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.customer.CustomerAttribute>>
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	* @see com.mozu.api.contracts.customer.CustomerAttribute
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> updateAccountAttributeClient(Integer accountId, Boolean removeMissing, ArrayList<com.mozu.api.contracts.customer.CustomerAttribute> customerAccountAttribute) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerAttributeUrl.updateAccountAttributeUrl(accountId, removeMissing);
		String verb = "PUT";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>(){}.getClass();
		MozuClient<ArrayList<com.mozu.api.contracts.customer.CustomerAttribute>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(customerAccountAttribute);
		return mozuClient;

	}

	
}



