/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.customer;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Merchants create, view, update and delete groups. Groups are useful to manage sets of customers, for example, to offer discounts to particular groups or assign VIP status to a set of customers. A customer account can have several groups or none at all.
/// </summary>
public class CustomerGroupClient {
	
	
	/**
	* Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> mozuClient=GetGroupsClient();
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerGroupCollection customerGroupCollection = client.Result();
	* </code></pre></p>
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerGroupCollection>
	* @see com.mozu.api.contracts.customer.CustomerGroupCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> getGroupsClient() throws Exception
	{
		return getGroupsClient( null,  null,  null,  null);
	}

/**
	* Retrieves a list of all customer groups defined for the site according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> mozuClient=GetGroupsClient( filter,  pageSize,  sortBy,  startIndex);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerGroupCollection customerGroupCollection = client.Result();
	* </code></pre></p>
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerGroupCollection>
	* @see com.mozu.api.contracts.customer.CustomerGroupCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> getGroupsClient(String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.CustomerGroupUrl.getGroupsUrl(filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerGroupCollection.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the name of a customer group specified the customer group ID.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient=GetGroupClient( groupId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerGroup customerGroup = client.Result();
	* </code></pre></p>
	* @param groupId Identifier of the customer group to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerGroup>
	* @see com.mozu.api.contracts.customer.CustomerGroup
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerGroup> getGroupClient(Integer groupId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.CustomerGroupUrl.getGroupUrl(groupId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerGroup.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Creates a new customer group. New customer groups do not have any associated customer accounts.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient=AddGroupClient( customerGroup);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerGroup customerGroup = client.Result();
	* </code></pre></p>
	* @param customerGroup Properties of the customer group to create.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerGroup>
	* @see com.mozu.api.contracts.customer.CustomerGroup
	* @see com.mozu.api.contracts.customer.CustomerGroup
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerGroup> addGroupClient(com.mozu.api.contracts.customer.CustomerGroup customerGroup) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.CustomerGroupUrl.addGroupUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerGroup.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(customerGroup);
		return mozuClient;

	}

	/**
	* Changes the name of an existing customer group.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient=UpdateGroupClient( groupId,  customerGroup);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerGroup customerGroup = client.Result();
	* </code></pre></p>
	* @param groupId Identifier of the customer group to update.
	* @param customerGroup New name of the customer group.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerGroup>
	* @see com.mozu.api.contracts.customer.CustomerGroup
	* @see com.mozu.api.contracts.customer.CustomerGroup
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerGroup> updateGroupClient(Integer groupId, com.mozu.api.contracts.customer.CustomerGroup customerGroup) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.CustomerGroupUrl.updateGroupUrl(groupId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerGroup.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(customerGroup);
		return mozuClient;

	}

	/**
	* Deletes a customer group specified by its unique identifier. Deleting a group removes any customer account associations, but does not delete the customer account itself.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteGroupClient( groupId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param groupId Identifier of the customer group to delete.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteGroupClient(Integer groupId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.CustomerGroupUrl.deleteGroupUrl(groupId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



