/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.orders;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class OrderAttributeClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient=GetOrderAttributesClient( orderId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderAttribute orderAttribute = client.Result();
	 * </code></pre></p>
	 * @param orderId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> getOrderAttributesClient(String orderId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.orders.OrderAttributeUrl.getOrderAttributesUrl(orderId);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient=CreateOrderAttributesClient( orderAttributes,  orderId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderAttribute orderAttribute = client.Result();
	 * </code></pre></p>
	 * @param orderId 
	 * @param authTicket User Auth Ticket
	 * @param orderAttributes 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> createOrderAttributesClient(List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute> orderAttributes, String orderId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.orders.OrderAttributeUrl.createOrderAttributesUrl(orderId);
		String verb = "POST";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderAttributes);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient=UpdateOrderAttributesClient( orderAttributes,  orderId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderAttribute orderAttribute = client.Result();
	 * </code></pre></p>
	 * @param orderId 
	 * @param authTicket User Auth Ticket
	 * @param orderAttributes 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> updateOrderAttributesClient(List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute> orderAttributes, String orderId) throws Exception
	{
		return updateOrderAttributesClient( orderAttributes,  orderId,  false, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient=UpdateOrderAttributesClient( orderAttributes,  orderId,  removeMissing, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderAttribute orderAttribute = client.Result();
	 * </code></pre></p>
	 * @param orderId 
	 * @param removeMissing 
	 * @param authTicket User Auth Ticket
	 * @param orderAttributes 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderAttribute
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> updateOrderAttributesClient(List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute> orderAttributes, String orderId, Boolean removeMissing, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.orders.OrderAttributeUrl.updateOrderAttributesUrl(orderId, removeMissing);
		String verb = "PUT";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderAttribute>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderAttributes);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



