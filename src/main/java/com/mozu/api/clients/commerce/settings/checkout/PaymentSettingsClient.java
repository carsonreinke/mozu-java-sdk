/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.settings.checkout;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class PaymentSettingsClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> mozuClient=GetPaymentSettingsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * PaymentSettings paymentSettings = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.PaymentSettings>
	 * @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> getPaymentSettingsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.getPaymentSettingsUrl();
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.PaymentSettings.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient=GetActiveGatewayForCountryClient( countryCode, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Gateway gateway = client.Result();
	 * </code></pre></p>
	 * @param countryCode 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.Gateway>
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> getActiveGatewayForCountryClient(String countryCode, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.getActiveGatewayForCountryUrl(countryCode);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.Gateway.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.paymentservice.GatewayDefinition>> mozuClient=GetGatewayDefinitionsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * GatewayDefinition gatewayDefinition = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.paymentservice.GatewayDefinition>>
	 * @see com.mozu.api.contracts.paymentservice.GatewayDefinition
	 */
	public static MozuClient<List<com.mozu.api.contracts.paymentservice.GatewayDefinition>> getGatewayDefinitionsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.getGatewayDefinitionsUrl();
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.paymentservice.GatewayDefinition>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.paymentservice.GatewayDefinition>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient=GetGatewayClient( gatewayId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Gateway gateway = client.Result();
	 * </code></pre></p>
	 * @param gatewayId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.Gateway>
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> getGatewayClient(String gatewayId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.getGatewayUrl(gatewayId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.Gateway.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition>> mozuClient=GetThirdPartyPaymentWorkflowsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ExternalPaymentWorkflowDefinition externalPaymentWorkflowDefinition = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition>>
	 * @see com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition
	 */
	public static MozuClient<List<com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition>> getThirdPartyPaymentWorkflowsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.getThirdPartyPaymentWorkflowsUrl();
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.sitesettings.order.ExternalPaymentWorkflowDefinition>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient=CreateGatewayClient( gateway, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Gateway gateway = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param gateway 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.Gateway>
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> createGatewayClient(com.mozu.api.contracts.sitesettings.order.Gateway gateway, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.createGatewayUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.Gateway.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(gateway);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> mozuClient=UpdatePaymentSettingsClient( paymentSettings, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * PaymentSettings paymentSettings = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param paymentSettings 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.PaymentSettings>
	 * @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	 * @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> updatePaymentSettingsClient(com.mozu.api.contracts.sitesettings.order.PaymentSettings paymentSettings, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.updatePaymentSettingsUrl();
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.PaymentSettings.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(paymentSettings);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient=UpdateGatewayClient( gateway,  gatewayId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Gateway gateway = client.Result();
	 * </code></pre></p>
	 * @param gatewayId 
	 * @param authTicket User Auth Ticket
	 * @param gateway 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.Gateway>
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 * @see com.mozu.api.contracts.sitesettings.order.Gateway
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> updateGatewayClient(com.mozu.api.contracts.sitesettings.order.Gateway gateway, String gatewayId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.checkout.PaymentSettingsUrl.updateGatewayUrl(gatewayId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.Gateway.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(gateway);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



