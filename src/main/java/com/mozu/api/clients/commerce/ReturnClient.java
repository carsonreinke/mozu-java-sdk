/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class ReturnClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> mozuClient=GetReturnsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ReturnCollection returnCollection = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.ReturnCollection>
	 * @see com.mozu.api.contracts.commerceruntime.returns.ReturnCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> getReturnsClient() throws Exception
	{
		return getReturnsClient( null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> mozuClient=GetReturnsClient( filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ReturnCollection returnCollection = client.Result();
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.ReturnCollection>
	 * @see com.mozu.api.contracts.commerceruntime.returns.ReturnCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> getReturnsClient(String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getReturnsUrl(filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.ReturnCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient=GetReturnClient( returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Return return = client.Result();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.Return>
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> getReturnClient(String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getReturnUrl(returnId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.Return.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<String>> mozuClient=GetAvailableReturnActionsClient( returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * string string = client.Result();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <List<string>>
	 * @see string
	 */
	public static MozuClient<List<String>> getAvailableReturnActionsClient(String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getAvailableReturnActionsUrl(returnId);
		String verb = "GET";
		Class<?> clz = new ArrayList<String>(){}.getClass();
		MozuClient<List<String>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.PaymentCollection> mozuClient=GetPaymentsClient( returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * PaymentCollection paymentCollection = client.Result();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.PaymentCollection>
	 * @see com.mozu.api.contracts.commerceruntime.payments.PaymentCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.PaymentCollection> getPaymentsClient(String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getPaymentsUrl(returnId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.PaymentCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.PaymentCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.Payment> mozuClient=GetPaymentClient( paymentId,  returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Payment payment = client.Result();
	 * </code></pre></p>
	 * @param paymentId 
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.Payment>
	 * @see com.mozu.api.contracts.commerceruntime.payments.Payment
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.Payment> getPaymentClient(String paymentId, String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getPaymentUrl(paymentId, returnId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.Payment.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.Payment> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<String>> mozuClient=GetAvailablePaymentActionsForReturnClient( paymentId,  returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * string string = client.Result();
	 * </code></pre></p>
	 * @param paymentId 
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <List<string>>
	 * @see string
	 */
	public static MozuClient<List<String>> getAvailablePaymentActionsForReturnClient(String paymentId, String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.getAvailablePaymentActionsForReturnUrl(paymentId, returnId);
		String verb = "GET";
		Class<?> clz = new ArrayList<String>(){}.getClass();
		MozuClient<List<String>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient=CreateReturnClient( ret, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Return return = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param ret 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.Return>
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> createReturnClient(com.mozu.api.contracts.commerceruntime.returns.Return ret, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.createReturnUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.Return.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(ret);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient=PerformPaymentActionForReturnClient( action,  paymentId,  returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Return return = client.Result();
	 * </code></pre></p>
	 * @param paymentId 
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @param action 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.Return>
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 * @see com.mozu.api.contracts.commerceruntime.payments.PaymentAction
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> performPaymentActionForReturnClient(com.mozu.api.contracts.commerceruntime.payments.PaymentAction action, String paymentId, String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.performPaymentActionForReturnUrl(paymentId, returnId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.Return.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(action);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient=CreatePaymentActionForReturnClient( action,  returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Return return = client.Result();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @param action 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.Return>
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 * @see com.mozu.api.contracts.commerceruntime.payments.PaymentAction
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> createPaymentActionForReturnClient(com.mozu.api.contracts.commerceruntime.payments.PaymentAction action, String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.createPaymentActionForReturnUrl(returnId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.Return.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(action);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> mozuClient=PerformReturnActionsClient( action, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ReturnCollection returnCollection = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param action 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.ReturnCollection>
	 * @see com.mozu.api.contracts.commerceruntime.returns.ReturnCollection
	 * @see com.mozu.api.contracts.commerceruntime.returns.ReturnAction
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> performReturnActionsClient(com.mozu.api.contracts.commerceruntime.returns.ReturnAction action, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.performReturnActionsUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.ReturnCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.ReturnCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(action);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient=UpdateReturnClient( ret,  returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Return return = client.Result();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @param ret 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.returns.Return>
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 * @see com.mozu.api.contracts.commerceruntime.returns.Return
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> updateReturnClient(com.mozu.api.contracts.commerceruntime.returns.Return ret, String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.updateReturnUrl(returnId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.returns.Return.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.returns.Return> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(ret);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteReturnClient( returnId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param returnId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deleteReturnClient(String returnId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ReturnUrl.deleteReturnUrl(returnId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



