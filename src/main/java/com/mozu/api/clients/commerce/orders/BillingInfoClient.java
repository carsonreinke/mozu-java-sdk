/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.orders;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Billing Info subresource to manage the billing information stored for an order.
/// </summary>
public class BillingInfoClient {
	
	
	/**
	* Retrieves the billing information associated with an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=GetBillingInfoClient( orderId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* BillingInfo billingInfo = client.Result();
	* </code></pre></p>
	* @param orderId Unique identifier of the order.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> getBillingInfoClient(String orderId) throws Exception
	{
		return getBillingInfoClient( false,  orderId);
	}

/**
	* Retrieves the billing information associated with an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=GetBillingInfoClient( draft,  orderId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* BillingInfo billingInfo = client.Result();
	* </code></pre></p>
	* @param draft If true, retrieve the draft version of the order billing information, which might include uncommitted changes.
	* @param orderId Unique identifier of the order.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> getBillingInfoClient(Boolean draft, String orderId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.BillingInfoUrl.getBillingInfoUrl(draft, orderId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.BillingInfo.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

		/**
	* Updates the billing information supplied for an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=SetBillingInfoClient( orderId,  billingInfo);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* BillingInfo billingInfo = client.Result();
	* </code></pre></p>
	* @param orderId Unique identifier of the order.
	* @param billingInfo The properties of the order billing information to update.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> setBillingInfoClient(String orderId, com.mozu.api.contracts.commerceruntime.payments.BillingInfo billingInfo) throws Exception
	{
		return setBillingInfoClient( orderId,  null,  null,  billingInfo);
	}

/**
	* Updates the billing information supplied for an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=SetBillingInfoClient( orderId,  updateMode,  version,  billingInfo);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* BillingInfo billingInfo = client.Result();
	* </code></pre></p>
	* @param orderId Unique identifier of the order.
	* @param updateMode Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".
	* @param version If applicable, the version of the order or draft for which to set the billing information.
	* @param billingInfo The properties of the order billing information to update.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	* @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> setBillingInfoClient(String orderId, String updateMode, String version, com.mozu.api.contracts.commerceruntime.payments.BillingInfo billingInfo) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.BillingInfoUrl.setBillingInfoUrl(orderId, updateMode, version);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.BillingInfo.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(billingInfo);
		return mozuClient;

	}

	
}



