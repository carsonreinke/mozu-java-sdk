/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.orders;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use this subresource to manage notes associated with an active order.
/// </summary>
public class OrderNoteClient {
	
	
	/**
	* Retrieves a list of all notes for an order.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> mozuClient=GetOrderNotesClient( orderId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* OrderNote orderNote = client.Result();
	* </code></pre></p>
	* @param orderId Unique identifier of the order whose notes are retrieved.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>>
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> getOrderNotesClient(String orderId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.OrderNoteUrl.getOrderNotesUrl(orderId);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>(){}.getClass();
		MozuClient<ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves a specific order note from an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=GetOrderNoteClient( noteId,  orderId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* OrderNote orderNote = client.Result();
	* </code></pre></p>
	* @param noteId Unique identifier of the note text to retrieve.
	* @param orderId Unique identifier of the order note to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> getOrderNoteClient(String noteId, String orderId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.OrderNoteUrl.getOrderNoteUrl(noteId, orderId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Adds a note to the order. This is an internal note that the merchant can add to an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=CreateOrderNoteClient( orderId,  orderNote);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* OrderNote orderNote = client.Result();
	* </code></pre></p>
	* @param orderId Unique identifier of the order to add a note.
	* @param orderNote The Unicode alphanumeric text contained in the note. Max length: 256 characters.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> createOrderNoteClient(String orderId, com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.OrderNoteUrl.createOrderNoteUrl(orderId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderNote);
		return mozuClient;

	}

	/**
	* Updates a specific order note for an order.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=UpdateOrderNoteClient( noteId,  orderId,  orderNote);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* OrderNote orderNote = client.Result();
	* </code></pre></p>
	* @param noteId Unique identifier of the note whose text is being updated.
	* @param orderId Unique identifier of the order whose note is being updated.
	* @param orderNote The Unicode alphanumeric text contained in the note.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> updateOrderNoteClient(String noteId, String orderId, com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.OrderNoteUrl.updateOrderNoteUrl(noteId, orderId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderNote);
		return mozuClient;

	}

	/**
	* Deletes a specific order note on an order.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteOrderNoteClient( noteId,  orderId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param noteId Unique identifier of the note text to delete.
	* @param orderId Unique identifier of the order note to delete.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteOrderNoteClient(String noteId, String orderId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.orders.OrderNoteUrl.deleteOrderNoteUrl(noteId, orderId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



