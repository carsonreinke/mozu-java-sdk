/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.catalog.admin.products;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
/// </summary>
public class ProductExtraClient {
	
	
	/**
	* Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
	* <p><pre><code>
	*   MozuClient<ArrayList<com.mozu.api.contracts.productadmin.ProductExtra>> mozuClient=GetExtrasClient( productCode);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* ProductExtra productExtra = client.Result();
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.productadmin.ProductExtra>>
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public static MozuClient<ArrayList<com.mozu.api.contracts.productadmin.ProductExtra>> getExtrasClient(String productCode) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.products.ProductExtraUrl.getExtrasUrl(productCode);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.productadmin.ProductExtra>(){}.getClass();
		MozuClient<ArrayList<com.mozu.api.contracts.productadmin.ProductExtra>> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the details of an extra attribute configuration for the product specified in the request.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient=GetExtraClient( attributeFQN,  productCode);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* ProductExtra productExtra = client.Result();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.ProductExtra>
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> getExtraClient(String attributeFQN, String productCode) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.products.ProductExtraUrl.getExtraUrl(attributeFQN, productCode);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.productadmin.ProductExtra.class;
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Configure an extra attribute for the product specified in the request.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient=AddExtraClient( productCode,  productExtra);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* ProductExtra productExtra = client.Result();
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param productExtra Properties of the product extra to configure for the specified product.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.ProductExtra>
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> addExtraClient(String productCode, com.mozu.api.contracts.productadmin.ProductExtra productExtra) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.products.ProductExtraUrl.addExtraUrl(productCode);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.productadmin.ProductExtra.class;
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(productExtra);
		return mozuClient;

	}

	/**
	* Updates the configuration of an extra attribute for the product specified in the request.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient=UpdateExtraClient( attributeFQN,  productCode,  productExtra);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* ProductExtra productExtra = client.Result();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param productExtra Properties of the extra attribute to update for the specified product.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.productadmin.ProductExtra>
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public static MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> updateExtraClient(String attributeFQN, String productCode, com.mozu.api.contracts.productadmin.ProductExtra productExtra) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.products.ProductExtraUrl.updateExtraUrl(attributeFQN, productCode);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.productadmin.ProductExtra.class;
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(productExtra);
		return mozuClient;

	}

	/**
	* Delete a product extra configuration for the product specified in the request.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteExtraClient( attributeFQN,  productCode);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteExtraClient(String attributeFQN, String productCode) throws Exception
	{
		String url = com.mozu.api.urls.commerce.catalog.admin.products.ProductExtraUrl.deleteExtraUrl(attributeFQN, productCode);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



