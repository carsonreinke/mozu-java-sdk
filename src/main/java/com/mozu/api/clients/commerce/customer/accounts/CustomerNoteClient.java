/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.commerce.customer.accounts;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Merchants can add and view internal notes for a customer account. For example, a merchant can track a customer's interests or complaints. Only merchants can add and view notes. Customers cannot see these notes from their My Account page.
/// </summary>
public class CustomerNoteClient {
	
	
	/**
	* Retrieves the contents of a particular note attached to a specified customer account.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient=GetAccountNoteClient( accountId,  noteId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerNote customerNote = client.Result();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account that contains the note being retrieved.
	* @param noteId Unique identifier of a particular note to retrieve.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerNote>
	* @see com.mozu.api.contracts.customer.CustomerNote
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerNote> getAccountNoteClient(Integer accountId, Integer noteId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerNoteUrl.getAccountNoteUrl(accountId, noteId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerNote.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerNoteCollection> mozuClient=GetAccountNotesClient( accountId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerNoteCollection customerNoteCollection = client.Result();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerNoteCollection>
	* @see com.mozu.api.contracts.customer.CustomerNoteCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerNoteCollection> getAccountNotesClient(Integer accountId) throws Exception
	{
		return getAccountNotesClient( accountId,  null,  null,  null,  null);
	}

/**
	* Retrieves a list of notes added to a customer account according to any specified filter criteria and sort options.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerNoteCollection> mozuClient=GetAccountNotesClient( accountId,  filter,  pageSize,  sortBy,  startIndex);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerNoteCollection customerNoteCollection = client.Result();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerNoteCollection>
	* @see com.mozu.api.contracts.customer.CustomerNoteCollection
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerNoteCollection> getAccountNotesClient(Integer accountId, String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerNoteUrl.getAccountNotesUrl(accountId, filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerNoteCollection.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerNoteCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Adds a new note to the specified customer account.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient=AddAccountNoteClient( accountId,  customerNote);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerNote customerNote = client.Result();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account for which to create the note.
	* @param customerNote Contents of the new note.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerNote>
	* @see com.mozu.api.contracts.customer.CustomerNote
	* @see com.mozu.api.contracts.customer.CustomerNote
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerNote> addAccountNoteClient(Integer accountId, com.mozu.api.contracts.customer.CustomerNote customerNote) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerNoteUrl.addAccountNoteUrl(accountId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerNote.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(customerNote);
		return mozuClient;

	}

	/**
	* Modifies an existing note for a customer account.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient=UpdateAccountNoteClient( accountId,  noteId,  note);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* CustomerNote customerNote = client.Result();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account note to modify.
	* @param noteId Unique identifier of the note to update.
	* @param note The new content to replace the existing note.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerNote>
	* @see com.mozu.api.contracts.customer.CustomerNote
	* @see com.mozu.api.contracts.customer.CustomerNote
	*/
	public static MozuClient<com.mozu.api.contracts.customer.CustomerNote> updateAccountNoteClient(Integer accountId, Integer noteId, com.mozu.api.contracts.customer.CustomerNote note) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerNoteUrl.updateAccountNoteUrl(accountId, noteId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerNote.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerNote> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(note);
		return mozuClient;

	}

	/**
	* Removes a note from the specified customer account.
	* <p><pre><code>
	*   MozuClient mozuClient=DeleteAccountNoteClient( accountId,  noteId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account that contains the note being deleted.
	* @param noteId Unique identifier of the customer account note being deleted.
	* @return Mozu.Api.MozuClient 
	*/
	public static MozuClient deleteAccountNoteClient(Integer accountId, Integer noteId) throws Exception
	{
		String url = com.mozu.api.urls.commerce.customer.accounts.CustomerNoteUrl.deleteAccountNoteUrl(accountId, noteId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}


}



