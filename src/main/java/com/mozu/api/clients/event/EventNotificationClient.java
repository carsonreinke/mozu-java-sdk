/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.event;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class EventNotificationClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.event.EventCollection> mozuClient=GetEventsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * EventCollection eventCollection = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.event.EventCollection>
	 * @see com.mozu.api.contracts.event.EventCollection
	 */
	public static MozuClient<com.mozu.api.contracts.event.EventCollection> getEventsClient() throws Exception
	{
		return getEventsClient( null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.event.EventCollection> mozuClient=GetEventsClient( filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * EventCollection eventCollection = client.Result();
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.event.EventCollection>
	 * @see com.mozu.api.contracts.event.EventCollection
	 */
	public static MozuClient<com.mozu.api.contracts.event.EventCollection> getEventsClient(String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.event.EventNotificationUrl.getEventsUrl(filter, pageSize, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.event.EventCollection.class;
		MozuClient<com.mozu.api.contracts.event.EventCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.event.Event> mozuClient=GetEventClient( eventId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Event event = client.Result();
	 * </code></pre></p>
	 * @param eventId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.event.Event>
	 * @see com.mozu.api.contracts.event.Event
	 */
	public static MozuClient<com.mozu.api.contracts.event.Event> getEventClient(String eventId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.event.EventNotificationUrl.getEventUrl(eventId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.event.Event.class;
		MozuClient<com.mozu.api.contracts.event.Event> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



