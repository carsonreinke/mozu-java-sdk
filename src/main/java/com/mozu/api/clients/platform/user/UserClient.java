/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.clients.platform.user;

import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use this resource to manage shopper accounts for your Mozu tenant.
/// </summary>
public class UserClient {
	
	
	/**
	* Retrieves the details of a user account by supplying the user's email address.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.core.User> mozuClient=GetUserByEmailClient( emailAddress);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* User user = client.Result();
	* </code></pre></p>
	* @param emailAddress The email address of the specified user or the email address associated with the specified entity.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.core.User>
	* @see com.mozu.api.contracts.core.User
	*/
	public static MozuClient<com.mozu.api.contracts.core.User> getUserByEmailClient(String emailAddress) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.getUserByEmailUrl(emailAddress);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.core.User.class;
		MozuClient<com.mozu.api.contracts.core.User> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

/**
	* Retrieves the details of a user account by supplying the user ID.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.core.User> mozuClient=GetUserClient( userId);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* User user = client.Result();
	* </code></pre></p>
	* @param userId Unique identifier of the user.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.core.User>
	* @see com.mozu.api.contracts.core.User
	*/
	public static MozuClient<com.mozu.api.contracts.core.User> getUserClient(String userId) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.getUserUrl(userId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.core.User.class;
		MozuClient<com.mozu.api.contracts.core.User> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	* Creates a new shopper user account.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.core.User> mozuClient=CreateUserClient( shopper);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* User user = client.Result();
	* </code></pre></p>
	* @param shopper Properties of the new shopper user account to create.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.core.User>
	* @see com.mozu.api.contracts.core.User
	* @see com.mozu.api.contracts.core.User
	*/
	public static MozuClient<com.mozu.api.contracts.core.User> createUserClient(com.mozu.api.contracts.core.User shopper) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.createUserUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.core.User.class;
		MozuClient<com.mozu.api.contracts.core.User> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(shopper);
		return mozuClient;

	}

/**
	* Creates a bulk collection of new shopper user accounts.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.core.UserCollection> mozuClient=CreateUsersClient( users);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* UserCollection userCollection = client.Result();
	* </code></pre></p>
	* @param users Properties of the new shopper user accounts to create.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.core.UserCollection>
	* @see com.mozu.api.contracts.core.UserCollection
	* @see com.mozu.api.contracts.core.UserCollection
	*/
	public static MozuClient<com.mozu.api.contracts.core.UserCollection> createUsersClient(com.mozu.api.contracts.core.UserCollection users) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.createUsersUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.core.UserCollection.class;
		MozuClient<com.mozu.api.contracts.core.UserCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(users);
		return mozuClient;

	}

/**
	* Logs a shopper user in to a tenant.
	* <p><pre><code>
	*   MozuClient<com.mozu.api.contracts.user.UserLoginResult> mozuClient=LoginClient( userAuthInfo);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* UserLoginResult userLoginResult = client.Result();
	* </code></pre></p>
	* @param userAuthInfo The authentication information required to log the user in, which consists of email address and password.
	* @return Mozu.Api.MozuClient <com.mozu.api.contracts.user.UserLoginResult>
	* @see com.mozu.api.contracts.user.UserLoginResult
	* @see com.mozu.api.contracts.core.UserAuthInfo
	*/
	public static MozuClient<com.mozu.api.contracts.user.UserLoginResult> loginClient(com.mozu.api.contracts.core.UserAuthInfo userAuthInfo) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.loginUrl();
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.user.UserLoginResult.class;
		MozuClient<com.mozu.api.contracts.user.UserLoginResult> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(userAuthInfo);
		return mozuClient;

	}

/**
	* Reset the shopper user password by supplying the email address.
	* <p><pre><code>
	*   MozuClient mozuClient=ResetPasswordClient( resetPasswordInfo);
	* client.setBaseAddress(url);
	* client.executeRequest();
	* </code></pre></p>
	* @param resetPasswordInfo The information required to reset the password, which consists of the user email address.
	* @return Mozu.Api.MozuClient 
	* @see com.mozu.api.contracts.user.ResetPasswordInfo
	*/
	public static MozuClient resetPasswordClient(com.mozu.api.contracts.user.ResetPasswordInfo resetPasswordInfo) throws Exception
	{
		String url = com.mozu.api.urls.platform.user.UserUrl.resetPasswordUrl();
		String verb = "POST";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(resetPasswordInfo);
		return mozuClient;

	}

		
}



