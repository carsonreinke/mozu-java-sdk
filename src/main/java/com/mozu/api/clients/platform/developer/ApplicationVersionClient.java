/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.platform.developer;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class ApplicationVersionClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.ApplicationCollection> mozuClient=GetAllApplicationsClient(authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ApplicationCollection applicationCollection = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.ApplicationCollection>
	 * @see com.mozu.api.contracts.appdev.ApplicationCollection
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.ApplicationCollection> getAllApplicationsClient(AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getAllApplicationsUrl();
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.ApplicationCollection.class;
		MozuClient<com.mozu.api.contracts.appdev.ApplicationCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.Application> mozuClient=GetApplicationClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Application application = client.Result();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.Application>
	 * @see com.mozu.api.contracts.appdev.Application
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.Application> getApplicationClient() throws Exception
	{
		return getApplicationClient( null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.Application> mozuClient=GetApplicationClient( applicationId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Application application = client.Result();
	 * </code></pre></p>
	 * @param applicationId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.Application>
	 * @see com.mozu.api.contracts.appdev.Application
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.Application> getApplicationClient(Integer applicationId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getApplicationUrl(applicationId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.Application.class;
		MozuClient<com.mozu.api.contracts.appdev.Application> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.ApplicationVersion> mozuClient=GetApplicationVersionClient( applicationVersionId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ApplicationVersion applicationVersion = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.ApplicationVersion>
	 * @see com.mozu.api.contracts.appdev.ApplicationVersion
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.ApplicationVersion> getApplicationVersionClient(Integer applicationVersionId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getApplicationVersionUrl(applicationVersionId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.ApplicationVersion.class;
		MozuClient<com.mozu.api.contracts.appdev.ApplicationVersion> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.PackageCollection> mozuClient=GetPackagesClient( applicationVersionId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * PackageCollection packageCollection = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.PackageCollection>
	 * @see com.mozu.api.contracts.appdev.PackageCollection
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.PackageCollection> getPackagesClient(Integer applicationVersionId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getPackagesUrl(applicationVersionId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.PackageCollection.class;
		MozuClient<com.mozu.api.contracts.appdev.PackageCollection> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.Package> mozuClient=GetPackageClient( applicationVersionId,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Package package = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.Package>
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.Package> getPackageClient(Integer applicationVersionId, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getPackageUrl(applicationVersionId, packageId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.Package.class;
		MozuClient<com.mozu.api.contracts.appdev.Package> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.FolderMetadata> mozuClient=GetPackageItemsMetadataClient( applicationVersionId,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FolderMetadata folderMetadata = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.FolderMetadata>
	 * @see com.mozu.api.contracts.appdev.FolderMetadata
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.FolderMetadata> getPackageItemsMetadataClient(Integer applicationVersionId, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getPackageItemsMetadataUrl(applicationVersionId, packageId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.FolderMetadata.class;
		MozuClient<com.mozu.api.contracts.appdev.FolderMetadata> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient=GetPackageItemMetadataClient( applicationVersionId,  itempath,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FileMetadata fileMetadata = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param itempath 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.FileMetadata>
	 * @see com.mozu.api.contracts.appdev.FileMetadata
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.FileMetadata> getPackageItemMetadataClient(Integer applicationVersionId, String itempath, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getPackageItemMetadataUrl(applicationVersionId, itempath, packageId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.appdev.FileMetadata.class;
		MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=GetPackageFilesZipClient( applicationVersionId,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient getPackageFilesZipClient(Integer applicationVersionId, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.getPackageFilesZipUrl(applicationVersionId, packageId);
		String verb = "GET";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.Package> mozuClient=AddPackageClient( pkg,  applicationVersionId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Package package = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param authTicket User Auth Ticket
	 * @param package 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.Package>
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.Package> addPackageClient(com.mozu.api.contracts.appdev.Package pkg, Integer applicationVersionId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.addPackageUrl(applicationVersionId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.appdev.Package.class;
		MozuClient<com.mozu.api.contracts.appdev.Package> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(pkg);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient=AddPackageFileClient( stream,  applicationVersionId,  filepath,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FileMetadata fileMetadata = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.FileMetadata>
	 * @see com.mozu.api.contracts.appdev.FileMetadata
	 * @see Stream
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.FileMetadata> addPackageFileClient(java.io.InputStream stream, Integer applicationVersionId, String filepath, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.addPackageFileUrl(applicationVersionId, filepath, packageId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.appdev.FileMetadata.class;
		MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(stream);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient=ChangePackageFileNameOrPathClient( renameInfo,  applicationVersionId,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FileMetadata fileMetadata = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @param renameInfo 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.FileMetadata>
	 * @see com.mozu.api.contracts.appdev.FileMetadata
	 * @see com.mozu.api.contracts.appdev.RenameInfo
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.FileMetadata> changePackageFileNameOrPathClient(com.mozu.api.contracts.appdev.RenameInfo renameInfo, Integer applicationVersionId, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.changePackageFileNameOrPathUrl(applicationVersionId, packageId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.appdev.FileMetadata.class;
		MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(renameInfo);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient=UpdatePackageFileClient( stream,  applicationVersionId,  filepath,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * FileMetadata fileMetadata = client.Result();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.appdev.FileMetadata>
	 * @see com.mozu.api.contracts.appdev.FileMetadata
	 * @see Stream
	 */
	public static MozuClient<com.mozu.api.contracts.appdev.FileMetadata> updatePackageFileClient(java.io.InputStream stream, Integer applicationVersionId, String filepath, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.updatePackageFileUrl(applicationVersionId, filepath, packageId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.appdev.FileMetadata.class;
		MozuClient<com.mozu.api.contracts.appdev.FileMetadata> mozuClient = new MozuClient(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(stream);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeletePackageFileClient( applicationVersionId,  filepath,  packageId, authTicket);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @param authTicket User Auth Ticket
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deletePackageFileClient(Integer applicationVersionId, String filepath, Integer packageId, AuthTicket authTicket) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.platform.developer.ApplicationVersionUrl.deletePackageFileUrl(applicationVersionId, filepath, packageId);
		String verb = "DELETE";
				MozuClient mozuClient = new MozuClient();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		if (authTicket != null)
			mozuClient.setUserAuth(authTicket);
		return mozuClient;

	}

}



