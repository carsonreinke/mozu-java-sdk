
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.content;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.content.LocalizedString;
import com.mozu.api.contracts.content.PropertyType;


/**
*	The type of documents used in the CMS such as "web_page" or "template" or "image_url".
*/
public class DocumentType implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*User-defined description of the document type.
	*/
	@JsonProperty("Description")
	protected String description;

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	/**
	*The name that displays for the document type.
	*/
	@JsonProperty("DisplayName")
	protected String displayName;

	public String getDisplayName() {
		return this.displayName;
	}

	public void setDisplayName(String displayName) {
		this.displayName = displayName;
	}

	/**
	*The document type scope specifies where the the template can be used such as "Global".
	*/
	@JsonProperty("DocumentTypeScope")
	protected String documentTypeScope;

	public String getDocumentTypeScope() {
		return this.documentTypeScope;
	}

	public void setDocumentTypeScope(String documentTypeScope) {
		this.documentTypeScope = documentTypeScope;
	}

	/**
	*The name of the document type.
	*/
	@JsonProperty("Name")
	protected String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	*If applicable, the name of the parent document type.
	*/
	@JsonProperty("ParentTypeName")
	protected String parentTypeName;

	public String getParentTypeName() {
		return this.parentTypeName;
	}

	public void setParentTypeName(String parentTypeName) {
		this.parentTypeName = parentTypeName;
	}

	/**
	*List of content entity descriptions localized to the site or site group's default language.
	*/
	@JsonProperty("LocalizedDescriptions")
	protected ArrayList<LocalizedString> localizedDescriptions;
	public ArrayList<LocalizedString> getLocalizedDescriptions() {
		return this.localizedDescriptions;
	}
	public void setLocalizedDescriptions(ArrayList<LocalizedString> localizedDescriptions) {
		this.localizedDescriptions = localizedDescriptions;
	}

	/**
	*List of content entity display names localized to the site or site group's default language.
	*/
	@JsonProperty("LocalizedDisplayNames")
	protected ArrayList<LocalizedString> localizedDisplayNames;
	public ArrayList<LocalizedString> getLocalizedDisplayNames() {
		return this.localizedDisplayNames;
	}
	public void setLocalizedDisplayNames(ArrayList<LocalizedString> localizedDisplayNames) {
		this.localizedDisplayNames = localizedDisplayNames;
	}

	/**
	*List of content property types associated with the document type.
	*/
	@JsonProperty("PropertyTypes")
	protected ArrayList<PropertyType> propertyTypes;
	public ArrayList<PropertyType> getPropertyTypes() {
		return this.propertyTypes;
	}
	public void setPropertyTypes(ArrayList<PropertyType> propertyTypes) {
		this.propertyTypes = propertyTypes;
	}

}
