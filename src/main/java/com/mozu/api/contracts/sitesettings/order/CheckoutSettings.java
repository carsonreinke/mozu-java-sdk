
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.sitesettings.order;

import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.sitesettings.order.CustomerCheckoutSettings;
import com.mozu.api.contracts.sitesettings.order.OrderProcessingSettings;
import com.mozu.api.contracts.sitesettings.order.PaymentSettings;


/**
*	Settings used when checking out an active order.
*/
public class CheckoutSettings implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
	*/
	@JsonProperty("CustomerCheckoutSettings")
	protected CustomerCheckoutSettings customerCheckoutSettings;

	public CustomerCheckoutSettings getCustomerCheckoutSettings() {
		return this.customerCheckoutSettings;
	}

	public void setCustomerCheckoutSettings(CustomerCheckoutSettings customerCheckoutSettings) {
		this.customerCheckoutSettings = customerCheckoutSettings;
	}

	/**
	*Credit card payment authorization setting defined for the site. Choose whether or not the shopper's credit card is authorized and charged. Possibilities include, "authorize and charge the shopper's credit card for the full order amount when the order is placed," "authorize the shopper's credit card for the full amount when the order is placed and charge the credit card when the order is shipped," or "authorize and charge the shopper's credit card for the full amount when the order is shipped." Check on these phrases. According to Eric Swann, they may have changed]
	*/
	@JsonProperty("OrderProcessingSettings")
	protected OrderProcessingSettings orderProcessingSettings;

	public OrderProcessingSettings getOrderProcessingSettings() {
		return this.orderProcessingSettings;
	}

	public void setOrderProcessingSettings(OrderProcessingSettings orderProcessingSettings) {
		this.orderProcessingSettings = orderProcessingSettings;
	}

	/**
	*Payment gateway settings defined for the site. A payment gateway is an eCommerce application service provider that authorizes payments for eBusinesses, online retailers, and other stores that have an online commerce component. Currently, only the Authorize.net gateway is supported.
	*/
	@JsonProperty("PaymentSettings")
	protected PaymentSettings paymentSettings;

	public PaymentSettings getPaymentSettings() {
		return this.paymentSettings;
	}

	public void setPaymentSettings(PaymentSettings paymentSettings) {
		this.paymentSettings = paymentSettings;
	}

}
