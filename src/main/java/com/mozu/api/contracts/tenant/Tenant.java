
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.tenant;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.tenant.Domain;
import com.mozu.api.contracts.tenant.SiteGroup;


/**
*	A Mozu tenant is a scope that can create roles and assign behaviors to a role.
*/
public class Tenant implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Date and time when the entity was created, represented in UTC Date/Time.
	*/
	@JsonProperty("CreateDate")
	protected Date createDate;

	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	/**
	*Alphanumeric identifier of the customer.
	*/
	@JsonProperty("CustomerId")
	protected Integer customerId;

	public Integer getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(Integer customerId) {
		this.customerId = customerId;
	}

	@JsonProperty("DeleteDate")
	protected Date deleteDate;

	public Date getDeleteDate() {
		return this.deleteDate;
	}

	public void setDeleteDate(Date deleteDate) {
		this.deleteDate = deleteDate;
	}

	/**
	*Numeric identifier of the developer account.
	*/
	@JsonProperty("DevAccountId")
	protected Integer devAccountId;

	public Integer getDevAccountId() {
		return this.devAccountId;
	}

	public void setDevAccountId(Integer devAccountId) {
		this.devAccountId = devAccountId;
	}

	/**
	*Identifier of the Mozu tenant.
	*/
	@JsonProperty("Id")
	protected Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@JsonProperty("IsDeleted")
	protected Boolean isDeleted;

	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	/**
	*If true, the tenant is a development store.
	*/
	@JsonProperty("IsDevTenant")
	protected Boolean isDevTenant;

	public Boolean getIsDevTenant() {
		return this.isDevTenant;
	}

	public void setIsDevTenant(Boolean isDevTenant) {
		this.isDevTenant = isDevTenant;
	}

	/**
	*The name of the tenant, if applicable.
	*/
	@JsonProperty("Name")
	protected String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	*Identifier of the ZuKeeper scale unit this tenant belongs to.
	*/
	@JsonProperty("ScaleUnitId")
	protected String scaleUnitId;

	public String getScaleUnitId() {
		return this.scaleUnitId;
	}

	public void setScaleUnitId(String scaleUnitId) {
		this.scaleUnitId = scaleUnitId;
	}

	/**
	*Current status of this tenant.
	*/
	@JsonProperty("Status")
	protected String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	/**
	*Date and time when the entity was last updated, represented in UTC Date/Time.
	*/
	@JsonProperty("UpdateDate")
	protected Date updateDate;

	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	/**
	*The domain information associated with the tenant.
	*/
	@JsonProperty("Domain")
	protected Domain domain;

	public Domain getDomain() {
		return this.domain;
	}

	public void setDomain(Domain domain) {
		this.domain = domain;
	}

	/**
	*List of site groups associated with this tenant, if applicable.
	*/
	@JsonProperty("SiteGroups")
	protected ArrayList<SiteGroup> siteGroups;
	public ArrayList<SiteGroup> getSiteGroups() {
		return this.siteGroups;
	}
	public void setSiteGroups(ArrayList<SiteGroup> siteGroups) {
		this.siteGroups = siteGroups;
	}

}
