
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productruntime;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.productruntime.CategoryContent;
import com.mozu.api.contracts.productruntime.Category;


/**
*	Properties of the product category that appears on the storefront.
*/
public class Category implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Unique identifier for the storefront container used to organize products.
	*/
	@JsonProperty("CategoryId")
	protected Integer categoryId;

	public Integer getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Integer categoryId) {
		this.categoryId = categoryId;
	}

	/**
	*The numeric value that denotes the place this entity occupies in the order of the entity list.
	*/
	@JsonProperty("Sequence")
	protected Integer sequence;

	public Integer getSequence() {
		return this.sequence;
	}

	public void setSequence(Integer sequence) {
		this.sequence = sequence;
	}

	/**
	*Complex type that contains content for a language specified by LocaleCode.
	*/
	@JsonProperty("Content")
	protected CategoryContent content;

	public CategoryContent getContent() {
		return this.content;
	}

	public void setContent(CategoryContent content) {
		this.content = content;
	}

	/**
	*List of the subcategories in the hierarchy for the specified categories.
	*/
	@JsonProperty("ChildrenCategories")
	protected ArrayList<Category> childrenCategories;
	public ArrayList<Category> getChildrenCategories() {
		return this.childrenCategories;
	}
	public void setChildrenCategories(ArrayList<Category> childrenCategories) {
		this.childrenCategories = childrenCategories;
	}

	/**
	*If applicable, the parent category in the hierarchy for the specified category.
	*/
	@JsonProperty("ParentCategory")
	protected Category parentCategory;

	public Category getParentCategory() {
		return this.parentCategory;
	}

	public void setParentCategory(Category parentCategory) {
		this.parentCategory = parentCategory;
	}

}
