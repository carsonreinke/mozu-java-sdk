
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productruntime;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.productruntime.Facet;
import com.mozu.api.contracts.productruntime.Product;


/**
*	The result of a product search.
*/
public class ProductSearchResult implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The number of pages returned based on the startIndex and pageSize values specified. This value is system-supplied and read-only.
	*/
	@JsonProperty("PageCount")
	protected Integer pageCount;

	public Integer getPageCount() {
		return this.pageCount;
	}

	public void setPageCount(Integer pageCount) {
		this.pageCount = pageCount;
	}

	/**
	*Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	*/
	@JsonProperty("PageSize")
	protected Integer pageSize;

	public Integer getPageSize() {
		return this.pageSize;
	}

	public void setPageSize(Integer pageSize) {
		this.pageSize = pageSize;
	}

	@JsonProperty("StartIndex")
	protected Integer startIndex;

	public Integer getStartIndex() {
		return this.startIndex;
	}

	public void setStartIndex(Integer startIndex) {
		this.startIndex = startIndex;
	}

	/**
	*The number of results listed in the query collection, represented by a signed 64-bit (8-byte) integer. This value is system-supplied and read-only.
	*/
	@JsonProperty("TotalCount")
	protected Integer totalCount;

	public Integer getTotalCount() {
		return this.totalCount;
	}

	public void setTotalCount(Integer totalCount) {
		this.totalCount = totalCount;
	}

	/**
	*The facets applied to index products in the product search result.
	*/
	@JsonProperty("Facets")
	protected ArrayList<Facet> facets;
	public ArrayList<Facet> getFacets() {
		return this.facets;
	}
	public void setFacets(ArrayList<Facet> facets) {
		this.facets = facets;
	}

	/**
	*An array list of objects in the returned collection.
	*/
	@JsonProperty("Items")
	protected ArrayList<Product> items;
	public ArrayList<Product> getItems() {
		return this.items;
	}
	public void setItems(ArrayList<Product> items) {
		this.items = items;
	}

}
