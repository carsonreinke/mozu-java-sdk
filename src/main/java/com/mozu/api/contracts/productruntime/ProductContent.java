
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productruntime;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.productruntime.ProductImage;


/**
*	Content associated with a product definition that can be localized.
*/
public class ProductContent implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Description defined for the metadata used to internally manage information about the product.
	*/
	@JsonProperty("MetaTagDescription")
	protected String metaTagDescription;

	public String getMetaTagDescription() {
		return this.metaTagDescription;
	}

	public void setMetaTagDescription(String metaTagDescription) {
		this.metaTagDescription = metaTagDescription;
	}

	/**
	*Keywords defined for the metadata used to internally manage information about the product.
	*/
	@JsonProperty("MetaTagKeywords")
	protected String metaTagKeywords;

	public String getMetaTagKeywords() {
		return this.metaTagKeywords;
	}

	public void setMetaTagKeywords(String metaTagKeywords) {
		this.metaTagKeywords = metaTagKeywords;
	}

	/**
	*Title defined for the metadata used to internally manage information about the product.
	*/
	@JsonProperty("MetaTagTitle")
	protected String metaTagTitle;

	public String getMetaTagTitle() {
		return this.metaTagTitle;
	}

	public void setMetaTagTitle(String metaTagTitle) {
		this.metaTagTitle = metaTagTitle;
	}

	/**
	*Full description of the product, which typically appears on the product details page.
	*/
	@JsonProperty("ProductFullDescription")
	protected String productFullDescription;

	public String getProductFullDescription() {
		return this.productFullDescription;
	}

	public void setProductFullDescription(String productFullDescription) {
		this.productFullDescription = productFullDescription;
	}

	/**
	*The descriptive brief product name.
	*/
	@JsonProperty("ProductName")
	protected String productName;

	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	/**
	*Brief description of the product typically used when the product is displayed in a list or in search results.
	*/
	@JsonProperty("ProductShortDescription")
	protected String productShortDescription;

	public String getProductShortDescription() {
		return this.productShortDescription;
	}

	public void setProductShortDescription(String productShortDescription) {
		this.productShortDescription = productShortDescription;
	}

	/**
	*Product URL defined for search engine optimization.
	*/
	@JsonProperty("SEOFriendlyUrl")
	protected String sEOFriendlyUrl;

	public String getSEOFriendlyUrl() {
		return this.sEOFriendlyUrl;
	}

	public void setSEOFriendlyUrl(String sEOFriendlyUrl) {
		this.sEOFriendlyUrl = sEOFriendlyUrl;
	}

	/**
	*List of image files associated with the product.
	*/
	@JsonProperty("ProductImages")
	protected ArrayList<ProductImage> productImages;
	public ArrayList<ProductImage> getProductImages() {
		return this.productImages;
	}
	public void setProductImages(ArrayList<ProductImage> productImages) {
		this.productImages = productImages;
	}

}
