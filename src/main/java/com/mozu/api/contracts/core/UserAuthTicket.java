
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.core;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.UserScope;
import com.mozu.api.contracts.core.UserProfile;


/**
*	Properties of a user authentication ticket.
*/
public class UserAuthTicket implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Access token for the user authentication ticket.
	*/
	@JsonProperty("AccessToken")
	protected String accessToken;

	public String getAccessToken() {
		return this.accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	/**
	*The date and time the access token expires for the user authentication ticket.
	*/
	@JsonProperty("AccessTokenExpiration")
	protected Date accessTokenExpiration;

	public Date getAccessTokenExpiration() {
		return this.accessTokenExpiration;
	}

	public void setAccessTokenExpiration(Date accessTokenExpiration) {
		this.accessTokenExpiration = accessTokenExpiration;
	}

	/**
	*Encrypted list of behaviors associated with the user authentication ticket.
	*/
	@JsonProperty("GrantedBehaviors")
	protected ArrayList<Integer> grantedBehaviors;
	public ArrayList<Integer> getGrantedBehaviors() {
		return this.grantedBehaviors;
	}
	public void setGrantedBehaviors(ArrayList<Integer> grantedBehaviors) {
		this.grantedBehaviors = grantedBehaviors;
	}

	/**
	*The refresh roken for the user authentication ticket.
	*/
	@JsonProperty("RefreshToken")
	protected String refreshToken;

	public String getRefreshToken() {
		return this.refreshToken;
	}

	public void setRefreshToken(String refreshToken) {
		this.refreshToken = refreshToken;
	}

	/**
	*The date and time the refresh token expires for the user authentication ticket.
	*/
	@JsonProperty("RefreshTokenExpiration")
	protected Date refreshTokenExpiration;

	public Date getRefreshTokenExpiration() {
		return this.refreshTokenExpiration;
	}

	public void setRefreshTokenExpiration(Date refreshTokenExpiration) {
		this.refreshTokenExpiration = refreshTokenExpiration;
	}

	/**
	*The tenant scope to which the user authentication ticket applies.
	*/
	@JsonProperty("Scope")
	protected UserScope scope;

	public UserScope getScope() {
		return this.scope;
	}

	public void setScope(UserScope scope) {
		this.scope = scope;
	}

	/**
	*Properties of the user.
	*/
	@JsonProperty("User")
	protected UserProfile user;

	public UserProfile getUser() {
		return this.user;
	}

	public void setUser(UserProfile user) {
		this.user = user;
	}

}
