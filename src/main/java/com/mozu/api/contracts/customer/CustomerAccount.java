
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.customer;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.customer.CustomerAttribute;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.customer.CustomerContact;
import com.mozu.api.contracts.customer.CustomerGroup;
import com.mozu.api.contracts.customer.CustomerNote;
import com.mozu.api.contracts.customer.OrderSummary;


/**
*	Properties of the customer account.
*/
public class CustomerAccount implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*If true, the customer prefers to receive marketing material such as newsletters or email offers.
	*/
	@JsonProperty("AcceptsMarketing")
	protected Boolean acceptsMarketing;

	public Boolean getAcceptsMarketing() {
		return this.acceptsMarketing;
	}

	public void setAcceptsMarketing(Boolean acceptsMarketing) {
		this.acceptsMarketing = acceptsMarketing;
	}

	/**
	*The legal or doing business as (DBA) or tradestyle name of the business or organization. The maximum character length is 200.
	*/
	@JsonProperty("CompanyOrOrganization")
	protected String companyOrOrganization;

	public String getCompanyOrOrganization() {
		return this.companyOrOrganization;
	}

	public void setCompanyOrOrganization(String companyOrOrganization) {
		this.companyOrOrganization = companyOrOrganization;
	}

	/**
	*Identifier of the entity.
	*/
	@JsonProperty("Id")
	protected Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/**
	*Unique identifier of the site.
	*/
	@JsonProperty("SiteId")
	protected Integer siteId;

	public Integer getSiteId() {
		return this.siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	/**
	*If true, this customer account has tax exempt status.
	*/
	@JsonProperty("TaxExempt")
	protected Boolean taxExempt;

	public Boolean getTaxExempt() {
		return this.taxExempt;
	}

	public void setTaxExempt(Boolean taxExempt) {
		this.taxExempt = taxExempt;
	}

	/**
	*The tax identification number associated with the customer account.
	*/
	@JsonProperty("TaxId")
	protected String taxId;

	public String getTaxId() {
		return this.taxId;
	}

	public void setTaxId(String taxId) {
		this.taxId = taxId;
	}

	/**
	*Unique identifier of the user associated with the customer account.
	*/
	@JsonProperty("UserId")
	protected String userId;

	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	*Collection of customer account attributes.
	*/
	@JsonProperty("Attributes")
	protected ArrayList<CustomerAttribute> attributes;
	public ArrayList<CustomerAttribute> getAttributes() {
		return this.attributes;
	}
	public void setAttributes(ArrayList<CustomerAttribute> attributes) {
		this.attributes = attributes;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*Contact information, including the contact's name, address, phone numbers, email addresses, and company (if supplied). Also indicates whether this is a billing, shipping, or billing and shipping contact.
	*/
	@JsonProperty("Contacts")
	protected ArrayList<CustomerContact> contacts;
	public ArrayList<CustomerContact> getContacts() {
		return this.contacts;
	}
	public void setContacts(ArrayList<CustomerContact> contacts) {
		this.contacts = contacts;
	}

	/**
	*List of groups associated with this customer account.
	*/
	@JsonProperty("Groups")
	protected ArrayList<CustomerGroup> groups;
	public ArrayList<CustomerGroup> getGroups() {
		return this.groups;
	}
	public void setGroups(ArrayList<CustomerGroup> groups) {
		this.groups = groups;
	}

	/**
	*List of customer account notes.
	*/
	@JsonProperty("Notes")
	protected ArrayList<CustomerNote> notes;
	public ArrayList<CustomerNote> getNotes() {
		return this.notes;
	}
	public void setNotes(ArrayList<CustomerNote> notes) {
		this.notes = notes;
	}

	/**
	*The order summary includes the date of the most recent order, a list of the number of orders made, and the total monetary sum of all orders including cancellations and refunds associated with the customer account.
	*/
	@JsonProperty("OrderSummary")
	protected OrderSummary orderSummary;

	public OrderSummary getOrderSummary() {
		return this.orderSummary;
	}

	public void setOrderSummary(OrderSummary orderSummary) {
		this.orderSummary = orderSummary;
	}

}
