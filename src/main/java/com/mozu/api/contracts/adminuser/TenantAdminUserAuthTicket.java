
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.adminuser;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.tenant.Tenant;
import com.mozu.api.contracts.core.UserProfile;


/**
*	Properties of the authentication ticket to be used in user claims with the Mozu API.
*/
public class TenantAdminUserAuthTicket implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Alphanumeric string used to authenticate the user in API request headers.
	*/
	@JsonProperty("AccessToken")
	protected String accessToken;

	public String getAccessToken() {
		return this.accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	/**
	*The date and time the user access token expires.
	*/
	@JsonProperty("AccessTokenExpiration")
	protected Date accessTokenExpiration;

	public Date getAccessTokenExpiration() {
		return this.accessTokenExpiration;
	}

	public void setAccessTokenExpiration(Date accessTokenExpiration) {
		this.accessTokenExpiration = accessTokenExpiration;
	}

	/**
	*Date and time when the entity was created, represented in UTC Date/Time.
	*/
	@JsonProperty("CreatedOn")
	protected Date createdOn;

	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	/**
	*Collection of behaviors encrypted in the user authentication ticket. Behaviors are granted to users as part of the role assigned for the given tenant or developer account.
	*/
	@JsonProperty("GrantedBehaviors")
	protected ArrayList<Integer> grantedBehaviors;
	public ArrayList<Integer> getGrantedBehaviors() {
		return this.grantedBehaviors;
	}
	public void setGrantedBehaviors(ArrayList<Integer> grantedBehaviors) {
		this.grantedBehaviors = grantedBehaviors;
	}

	/**
	*Alphanumeric string used to generate a new user authentication ticket after the access token expires.
	*/
	@JsonProperty("RefreshToken")
	protected String refreshToken;

	public String getRefreshToken() {
		return this.refreshToken;
	}

	public void setRefreshToken(String refreshToken) {
		this.refreshToken = refreshToken;
	}

	/**
	*The date and time the user refresh token expires.
	*/
	@JsonProperty("RefreshTokenExpiration")
	protected Date refreshTokenExpiration;

	public Date getRefreshTokenExpiration() {
		return this.refreshTokenExpiration;
	}

	public void setRefreshTokenExpiration(Date refreshTokenExpiration) {
		this.refreshTokenExpiration = refreshTokenExpiration;
	}

	/**
	*Collection of tenants for which the user authentication ticket grants access.
	*/
	@JsonProperty("AvailableTenants")
	protected ArrayList<Tenant> availableTenants;
	public ArrayList<Tenant> getAvailableTenants() {
		return this.availableTenants;
	}
	public void setAvailableTenants(ArrayList<Tenant> availableTenants) {
		this.availableTenants = availableTenants;
	}

	/**
	*Tenant information associated with the user authentication ticket.
	*/
	@JsonProperty("Tenant")
	protected Tenant tenant;

	public Tenant getTenant() {
		return this.tenant;
	}

	public void setTenant(Tenant tenant) {
		this.tenant = tenant;
	}

	/**
	*User information associated with the authentication ticket.
	*/
	@JsonProperty("User")
	protected UserProfile user;

	public UserProfile getUser() {
		return this.user;
	}

	public void setUser(UserProfile user) {
		this.user = user;
	}

}
