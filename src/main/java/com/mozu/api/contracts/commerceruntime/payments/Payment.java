
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.commerceruntime.payments;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.commerceruntime.payments.BillingInfo;
import com.mozu.api.contracts.commerceruntime.payments.PaymentInteraction;


/**
*	Properties of a payment transaction submitted for an order.
*/
public class Payment implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The total monetary amount collected in this payment transaction for the order.
	*/
	@JsonProperty("AmountCollected")
	protected Double amountCollected;

	public Double getAmountCollected() {
		return this.amountCollected;
	}

	public void setAmountCollected(Double amountCollected) {
		this.amountCollected = amountCollected;
	}

	/**
	*If the payment transaction is a shopper credit, the total monetary amount credited in this payment transaction for the order.
	*/
	@JsonProperty("AmountCredited")
	protected Double amountCredited;

	public Double getAmountCredited() {
		return this.amountCredited;
	}

	public void setAmountCredited(Double amountCredited) {
		this.amountCredited = amountCredited;
	}

	/**
	*The actions a user can perform for a payment at this time.
	*/
	@JsonProperty("AvailableActions")
	protected ArrayList<String> availableActions;
	public ArrayList<String> getAvailableActions() {
		return this.availableActions;
	}
	public void setAvailableActions(ArrayList<String> availableActions) {
		this.availableActions = availableActions;
	}

	/**
	*Unique identifier of the payment transaction.
	*/
	@JsonProperty("Id")
	protected String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	/**
	*If true, the payment transaction occurs at regular intervals such as a monthly billing cycle or a digital or physical subscription.
	*/
	@JsonProperty("IsRecurring")
	protected Boolean isRecurring;

	public Boolean getIsRecurring() {
		return this.isRecurring;
	}

	public void setIsRecurring(Boolean isRecurring) {
		this.isRecurring = isRecurring;
	}

	/**
	*Unique identifier of the order associated with the payment.
	*/
	@JsonProperty("OrderId")
	protected String orderId;

	public String getOrderId() {
		return this.orderId;
	}

	public void setOrderId(String orderId) {
		this.orderId = orderId;
	}

	/**
	*The transaction ID supplied by the payment service to associate with this order payment.
	*/
	@JsonProperty("PaymentServiceTransactionId")
	protected String paymentServiceTransactionId;

	public String getPaymentServiceTransactionId() {
		return this.paymentServiceTransactionId;
	}

	public void setPaymentServiceTransactionId(String paymentServiceTransactionId) {
		this.paymentServiceTransactionId = paymentServiceTransactionId;
	}

	/**
	*The type of payment transaction performed, either check or credit card. Paypal and additional payment types will be supported in a future release.
	*/
	@JsonProperty("PaymentType")
	protected String paymentType;

	public String getPaymentType() {
		return this.paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	/**
	*Current status of the payment transaction for the order.
	*/
	@JsonProperty("Status")
	protected String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*The billing information associates with this payment.
	*/
	@JsonProperty("BillingInfo")
	protected BillingInfo billingInfo;

	public BillingInfo getBillingInfo() {
		return this.billingInfo;
	}

	public void setBillingInfo(BillingInfo billingInfo) {
		this.billingInfo = billingInfo;
	}

	/**
	*Container for the interactions associated with the payment, which includes details for each action performed for the payment.
	*/
	@JsonProperty("Interactions")
	protected ArrayList<PaymentInteraction> interactions;
	public ArrayList<PaymentInteraction> getInteractions() {
		return this.interactions;
	}
	public void setInteractions(ArrayList<PaymentInteraction> interactions) {
		this.interactions = interactions;
	}

}
