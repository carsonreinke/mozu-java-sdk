
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.commerceruntime.returns;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.commerceruntime.orders.OrderNote;
import com.mozu.api.contracts.commerceruntime.returns.ReturnReason;


/**
*	Properties of an item associated with a return for a previously shipped order.
*/
public class ReturnItem implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Unique identifier of the item in the original completed order. All return items should be associated with a corresponding order item.
	*/
	@JsonProperty("OrderItemId")
	protected String orderItemId;

	public String getOrderItemId() {
		return this.orderItemId;
	}

	public void setOrderItemId(String orderItemId) {
		this.orderItemId = orderItemId;
	}

	@JsonProperty("ProductLossAmount")
	protected Double productLossAmount;

	public Double getProductLossAmount() {
		return this.productLossAmount;
	}

	public void setProductLossAmount(Double productLossAmount) {
		this.productLossAmount = productLossAmount;
	}

	@JsonProperty("ProductLossTaxAmount")
	protected Double productLossTaxAmount;

	public Double getProductLossTaxAmount() {
		return this.productLossTaxAmount;
	}

	public void setProductLossTaxAmount(Double productLossTaxAmount) {
		this.productLossTaxAmount = productLossTaxAmount;
	}

	/**
	*The actual quantity received for the return item.
	*/
	@JsonProperty("QuantityReceived")
	protected Integer quantityReceived;

	public Integer getQuantityReceived() {
		return this.quantityReceived;
	}

	public void setQuantityReceived(Integer quantityReceived) {
		this.quantityReceived = quantityReceived;
	}

	/**
	*The quantity of returned items that can be returned to active product stock.
	*/
	@JsonProperty("QuantityRestockable")
	protected Integer quantityRestockable;

	public Integer getQuantityRestockable() {
		return this.quantityRestockable;
	}

	public void setQuantityRestockable(Integer quantityRestockable) {
		this.quantityRestockable = quantityRestockable;
	}

	/**
	*The quantity of the item shipped to the shopper in the event of a return item replacement.
	*/
	@JsonProperty("QuantityShipped")
	protected Integer quantityShipped;

	public Integer getQuantityShipped() {
		return this.quantityShipped;
	}

	public void setQuantityShipped(Integer quantityShipped) {
		this.quantityShipped = quantityShipped;
	}

	@JsonProperty("ShippingLossAmount")
	protected Double shippingLossAmount;

	public Double getShippingLossAmount() {
		return this.shippingLossAmount;
	}

	public void setShippingLossAmount(Double shippingLossAmount) {
		this.shippingLossAmount = shippingLossAmount;
	}

	@JsonProperty("ShippingLossTaxAmount")
	protected Double shippingLossTaxAmount;

	public Double getShippingLossTaxAmount() {
		return this.shippingLossTaxAmount;
	}

	public void setShippingLossTaxAmount(Double shippingLossTaxAmount) {
		this.shippingLossTaxAmount = shippingLossTaxAmount;
	}

	/**
	*List of merchant-supplied notes associated with the return item.
	*/
	@JsonProperty("Notes")
	protected ArrayList<OrderNote> notes;
	public ArrayList<OrderNote> getNotes() {
		return this.notes;
	}
	public void setNotes(ArrayList<OrderNote> notes) {
		this.notes = notes;
	}

	/**
	*The list of return reasons for the item and the quantity associated with each return reason.
	*/
	@JsonProperty("Reasons")
	protected ArrayList<ReturnReason> reasons;
	public ArrayList<ReturnReason> getReasons() {
		return this.reasons;
	}
	public void setReasons(ArrayList<ReturnReason> reasons) {
		this.reasons = reasons;
	}

}
