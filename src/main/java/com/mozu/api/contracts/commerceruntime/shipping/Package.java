
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.commerceruntime.shipping;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.commerceruntime.shipping.PackageItem;
import com.mozu.api.contracts.commerceruntime.commerce.PackageMeasurements;


/**
*	Properties of a physical package shipped for an order.
*/
public class Package implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The actions that a user can perform for a package at this time.
	*/
	@JsonProperty("AvailableActions")
	protected ArrayList<String> availableActions;
	public ArrayList<String> getAvailableActions() {
		return this.availableActions;
	}
	public void setAvailableActions(ArrayList<String> availableActions) {
		this.availableActions = availableActions;
	}

	/**
	*Unique identifier of a package.
	*/
	@JsonProperty("Id")
	protected String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	/**
	*The package type associated with this physical package. Possible values include Tube, Letter, Pak, Small Box (carrier_box_small), Medium Box (carrier_box_medium), Large Box (carrier_box_large), or Custom.
	*/
	@JsonProperty("PackagingType")
	protected String packagingType;

	public String getPackagingType() {
		return this.packagingType;
	}

	public void setPackagingType(String packagingType) {
		this.packagingType = packagingType;
	}

	/**
	*Unique identifier of the shipment associated with this package.
	*/
	@JsonProperty("ShipmentId")
	protected String shipmentId;

	public String getShipmentId() {
		return this.shipmentId;
	}

	public void setShipmentId(String shipmentId) {
		this.shipmentId = shipmentId;
	}

	/**
	*The code associated with the carrier's shipping method service type. Service type codes include a prefix that indicates the carrier. For example: FEDEX_INTERNATIONAL_STANDARD
	*/
	@JsonProperty("ShippingMethodCode")
	protected String shippingMethodCode;

	public String getShippingMethodCode() {
		return this.shippingMethodCode;
	}

	public void setShippingMethodCode(String shippingMethodCode) {
		this.shippingMethodCode = shippingMethodCode;
	}

	/**
	*Name of the shipping method associated with the package. For example: UPS Ground or 2nd Day Air.
	*/
	@JsonProperty("ShippingMethodName")
	protected String shippingMethodName;

	public String getShippingMethodName() {
		return this.shippingMethodName;
	}

	public void setShippingMethodName(String shippingMethodName) {
		this.shippingMethodName = shippingMethodName;
	}

	/**
	*Status of the package, which is "Shipped" or "Not Shipped".
	*/
	@JsonProperty("Status")
	protected String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	/**
	*Tracking number for the package supplied by the carrier.
	*/
	@JsonProperty("TrackingNumber")
	protected String trackingNumber;

	public String getTrackingNumber() {
		return this.trackingNumber;
	}

	public void setTrackingNumber(String trackingNumber) {
		this.trackingNumber = trackingNumber;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*An array list of objects in the returned collection.
	*/
	@JsonProperty("Items")
	protected ArrayList<PackageItem> items;
	public ArrayList<PackageItem> getItems() {
		return this.items;
	}
	public void setItems(ArrayList<PackageItem> items) {
		this.items = items;
	}

	/**
	*Dimensional properties of the package.
	*/
	@JsonProperty("Measurements")
	protected PackageMeasurements measurements;

	public PackageMeasurements getMeasurements() {
		return this.measurements;
	}

	public void setMeasurements(PackageMeasurements measurements) {
		this.measurements = measurements;
	}

}
