
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.commerceruntime.payments;

import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.AuditInfo;


/**
*	Properties of a resulting payment interaction that occurs when a payment action is performed.
*/
public class PaymentInteraction implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*If applicable, the total monetary amount associated with this payment interaction.
	*/
	@JsonProperty("Amount")
	protected Double amount;

	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	/**
	*If applicable, the check number associated with this payment interaction.
	*/
	@JsonProperty("CheckNumber")
	protected String checkNumber;

	public String getCheckNumber() {
		return this.checkNumber;
	}

	public void setCheckNumber(String checkNumber) {
		this.checkNumber = checkNumber;
	}

	/**
	*If required by the payment gateway, the authorization code of the transaction.
	*/
	@JsonProperty("GatewayAuthCode")
	protected String gatewayAuthCode;

	public String getGatewayAuthCode() {
		return this.gatewayAuthCode;
	}

	public void setGatewayAuthCode(String gatewayAuthCode) {
		this.gatewayAuthCode = gatewayAuthCode;
	}

	/**
	*AVS codes supplied by the payment gateway.
	*/
	@JsonProperty("GatewayAVSCodes")
	protected String gatewayAVSCodes;

	public String getGatewayAVSCodes() {
		return this.gatewayAVSCodes;
	}

	public void setGatewayAVSCodes(String gatewayAVSCodes) {
		this.gatewayAVSCodes = gatewayAVSCodes;
	}

	/**
	*CVV2 codes supplied by the payment gateway.
	*/
	@JsonProperty("GatewayCVV2Codes")
	protected String gatewayCVV2Codes;

	public String getGatewayCVV2Codes() {
		return this.gatewayCVV2Codes;
	}

	public void setGatewayCVV2Codes(String gatewayCVV2Codes) {
		this.gatewayCVV2Codes = gatewayCVV2Codes;
	}

	/**
	*Unique identifier of the gateway interaction. Used for credit card transactions where the payment creates a GatewayInteractionId for each interaction. System-supplied and read-only.
	*/
	@JsonProperty("GatewayInteractionId")
	protected Integer gatewayInteractionId;

	public Integer getGatewayInteractionId() {
		return this.gatewayInteractionId;
	}

	public void setGatewayInteractionId(Integer gatewayInteractionId) {
		this.gatewayInteractionId = gatewayInteractionId;
	}

	/**
	*Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
	*/
	@JsonProperty("GatewayResponseCode")
	protected String gatewayResponseCode;

	public String getGatewayResponseCode() {
		return this.gatewayResponseCode;
	}

	public void setGatewayResponseCode(String gatewayResponseCode) {
		this.gatewayResponseCode = gatewayResponseCode;
	}

	/**
	*Unique identifier of the gateway transaction associated with the payment interaction.
	*/
	@JsonProperty("GatewayTransactionId")
	protected String gatewayTransactionId;

	public String getGatewayTransactionId() {
		return this.gatewayTransactionId;
	}

	public void setGatewayTransactionId(String gatewayTransactionId) {
		this.gatewayTransactionId = gatewayTransactionId;
	}

	/**
	*Unique identifier of the payment interaction.
	*/
	@JsonProperty("Id")
	protected String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	/**
	*Date and time the payment interaction occured.
	*/
	@JsonProperty("InteractionDate")
	protected Date interactionDate;

	public Date getInteractionDate() {
		return this.interactionDate;
	}

	public void setInteractionDate(Date interactionDate) {
		this.interactionDate = interactionDate;
	}

	/**
	*The type of payment interaction, such as Capture or CheckReceived.
	*/
	@JsonProperty("InteractionType")
	protected String interactionType;

	public String getInteractionType() {
		return this.interactionType;
	}

	public void setInteractionType(String interactionType) {
		this.interactionType = interactionType;
	}

	/**
	*If true, the payment interaction was manually defined s part of offline order processing.
	*/
	@JsonProperty("IsManual")
	protected Boolean isManual;

	public Boolean getIsManual() {
		return this.isManual;
	}

	public void setIsManual(Boolean isManual) {
		this.isManual = isManual;
	}

	/**
	*3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
	*/
	@JsonProperty("ISOCurrencyCode")
	protected String iSOCurrencyCode;

	public String getISOCurrencyCode() {
		return this.iSOCurrencyCode;
	}

	public void setISOCurrencyCode(String iSOCurrencyCode) {
		this.iSOCurrencyCode = iSOCurrencyCode;
	}

	/**
	*If true, this payment interaction repeats on a scheduled interval.
	*/
	@JsonProperty("IsRecurring")
	protected Boolean isRecurring;

	public Boolean getIsRecurring() {
		return this.isRecurring;
	}

	public void setIsRecurring(Boolean isRecurring) {
		this.isRecurring = isRecurring;
	}

	/**
	*Note content entered for a payment interaction.
	*/
	@JsonProperty("Note")
	protected String note;

	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	/**
	*Unique identifier of the order associated with this payment interaction.
	*/
	@JsonProperty("OrderId")
	protected String orderId;

	public String getOrderId() {
		return this.orderId;
	}

	public void setOrderId(String orderId) {
		this.orderId = orderId;
	}

	/**
	*Unique identifier of the payment associated with this transaction.
	*/
	@JsonProperty("PaymentId")
	protected String paymentId;

	public String getPaymentId() {
		return this.paymentId;
	}

	public void setPaymentId(String paymentId) {
		this.paymentId = paymentId;
	}

	/**
	*Unique identifier of previous interaction that this payment interaction is modifying. For example, when refunding a payment, the crediting interaction would reference the capture interaction.
	*/
	@JsonProperty("PaymentTransactionInteractionIdReference")
	protected Integer paymentTransactionInteractionIdReference;

	public Integer getPaymentTransactionInteractionIdReference() {
		return this.paymentTransactionInteractionIdReference;
	}

	public void setPaymentTransactionInteractionIdReference(Integer paymentTransactionInteractionIdReference) {
		this.paymentTransactionInteractionIdReference = paymentTransactionInteractionIdReference;
	}

	/**
	*The status of this payment interaction. Possible values are "Success" or "Failure".
	*/
	@JsonProperty("Status")
	protected String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

}
