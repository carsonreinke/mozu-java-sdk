
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.commerceruntime.products;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.commerceruntime.products.Category;
import com.mozu.api.contracts.commerceruntime.commerce.PackageMeasurements;
import com.mozu.api.contracts.commerceruntime.products.ProductOption;
import com.mozu.api.contracts.commerceruntime.products.ProductPrice;
import com.mozu.api.contracts.commerceruntime.products.ProductProperty;
import com.mozu.api.contracts.commerceruntime.products.ProductStock;


/**
*	Properties of a product set up in admin and added as an item in a cart or order.
*/
public class Product implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*Short description of the product in the language specified in the locale code for the storefront.
	*/
	@JsonProperty("Description")
	protected String description;

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	/**
	*The alternate image description defined for the product, in the language specified in the locale code for the storefront.
	*/
	@JsonProperty("ImageAlternateText")
	protected String imageAlternateText;

	public String getImageAlternateText() {
		return this.imageAlternateText;
	}

	public void setImageAlternateText(String imageAlternateText) {
		this.imageAlternateText = imageAlternateText;
	}

	/**
	*The URL of the image file associated with a product on a storefront.
	*/
	@JsonProperty("ImagePath")
	protected String imagePath;

	public String getImagePath() {
		return this.imagePath;
	}

	public void setImagePath(String imagePath) {
		this.imagePath = imagePath;
	}

	/**
	*If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
	*/
	@JsonProperty("IsRecurring")
	protected Boolean isRecurring;

	public Boolean getIsRecurring() {
		return this.isRecurring;
	}

	public void setIsRecurring(Boolean isRecurring) {
		this.isRecurring = isRecurring;
	}

	/**
	*If true, the entity is subject to sales tax based on the relevant tax rate.
	*/
	@JsonProperty("IsTaxable")
	protected Boolean isTaxable;

	public Boolean getIsTaxable() {
		return this.isTaxable;
	}

	public void setIsTaxable(Boolean isTaxable) {
		this.isTaxable = isTaxable;
	}

	/**
	*The name of the product that appears on the storefront.
	*/
	@JsonProperty("Name")
	protected String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	*Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	*/
	@JsonProperty("ProductCode")
	protected String productCode;

	public String getProductCode() {
		return this.productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	/**
	*The product type template associated with the product on the storefront.
	*/
	@JsonProperty("ProductType")
	protected String productType;

	public String getProductType() {
		return this.productType;
	}

	public void setProductType(String productType) {
		this.productType = productType;
	}

	/**
	*If true, the product cannot be shipped in combination with other products.
	*/
	@JsonProperty("ShipsByItself")
	protected Boolean shipsByItself;

	public Boolean getShipsByItself() {
		return this.shipsByItself;
	}

	public void setShipsByItself(Boolean shipsByItself) {
		this.shipsByItself = shipsByItself;
	}

	/**
	*Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
	*/
	@JsonProperty("VariationProductCode")
	protected String variationProductCode;

	public String getVariationProductCode() {
		return this.variationProductCode;
	}

	public void setVariationProductCode(String variationProductCode) {
		this.variationProductCode = variationProductCode;
	}

	/**
	*The list of all categories associated with the product.
	*/
	@JsonProperty("Categories")
	protected ArrayList<Category> categories;
	public ArrayList<Category> getCategories() {
		return this.categories;
	}
	public void setCategories(ArrayList<Category> categories) {
		this.categories = categories;
	}

	/**
	*Dimensions of the packaged product.
	*/
	@JsonProperty("Measurements")
	protected PackageMeasurements measurements;

	public PackageMeasurements getMeasurements() {
		return this.measurements;
	}

	public void setMeasurements(PackageMeasurements measurements) {
		this.measurements = measurements;
	}

	/**
	*The list of option attributes configured for the product.
	*/
	@JsonProperty("Options")
	protected ArrayList<ProductOption> options;
	public ArrayList<ProductOption> getOptions() {
		return this.options;
	}
	public void setOptions(ArrayList<ProductOption> options) {
		this.options = options;
	}

	/**
	*The price of the product that appears on the storefront including any applied discounts.
	*/
	@JsonProperty("Price")
	protected ProductPrice price;

	public ProductPrice getPrice() {
		return this.price;
	}

	public void setPrice(ProductPrice price) {
		this.price = price;
	}

	@JsonProperty("Properties")
	protected ArrayList<ProductProperty> properties;
	public ArrayList<ProductProperty> getProperties() {
		return this.properties;
	}
	public void setProperties(ArrayList<ProductProperty> properties) {
		this.properties = properties;
	}

	/**
	*The number of products accounted for in inventory that are available for purchase.
	*/
	@JsonProperty("Stock")
	protected ProductStock stock;

	public ProductStock getStock() {
		return this.stock;
	}

	public void setStock(ProductStock stock) {
		this.stock = stock;
	}

}
