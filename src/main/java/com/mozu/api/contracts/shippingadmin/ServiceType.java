
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.shippingadmin;

import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.shippingadmin.ServiceTypeLocalizedContent;


/**
*	Properties of the service type, or shipping method, for a specific shipping carrier.
*/
public class ServiceType implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The service type code supplied by the carrier. Service type codes include a prefix that indicates the carrier name. For example: FEDEX_INTERNATIONAL_STANDARD.
	*/
	@JsonProperty("Code")
	protected String code;

	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	/**
	*If true, the shipping service type is available for use. Certain service types are locale-dependent.
	*/
	@JsonProperty("IsActive")
	protected Boolean isActive;

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	*If true, the shipping service type is available for international parcel. If false, the shipping service type is only available for domestic parcel.
	*/
	@JsonProperty("IsInternational")
	protected Boolean isInternational;

	public Boolean getIsInternational() {
		return this.isInternational;
	}

	public void setIsInternational(Boolean isInternational) {
		this.isInternational = isInternational;
	}

	/**
	*The numeric value that denotes the place this entity occupies in the order of the entity list.
	*/
	@JsonProperty("Sequence")
	protected Integer sequence;

	public Integer getSequence() {
		return this.sequence;
	}

	public void setSequence(Integer sequence) {
		this.sequence = sequence;
	}

	/**
	*Complex type that contains content for a language specified by LocaleCode.
	*/
	@JsonProperty("Content")
	protected ServiceTypeLocalizedContent content;

	public ServiceTypeLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(ServiceTypeLocalizedContent content) {
		this.content = content;
	}

}
