
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productadmin;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.ProductLocalizedContent;
import com.mozu.api.contracts.productadmin.ProductPrice;
import com.mozu.api.contracts.productadmin.ProductCategory;
import com.mozu.api.contracts.productadmin.ProductLocalizedSEOContent;


/**
*	The properties of a product where the product is associated with a specific site. Associate the product to the site using the AddProductInSite operation.
*/
public class ProductInSiteInfo implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*If true, the product info is available in the site-level from product admin.
	*/
	@JsonProperty("IsActive")
	protected Boolean isActive;

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	*If true, the price for this product is overridden in the site by the price provided in the request body of the operation. If false, the siteGroup level price will be used for the product.
	*/
	@JsonProperty("IsContentOverridden")
	protected Boolean isContentOverridden;

	public Boolean getIsContentOverridden() {
		return this.isContentOverridden;
	}

	public void setIsContentOverridden(Boolean isContentOverridden) {
		this.isContentOverridden = isContentOverridden;
	}

	/**
	*If true, the price for this product is overridden in the site by the price provided in the request body of the operation. If false, the siteGroup level price will be used for the product.
	*/
	@JsonProperty("IsPriceOverridden")
	protected Boolean isPriceOverridden;

	public Boolean getIsPriceOverridden() {
		return this.isPriceOverridden;
	}

	public void setIsPriceOverridden(Boolean isPriceOverridden) {
		this.isPriceOverridden = isPriceOverridden;
	}

	/**
	*If true, the search engine optimized (SEO) content for this product is overridden in the site by the SEO content provided in the request body of the operation. If false, the siteGroup level SEO content will be used for the product.
	*/
	@JsonProperty("IsSEOContentOverridden")
	protected Boolean isSEOContentOverridden;

	public Boolean getIsSEOContentOverridden() {
		return this.isSEOContentOverridden;
	}

	public void setIsSEOContentOverridden(Boolean isSEOContentOverridden) {
		this.isSEOContentOverridden = isSEOContentOverridden;
	}

	@JsonProperty("SiteId")
	protected Integer siteId;

	public Integer getSiteId() {
		return this.siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*The content for an existing product associated with a site.
	*/
	@JsonProperty("Content")
	protected ProductLocalizedContent content;

	public ProductLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(ProductLocalizedContent content) {
		this.content = content;
	}

	/**
	*The price that the merchant intends to sell the product associated with a specific site which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
	*/
	@JsonProperty("Price")
	protected ProductPrice price;

	public ProductPrice getPrice() {
		return this.price;
	}

	public void setPrice(ProductPrice price) {
		this.price = price;
	}

	/**
	*The list of containers that group products assigned to a specific site.
	*/
	@JsonProperty("ProductCategories")
	protected ArrayList<ProductCategory> productCategories;
	public ArrayList<ProductCategory> getProductCategories() {
		return this.productCategories;
	}
	public void setProductCategories(ArrayList<ProductCategory> productCategories) {
		this.productCategories = productCategories;
	}

	/**
	*List of search engine optimized product content.
	*/
	@JsonProperty("SEOContent")
	protected ProductLocalizedSEOContent sEOContent;

	public ProductLocalizedSEOContent getSEOContent() {
		return this.sEOContent;
	}

	public void setSEOContent(ProductLocalizedSEOContent sEOContent) {
		this.sEOContent = sEOContent;
	}

}
