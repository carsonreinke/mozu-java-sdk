
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productadmin;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.productadmin.TargetedCategory;
import com.mozu.api.contracts.productadmin.TargetedCustomerGroup;
import com.mozu.api.contracts.productadmin.TargetedProduct;
import com.mozu.api.contracts.productadmin.TargetedShippingMethod;


/**
*	Specifies what to discount such as the type of discount and which products, categories, or shipping methods are eligible for the discount. Discount types can include the percentage off, specific monetary amount, or free shipping. This parameter also specifies the minimum monetary amount that the order must meet for the discount to apply.
*/
public class DiscountTarget implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*If true, the target discount applies to all products sold on the storefront. Applies only if the discount type is "Product".
	*/
	@JsonProperty("IncludeAllProducts")
	protected Boolean includeAllProducts;

	public Boolean getIncludeAllProducts() {
		return this.includeAllProducts;
	}

	public void setIncludeAllProducts(Boolean includeAllProducts) {
		this.includeAllProducts = includeAllProducts;
	}

	@JsonProperty("MinimumLifetimeValueAmount")
	protected Double minimumLifetimeValueAmount;

	public Double getMinimumLifetimeValueAmount() {
		return this.minimumLifetimeValueAmount;
	}

	public void setMinimumLifetimeValueAmount(Double minimumLifetimeValueAmount) {
		this.minimumLifetimeValueAmount = minimumLifetimeValueAmount;
	}

	/**
	*The minimum monetary value the order subtotal must meet in order to qualify for the discount.
	*/
	@JsonProperty("MinimumOrderAmount")
	protected Double minimumOrderAmount;

	public Double getMinimumOrderAmount() {
		return this.minimumOrderAmount;
	}

	public void setMinimumOrderAmount(Double minimumOrderAmount) {
		this.minimumOrderAmount = minimumOrderAmount;
	}

	/**
	*The type of target to which the discount applies, such as a product.
	*/
	@JsonProperty("Type")
	protected String type;

	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	/**
	*The product categories to which the discount can apply.
	*/
	@JsonProperty("Categories")
	protected ArrayList<TargetedCategory> categories;
	public ArrayList<TargetedCategory> getCategories() {
		return this.categories;
	}
	public void setCategories(ArrayList<TargetedCategory> categories) {
		this.categories = categories;
	}

	@JsonProperty("CustomerGroups")
	protected ArrayList<TargetedCustomerGroup> customerGroups;
	public ArrayList<TargetedCustomerGroup> getCustomerGroups() {
		return this.customerGroups;
	}
	public void setCustomerGroups(ArrayList<TargetedCustomerGroup> customerGroups) {
		this.customerGroups = customerGroups;
	}

	@JsonProperty("ExcludedCategories")
	protected ArrayList<TargetedCategory> excludedCategories;
	public ArrayList<TargetedCategory> getExcludedCategories() {
		return this.excludedCategories;
	}
	public void setExcludedCategories(ArrayList<TargetedCategory> excludedCategories) {
		this.excludedCategories = excludedCategories;
	}

	@JsonProperty("ExcludedProducts")
	protected ArrayList<TargetedProduct> excludedProducts;
	public ArrayList<TargetedProduct> getExcludedProducts() {
		return this.excludedProducts;
	}
	public void setExcludedProducts(ArrayList<TargetedProduct> excludedProducts) {
		this.excludedProducts = excludedProducts;
	}

	/**
	*The products to which the discount can apply.
	*/
	@JsonProperty("Products")
	protected ArrayList<TargetedProduct> products;
	public ArrayList<TargetedProduct> getProducts() {
		return this.products;
	}
	public void setProducts(ArrayList<TargetedProduct> products) {
		this.products = products;
	}

	/**
	*The list of shipping method parameters that describe a method including the code, localized content, and audit information.
	*/
	@JsonProperty("ShippingMethods")
	protected ArrayList<TargetedShippingMethod> shippingMethods;
	public ArrayList<TargetedShippingMethod> getShippingMethods() {
		return this.shippingMethods;
	}
	public void setShippingMethods(ArrayList<TargetedShippingMethod> shippingMethods) {
		this.shippingMethods = shippingMethods;
	}

}
