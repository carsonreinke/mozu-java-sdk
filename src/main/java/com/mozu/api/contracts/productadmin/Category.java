
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productadmin;

import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.CategoryLocalizedContent;


/**
*	A descriptive container in a storefront hierarchy to organize collections of products. Only available at the site-level when multiple sites and site groups exist.
*/
public class Category implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The number of children (subcategories, for example) that stem from a parent (top-level category).
	*/
	@JsonProperty("ChildCount")
	protected Integer childCount;

	public Integer getChildCount() {
		return this.childCount;
	}

	public void setChildCount(Integer childCount) {
		this.childCount = childCount;
	}

	/**
	*Identifier of the entity.
	*/
	@JsonProperty("Id")
	protected Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/**
	*If true, the admin product category is displayed in the store. If true, the category is not displayed.
	*/
	@JsonProperty("IsDisplayed")
	protected Boolean isDisplayed;

	public Boolean getIsDisplayed() {
		return this.isDisplayed;
	}

	public void setIsDisplayed(Boolean isDisplayed) {
		this.isDisplayed = isDisplayed;
	}

	/**
	*Identifier of the parent or top-level category.
	*/
	@JsonProperty("ParentCategoryId")
	protected Integer parentCategoryId;

	public Integer getParentCategoryId() {
		return this.parentCategoryId;
	}

	public void setParentCategoryId(Integer parentCategoryId) {
		this.parentCategoryId = parentCategoryId;
	}

	/**
	*The number of products in a list.
	*/
	@JsonProperty("ProductCount")
	protected Integer productCount;

	public Integer getProductCount() {
		return this.productCount;
	}

	public void setProductCount(Integer productCount) {
		this.productCount = productCount;
	}

	/**
	*The numeric value that denotes the place this entity occupies in the order of the entity list.
	*/
	@JsonProperty("Sequence")
	protected Integer sequence;

	public Integer getSequence() {
		return this.sequence;
	}

	public void setSequence(Integer sequence) {
		this.sequence = sequence;
	}

	@JsonProperty("SiteId")
	protected Integer siteId;

	public Integer getSiteId() {
		return this.siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*Complex type that contains content for a language specified by LocaleCode.
	*/
	@JsonProperty("Content")
	protected CategoryLocalizedContent content;

	public CategoryLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(CategoryLocalizedContent content) {
		this.content = content;
	}

}
