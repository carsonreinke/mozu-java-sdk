
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.contracts.productadmin;

import java.util.ArrayList;
import java.io.Serializable;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mozu.api.contracts.productadmin.AttributeMetadataItem;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.AttributeLocalizedContent;
import com.mozu.api.contracts.productadmin.AttributeValidation;
import com.mozu.api.contracts.productadmin.AttributeVocabularyValue;


/**
*	Details of an attribute used to describe individual aspects of a product.
*/
public class Attribute implements Serializable
{
	/** Default Serial Version UID  */
	private static final long serialVersionUID = 1L;

	/**
	*The administrative name of the product attribute as it appears in Mozu Admin.
	*/
	@JsonProperty("AdminName")
	protected String adminName;

	public String getAdminName() {
		return this.adminName;
	}

	public void setAdminName(String adminName) {
		this.adminName = adminName;
	}

	/**
	*Merchant-defined identifier of the product attribute used to generate the attribute's fully qualified name.
	*/
	@JsonProperty("AttributeCode")
	protected String attributeCode;

	public String getAttributeCode() {
		return this.attributeCode;
	}

	public void setAttributeCode(String attributeCode) {
		this.attributeCode = attributeCode;
	}

	/**
	*Generated sequence that increments for each attribute and data type combination created. This value is system-supplied and read-only.
	*/
	@JsonProperty("AttributeDataTypeSequence")
	protected Integer attributeDataTypeSequence;

	public Integer getAttributeDataTypeSequence() {
		return this.attributeDataTypeSequence;
	}

	public void setAttributeDataTypeSequence(Integer attributeDataTypeSequence) {
		this.attributeDataTypeSequence = attributeDataTypeSequence;
	}

	/**
	*The fully qualified name of the attribute, which is a user defined attribute identifier.
	*/
	@JsonProperty("AttributeFQN")
	protected String attributeFQN;

	public String getAttributeFQN() {
		return this.attributeFQN;
	}

	public void setAttributeFQN(String attributeFQN) {
		this.attributeFQN = attributeFQN;
	}

	/**
	*Generated sequence that increments for each product attribute created. This value is system-supplied and read-only.
	*/
	@JsonProperty("AttributeSequence")
	protected Integer attributeSequence;

	public Integer getAttributeSequence() {
		return this.attributeSequence;
	}

	public void setAttributeSequence(Integer attributeSequence) {
		this.attributeSequence = attributeSequence;
	}

	/**
	*The data type of the product attribute, which is a Bool, DateTime, Number, or String. The attribute's data type cannot be changed.
	*/
	@JsonProperty("DataType")
	protected String dataType;

	public String getDataType() {
		return this.dataType;
	}

	public void setDataType(String dataType) {
		this.dataType = dataType;
	}

	/**
	*The storefront interface input type for the product attribute, which is a Date, DateTime, List, TextArea, TextBox, or YesNo. The attribute's input type cannot be changed.
	*/
	@JsonProperty("InputType")
	protected String inputType;

	public String getInputType() {
		return this.inputType;
	}

	public void setInputType(String inputType) {
		this.inputType = inputType;
	}

	/**
	*If true, the product attribute is an add-on configuration made by the shopper that does not represent a product variation, such as a monogram.
	*/
	@JsonProperty("IsExtra")
	protected Boolean isExtra;

	public Boolean getIsExtra() {
		return this.isExtra;
	}

	public void setIsExtra(Boolean isExtra) {
		this.isExtra = isExtra;
	}

	/**
	*If true, the product attribute is a merchant- or shopper-configurable option, such as size or color, that represents a product variation.
	*/
	@JsonProperty("IsOption")
	protected Boolean isOption;

	public Boolean getIsOption() {
		return this.isOption;
	}

	public void setIsOption(Boolean isOption) {
		this.isOption = isOption;
	}

	/**
	*If true, the product attribute describes aspects of the product that do not represent an option configurable by the shopper, such as screen resolution or brand.
	*/
	@JsonProperty("IsProperty")
	protected Boolean isProperty;

	public Boolean getIsProperty() {
		return this.isProperty;
	}

	public void setIsProperty(Boolean isProperty) {
		this.isProperty = isProperty;
	}

	/**
	*If applicable, the registered namespace associated with the product attribute, used to generate the fully qualified name. If no namespace is defined, the namespace associated with the tenant is automatically assigned.
	*/
	@JsonProperty("Namespace")
	protected String namespace;

	public String getNamespace() {
		return this.namespace;
	}

	public void setNamespace(String namespace) {
		this.namespace = namespace;
	}

	@JsonProperty("SiteGroupId")
	protected Integer siteGroupId;

	public Integer getSiteGroupId() {
		return this.siteGroupId;
	}

	public void setSiteGroupId(Integer siteGroupId) {
		this.siteGroupId = siteGroupId;
	}

	/**
	*The type of value associated with the product attribute, which is ShopperEntered (the shopper selects or enters an attribute value during checkout), Predefined (the merchant sets the attribute value from a list during product attribute definition), or AdminEntered (the merchant selects or enters a value during product definition). The attribute value type cannot be changed.
	*/
	@JsonProperty("ValueType")
	protected String valueType;

	public String getValueType() {
		return this.valueType;
	}

	public void setValueType(String valueType) {
		this.valueType = valueType;
	}

	/**
	*List of key-value pairs that store metadata associated with the product attribute.
	*/
	@JsonProperty("AttributeMetadata")
	protected ArrayList<AttributeMetadataItem> attributeMetadata;
	public ArrayList<AttributeMetadataItem> getAttributeMetadata() {
		return this.attributeMetadata;
	}
	public void setAttributeMetadata(ArrayList<AttributeMetadataItem> attributeMetadata) {
		this.attributeMetadata = attributeMetadata;
	}

	/**
	*Identifier and datetime stamp information recorded when creating or updating a resource entity. This value is system-supplied and read-only.
	*/
	@JsonProperty("AuditInfo")
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	*Complex type that contains content for a language specified by LocaleCode.
	*/
	@JsonProperty("Content")
	protected AttributeLocalizedContent content;

	public AttributeLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(AttributeLocalizedContent content) {
		this.content = content;
	}

	/**
	*Properties of the validation of a product attribute, which contains rules that dictate what values are valid entries for product attributes.
	*/
	@JsonProperty("Validation")
	protected AttributeValidation validation;

	public AttributeValidation getValidation() {
		return this.validation;
	}

	public void setValidation(AttributeValidation validation) {
		this.validation = validation;
	}

	/**
	*Array list of the defined vocabulary values for the specified product attribute. For example, for a Color attribute, vocabulary values might include black, white, and purple.
	*/
	@JsonProperty("VocabularyValues")
	protected ArrayList<AttributeVocabularyValue> vocabularyValues;
	public ArrayList<AttributeVocabularyValue> getVocabularyValues() {
		return this.vocabularyValues;
	}
	public void setVocabularyValues(ArrayList<AttributeVocabularyValue> vocabularyValues) {
		this.vocabularyValues = vocabularyValues;
	}

}
