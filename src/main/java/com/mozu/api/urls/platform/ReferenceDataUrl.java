
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.platform;

import com.mozu.api.utils.UrlFormatter;


public class ReferenceDataUrl
{

	/**
        * Get Resource Url for GetAddressSchema
        * @param countryCode 2 letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
        * @return    String Resource Url
    */
	public static String getAddressSchemaUrl(String countryCode)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/addressschema/{countryCode}");
		formatter.formatUrl("countryCode", countryCode);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetAddressSchemas
        * @return    String Resource Url
    */
	public static String getAddressSchemasUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/addressschemas");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetBehavior
        * @param behaviorId ***Always private and should not be published.***
        * @return    String Resource Url
    */
	public static String getBehaviorUrl(Long behaviorId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/behaviors/{behaviorId}");
		formatter.formatUrl("behaviorId", behaviorId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetBehaviorCategories
        * @return    String Resource Url
    */
	public static String getBehaviorCategoriesUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/behaviors/categories");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetBehaviorCategory
        * @param categoryId ***Always private and should not be published.***
        * @return    String Resource Url
    */
	public static String getBehaviorCategoryUrl(Long categoryId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/behaviors/categories/{categoryId}");
		formatter.formatUrl("categoryId", categoryId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetBehaviors
        * @param userType 
        * @return    String Resource Url
    */
	public static String getBehaviorsUrl(String userType)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/behaviors?userType={userType}");
		formatter.formatUrl("userType", userType);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetContentLocales
        * @return    String Resource Url
    */
	public static String getContentLocalesUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/contentLocales");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetCountries
        * @return    String Resource Url
    */
	public static String getCountriesUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/countries");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetCurrencies
        * @return    String Resource Url
    */
	public static String getCurrenciesUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/currencies");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetTimeZones
        * @return    String Resource Url
    */
	public static String getTimeZonesUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/timezones");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetTopLevelDomains
        * @return    String Resource Url
    */
	public static String getTopLevelDomainsUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/topleveldomains");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetUnitsOfMeasure
        * @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
        * @return    String Resource Url
    */
	public static String getUnitsOfMeasureUrl(String filter)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/reference/unitsofmeasure?filter={filter}");
		formatter.formatUrl("filter", filter);
		return formatter.getResourceUrl();
	}

				
}

