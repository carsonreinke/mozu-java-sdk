/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.platform.developer;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;


public class ApplicationVersionUrl
{

	/**
	 * Get Resource Url for GetAllApplications
	 * @return   String Resource Url
	 */
	public static MozuUrl getAllApplicationsUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetApplication
	 * @param applicationId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getApplicationUrl(Integer applicationId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/{applicationId}");
		formatter.formatUrl("applicationId", applicationId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetApplicationVersion
	 * @param applicationVersionId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getApplicationVersionUrl(Integer applicationVersionId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetPackages
	 * @param applicationVersionId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackagesUrl(Integer applicationVersionId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetPackage
	 * @param applicationVersionId 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageUrl(Integer applicationVersionId, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetPackageItemsMetadata
	 * @param applicationVersionId 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageItemsMetadataUrl(Integer applicationVersionId, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetPackageItemMetadata
	 * @param applicationVersionId 
	 * @param itempath 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageItemMetadataUrl(Integer applicationVersionId, String itempath, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files/{*itempath}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("itempath", itempath);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for GetPackageFilesZip
	 * @param applicationVersionId 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageFilesZipUrl(Integer applicationVersionId, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/zip");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for AddPackage
	 * @param applicationVersionId 
	 * @return   String Resource Url
	 */
	public static MozuUrl addPackageUrl(Integer applicationVersionId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for AddPackageFile
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl addPackageFileUrl(Integer applicationVersionId, String filepath, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files/{*filepath}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("filepath", filepath);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for ChangePackageFileNameOrPath
	 * @param applicationVersionId 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl changePackageFileNameOrPathUrl(Integer applicationVersionId, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files/change-name-or-path");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for UpdatePackageFile
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl updatePackageFileUrl(Integer applicationVersionId, String filepath, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files/{*filepath}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("filepath", filepath);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

	/**
	 * Get Resource Url for DeletePackageFile
	 * @param applicationVersionId 
	 * @param filepath 
	 * @param packageId 
	 * @return   String Resource Url
	 */
	public static MozuUrl deletePackageFileUrl(Integer applicationVersionId, String filepath, Integer packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/developer/applications/applicationVersions/{applicationVersionId}/packages/{packageId}/files/{*filepath}");
		formatter.formatUrl("applicationVersionId", applicationVersionId);
		formatter.formatUrl("filepath", filepath);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.HOME_POD) ;
	}

}

