
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.content.documentlists;

import com.mozu.api.utils.UrlFormatter;


public class DocumentUrl
{

	/**
        * Get Resource Url for GetDocumentContent
        * @param documentId Unique identifier of the document.
        * @param documentListName The name of the document list associated with the document.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @return    String Resource Url
    */
	public static String getDocumentContentUrl(String documentId, String documentListName, String publishState)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}/content?publishState={publishState}");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("publishState", publishState);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetDocument
        * @param documentId Identifier of the document being retrieved.
        * @param documentListName The name of the document list associated with the document to retrieve.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @return    String Resource Url
    */
	public static String getDocumentUrl(String documentId, String documentListName, String publishState)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}?publishState={publishState}");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("publishState", publishState);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetDocuments
        * @param documentListName The name of the document list.
        * @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. You can filter a document's search results by any of its properties, including its name or folder path. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). <b>For example - "filter=Name+sw+Events"</b>
        * @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @param sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
        * @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
        * @return    String Resource Url
    */
	public static String getDocumentsUrl(String documentListName, String filter, Long pageSize, String publishState, String sortBy, Long startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents?publishState={publishState}&filter={filter}&sortBy={sortBy}&pageSize={pageSize}&startIndex={startIndex}");
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("publishState", publishState);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for CreateDocument
        * @param documentListName The descriptive alphanumeric document list name being created.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @return    String Resource Url
    */
	public static String createDocumentUrl(String documentListName, String publishState)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents?publishState={publishState}");
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("publishState", publishState);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for UpdateDocumentContent
        * @param documentId Unique identifier of the document.
        * @param documentListName The name of the document list associated with the document.
        * @return    String Resource Url
    */
	public static String updateDocumentContentUrl(String documentId, String documentListName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}/content");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for UpdateDocument
        * @param documentId Unique identifier of the document to update.
        * @param documentListName Name of the document list associated with the document.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @return    String Resource Url
    */
	public static String updateDocumentUrl(String documentId, String documentListName, String publishState)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}?publishState={publishState}");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("publishState", publishState);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for DeleteDocumentContent
        * @param documentId Unique identifier of the document.
        * @param documentListName The name of the document list associated with the document.
        * @return    String Resource Url
    */
	public static String deleteDocumentContentUrl(String documentId, String documentListName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}/content");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for DeleteDocument
        * @param documentId Identifier of the document being deleted.
        * @param documentListName The name of the document list associated with the document list being deleted.
        * @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
        * @return    String Resource Url
    */
	public static String deleteDocumentUrl(String documentId, String documentListName, String publishState)
	{
		UrlFormatter formatter = new UrlFormatter("/api/content/documentlists/{documentListName}/documents/{documentId}?publishState={publishState}");
		formatter.formatUrl("documentId", documentId);
		formatter.formatUrl("documentListName", documentListName);
		formatter.formatUrl("publishState", publishState);
		return formatter.getResourceUrl();
	}

	
}

