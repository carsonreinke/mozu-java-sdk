
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.commerce.customer.accounts;

import com.mozu.api.utils.UrlFormatter;


public class CustomerAttributeUrl
{

	/**
        * Get Resource Url for GetAccountAttribute
        * @param accountId Identifier of the customer account associated with the attribute to retrieve.
        * @param attributeId Identifier of the customer account attribute to retrieve.
        * @return    String Resource Url
    */
	public static String getAccountAttributeUrl(Integer accountId, Integer attributeId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/attributes/{attributeId}");
		formatter.formatUrl("accountId", accountId);
		formatter.formatUrl("attributeId", attributeId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetAccountAttributes
        * @param accountId Identifier of the customer account associated with the attributes to retrieve.
        * @param filter 
        * @param pageSize 
        * @param sortBy 
        * @param startIndex 
        * @return    String Resource Url
    */
	public static String getAccountAttributesUrl(Integer accountId, String filter, Integer pageSize, String sortBy, Integer startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/attributes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}");
		formatter.formatUrl("accountId", accountId);
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for AddAccountAttributes
        * @param accountId Identifier of the customer account associated with the new attribute.
        * @return    String Resource Url
    */
	public static String addAccountAttributesUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/attributes");
		formatter.formatUrl("accountId", accountId);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for UpdateAccountAttribute
        * @param accountId Identifier of the customer account associated with the attribute.
        * @param removeMissing If true, remove the items missing from the collection. If false, do not remove items missing from the collection.
        * @return    String Resource Url
    */
	public static String updateAccountAttributeUrl(Integer accountId, Boolean removeMissing)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/attributes?removeMissing={removeMissing}");
		formatter.formatUrl("accountId", accountId);
		formatter.formatUrl("removeMissing", removeMissing);
		return formatter.getResourceUrl();
	}

		
}

