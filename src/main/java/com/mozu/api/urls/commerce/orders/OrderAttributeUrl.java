
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.commerce.orders;

import com.mozu.api.utils.UrlFormatter;


public class OrderAttributeUrl
{

	/**
        * Get Resource Url for GetOrderAttributes
        * @param orderId Identifier of the order whose order attributes are being retrieved.
        * @return    String Resource Url
    */
	public static String getOrderAttributesUrl(String orderId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/attributes");
		formatter.formatUrl("orderId", orderId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetOrderAttributeSet
        * @param attributeSetId Identifier of the attribute set whose order attribute set is being retrieved.
        * @param orderId Identifier of the order whose order attribute set is being retrieved.
        * @return    String Resource Url
    */
	public static String getOrderAttributeSetUrl(Integer attributeSetId, String orderId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/attributeSets/{attributeSetId}");
		formatter.formatUrl("attributeSetId", attributeSetId);
		formatter.formatUrl("orderId", orderId);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for CreateOrderAttributes
        * @param orderId Identifier of the order whose attributes are being created.
        * @return    String Resource Url
    */
	public static String createOrderAttributesUrl(String orderId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/attributes");
		formatter.formatUrl("orderId", orderId);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for UpdateOrderAttributes
        * @param orderId Identifier of the order whose order attributes are being updated.
        * @param removeMissing If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.
        * @return    String Resource Url
    */
	public static String updateOrderAttributesUrl(String orderId, Boolean removeMissing)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/attributes?removeMissing={removeMissing}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("removeMissing", removeMissing);
		return formatter.getResourceUrl();
	}

		
}

