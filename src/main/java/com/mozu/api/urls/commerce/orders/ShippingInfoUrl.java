
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.commerce.orders;

import com.mozu.api.utils.UrlFormatter;


public class ShippingInfoUrl
{

	/**
        * Get Resource Url for GetShippingInfo
        * @param draft If true, retrieve the draft version of the order's shipping information, which might include uncommitted changes.
        * @param orderId Unique identifier of the order associated with the shipping information to retrieve.
        * @return    String Resource Url
    */
	public static String getShippingInfoUrl(Boolean draft, String orderId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/shippinginfo?draft={draft}");
		formatter.formatUrl("draft", draft);
		formatter.formatUrl("orderId", orderId);
		return formatter.getResourceUrl();
	}

			/**
        * Get Resource Url for SetShippingInfo
        * @param orderId Unique identifier of the order associated with the shipping information to update.
        * @param updateMode Specifies whether to set the shipping information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".
        * @param version If applicable, the version of the order or draft for which to set the shipping information.
        * @return    String Resource Url
    */
	public static String setShippingInfoUrl(String orderId, String updateMode, String version)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/shippinginfo?updatemode={updateMode}&version={version}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("updateMode", updateMode);
		formatter.formatUrl("version", version);
		return formatter.getResourceUrl();
	}

		
}

