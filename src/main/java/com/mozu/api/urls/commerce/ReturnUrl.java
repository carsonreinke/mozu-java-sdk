
/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.urls.commerce;

import com.mozu.api.utils.UrlFormatter;


public class ReturnUrl
{

	/**
        * Get Resource Url for GetReturns
        * @param filter 
        * @param pageSize 
        * @param sortBy 
        * @param startIndex 
        * @return    String Resource Url
    */
	public static String getReturnsUrl(String filter, Integer pageSize, String sortBy, Integer startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}");
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetReturn
        * @param returnId Returns the properties of the return specified in the request as well as system-supplied information.
        * @return    String Resource Url
    */
	public static String getReturnUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetAvailableReturnActions
        * @param returnId Retrieves a list of the actions available to perform for the specified return based on its current state.
        * @return    String Resource Url
    */
	public static String getAvailableReturnActionsUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/actions");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetPayments
        * @param returnId Returns the details of the refund payment associated with the return specified in the request.
        * @return    String Resource Url
    */
	public static String getPaymentsUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/payments");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetPayment
        * @param paymentId Unique identifier of the return payment to retrieve.
        * @param returnId Unique identifier of the return associated with the payment.
        * @return    String Resource Url
    */
	public static String getPaymentUrl(String paymentId, String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/payments/{paymentId}");
		formatter.formatUrl("paymentId", paymentId);
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for GetAvailablePaymentActionsForReturn
        * @param paymentId Unique identifier of the payment for which to perform the action.
        * @param returnId Unique identifier of the return associated with the payment.
        * @return    String Resource Url
    */
	public static String getAvailablePaymentActionsForReturnUrl(String paymentId, String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/payments/{paymentId}/actions");
		formatter.formatUrl("paymentId", paymentId);
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for CreateReturn
        * @return    String Resource Url
    */
	public static String createReturnUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/");
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for PerformPaymentActionForReturn
        * @param paymentId Unique identifier of the return payment to update.
        * @param returnId Unique identifier of the return associated with the refund payment.
        * @return    String Resource Url
    */
	public static String performPaymentActionForReturnUrl(String paymentId, String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/payments/{paymentId}/actions");
		formatter.formatUrl("paymentId", paymentId);
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for CreatePaymentActionForReturn
        * @param returnId Unique identifier of the return associated with the payment action.
        * @return    String Resource Url
    */
	public static String createPaymentActionForReturnUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}/payments/actions");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	/**
        * Get Resource Url for PerformReturnActions
        * @return    String Resource Url
    */
	public static String performReturnActionsUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/actions");
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for UpdateReturn
        * @param returnId Unique identifier of the return.
        * @return    String Resource Url
    */
	public static String updateReturnUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

		/**
        * Get Resource Url for DeleteReturn
        * @param returnId Unique identifier of the return to delete from the order.
        * @return    String Resource Url
    */
	public static String deleteReturnUrl(String returnId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/returns/{returnId}");
		formatter.formatUrl("returnId", returnId);
		return formatter.getResourceUrl();
	}

	
}

