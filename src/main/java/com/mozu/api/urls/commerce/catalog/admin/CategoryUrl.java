/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.catalog.admin;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;


public class CategoryUrl
{

	/**
	 * Get Resource Url for GetCategories
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @return   String Resource Url
	 */
	public static MozuUrl getCategoriesUrl(String filter, Integer pageSize, String sortBy, Integer startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}");
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetCategory
	 * @param categoryId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getCategoryUrl(Integer categoryId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/{categoryId}");
		formatter.formatUrl("categoryId", categoryId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetChildCategories
	 * @param categoryId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getChildCategoriesUrl(Integer categoryId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/{categoryId}/children");
		formatter.formatUrl("categoryId", categoryId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddCategory
	 * @return   String Resource Url
	 */
	public static MozuUrl addCategoryUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateCategory
	 * @param cascadeVisibility 
	 * @param categoryId 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateCategoryUrl(Boolean cascadeVisibility, Integer categoryId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/{categoryId}?cascadeVisibility={cascadeVisibility}");
		formatter.formatUrl("cascadeVisibility", cascadeVisibility);
		formatter.formatUrl("categoryId", categoryId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteCategoryById
	 * @param cascadeDelete 
	 * @param categoryId 
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteCategoryByIdUrl(Boolean cascadeDelete, Integer categoryId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/categories/{categoryId}/?cascadeDelete={cascadeDelete}");
		formatter.formatUrl("cascadeDelete", cascadeDelete);
		formatter.formatUrl("categoryId", categoryId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

