/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.platform;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the user data subresource to store user-level data required for a third-party application in the Mozu database.
/// </summary>
public class UserDataResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public UserDataResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves the value of a record in the Mozu database.
	* <p><pre><code>
	*    UserData userdata = new UserData();
	*   string string = userdata.GetDBValue( dbEntryQuery);
	* </code></pre></p>
	* @param dbEntryQuery The database entry query string used to retrieve the record information.
	* @return string
	* @see string
	*/
	public String getDBValue(String dbEntryQuery) throws Exception
	{
		MozuClient<String> client = com.mozu.api.clients.platform.UserDataClient.getDBValueClient( dbEntryQuery);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Creates a new record in the Mozu database based on the information supplied in the request.
	* <p><pre><code>
	*    UserData userdata = new UserData();
	*   userdata.CreateDBValue( dbEntryQuery,  value);
	* </code></pre></p>
	* @param dbEntryQuery The database entry string to create.
	* @param value The value string to create.
	* @return 
	* @see string
	*/
	public void createDBValue(String dbEntryQuery, String value) throws Exception
	{
		MozuClient client = com.mozu.api.clients.platform.UserDataClient.createDBValueClient( dbEntryQuery,  value);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

	/**
	* Updates a record in the Mozu database based on the information supplied in the request.
	* <p><pre><code>
	*    UserData userdata = new UserData();
	*   userdata.UpdateDBValue( dbEntryQuery,  value);
	* </code></pre></p>
	* @param dbEntryQuery The database entry query string used to update the record information.
	* @param value The database value to update.
	* @return 
	* @see string
	*/
	public void updateDBValue(String dbEntryQuery, String value) throws Exception
	{
		MozuClient client = com.mozu.api.clients.platform.UserDataClient.updateDBValueClient( dbEntryQuery,  value);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

	/**
	* Removes a previously defined record in the Mozu database.
	* <p><pre><code>
	*    UserData userdata = new UserData();
	*   userdata.DeleteDBValue( dbEntryQuery);
	* </code></pre></p>
	* @param dbEntryQuery The database entry string to delete.
	* @return 
	*/
	public void deleteDBValue(String dbEntryQuery) throws Exception
	{
		MozuClient client = com.mozu.api.clients.platform.UserDataClient.deleteDBValueClient( dbEntryQuery);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



