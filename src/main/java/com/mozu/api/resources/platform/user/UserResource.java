/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.platform.user;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use this resource to manage shopper accounts for your Mozu tenant.
/// </summary>
public class UserResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public UserResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves the details of a user account by supplying the user's email address.
	* <p><pre><code>
	*    User user = new User();
	*   User user = user.GetUserByEmail( emailAddress);
	* </code></pre></p>
	* @param emailAddress The email address of the specified user or the email address associated with the specified entity.
	* @return com.mozu.api.contracts.core.User
	* @see com.mozu.api.contracts.core.User
	*/
	public com.mozu.api.contracts.core.User getUserByEmail(String emailAddress) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.User> client = com.mozu.api.clients.platform.user.UserClient.getUserByEmailClient( emailAddress);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves the details of a user account by supplying the user ID.
	* <p><pre><code>
	*    User user = new User();
	*   User user = user.GetUser( userId);
	* </code></pre></p>
	* @param userId Unique identifier of the user.
	* @return com.mozu.api.contracts.core.User
	* @see com.mozu.api.contracts.core.User
	*/
	public com.mozu.api.contracts.core.User getUser(String userId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.User> client = com.mozu.api.clients.platform.user.UserClient.getUserClient( userId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Creates a new shopper user account.
	* <p><pre><code>
	*    User user = new User();
	*   User user = user.CreateUser( shopper);
	* </code></pre></p>
	* @param shopper Properties of the new shopper user account to create.
	* @return com.mozu.api.contracts.core.User
	* @see com.mozu.api.contracts.core.User
	* @see com.mozu.api.contracts.core.User
	*/
	public com.mozu.api.contracts.core.User createUser(com.mozu.api.contracts.core.User shopper) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.User> client = com.mozu.api.clients.platform.user.UserClient.createUserClient( shopper);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Creates a bulk collection of new shopper user accounts.
	* <p><pre><code>
	*    User user = new User();
	*   UserCollection userCollection = user.CreateUsers( users);
	* </code></pre></p>
	* @param users Properties of the new shopper user accounts to create.
	* @return com.mozu.api.contracts.core.UserCollection
	* @see com.mozu.api.contracts.core.UserCollection
	* @see com.mozu.api.contracts.core.UserCollection
	*/
	public com.mozu.api.contracts.core.UserCollection createUsers(com.mozu.api.contracts.core.UserCollection users) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.UserCollection> client = com.mozu.api.clients.platform.user.UserClient.createUsersClient( users);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Logs a shopper user in to a tenant.
	* <p><pre><code>
	*    User user = new User();
	*   UserLoginResult userLoginResult = user.Login( userAuthInfo);
	* </code></pre></p>
	* @param userAuthInfo The authentication information required to log the user in, which consists of email address and password.
	* @return com.mozu.api.contracts.user.UserLoginResult
	* @see com.mozu.api.contracts.user.UserLoginResult
	* @see com.mozu.api.contracts.core.UserAuthInfo
	*/
	public com.mozu.api.contracts.user.UserLoginResult login(com.mozu.api.contracts.core.UserAuthInfo userAuthInfo) throws Exception
	{
		MozuClient<com.mozu.api.contracts.user.UserLoginResult> client = com.mozu.api.clients.platform.user.UserClient.loginClient( userAuthInfo);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Reset the shopper user password by supplying the email address.
	* <p><pre><code>
	*    User user = new User();
	*   user.ResetPassword( resetPasswordInfo);
	* </code></pre></p>
	* @param resetPasswordInfo The information required to reset the password, which consists of the user email address.
	* @return 
	* @see com.mozu.api.contracts.user.ResetPasswordInfo
	*/
	public void resetPassword(com.mozu.api.contracts.user.ResetPasswordInfo resetPasswordInfo) throws Exception
	{
		MozuClient client = com.mozu.api.clients.platform.user.UserClient.resetPasswordClient( resetPasswordInfo);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

		
}



