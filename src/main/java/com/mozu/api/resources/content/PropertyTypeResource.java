/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.content;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the property types subresource to manage content properties.
/// </summary>
public class PropertyTypeResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public PropertyTypeResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of the content property types.
	* <p><pre><code>
	*    PropertyType propertytype = new PropertyType();
	*   PropertyTypeCollection propertyTypeCollection = propertytype.GetList();
	* </code></pre></p>
	* @return com.mozu.api.contracts.content.PropertyTypeCollection
	* @see com.mozu.api.contracts.content.PropertyTypeCollection
	*/
	public com.mozu.api.contracts.content.PropertyTypeCollection getList() throws Exception
	{
		return getList( null,  null);
	}

/**
	* Retrieves a list of the content property types.
	* <p><pre><code>
	*    PropertyType propertytype = new PropertyType();
	*   PropertyTypeCollection propertyTypeCollection = propertytype.GetList( pageSize,  startIndex);
	* </code></pre></p>
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param startIndex 
	* @return com.mozu.api.contracts.content.PropertyTypeCollection
	* @see com.mozu.api.contracts.content.PropertyTypeCollection
	*/
	public com.mozu.api.contracts.content.PropertyTypeCollection getList(Integer pageSize, Integer startIndex) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.PropertyTypeCollection> client = com.mozu.api.clients.content.PropertyTypeClient.getListClient( pageSize,  startIndex);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves the details of the content property type.
	* <p><pre><code>
	*    PropertyType propertytype = new PropertyType();
	*   PropertyType propertyType = propertytype.Get( propertyTypeName);
	* </code></pre></p>
	* @param propertyTypeName The name of the content property type.
	* @return com.mozu.api.contracts.content.PropertyType
	* @see com.mozu.api.contracts.content.PropertyType
	*/
	public com.mozu.api.contracts.content.PropertyType get(String propertyTypeName) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.PropertyType> client = com.mozu.api.clients.content.PropertyTypeClient.getClient( propertyTypeName);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves the value types associated with a content property.
	* <p><pre><code>
	*    PropertyType propertytype = new PropertyType();
	*   PropertyValueType propertyValueType = propertytype.PropertyValueTypes();
	* </code></pre></p>
	* @return List<com.mozu.api.contracts.content.PropertyValueType>
	* @see com.mozu.api.contracts.content.PropertyValueType
	*/
	public ArrayList<com.mozu.api.contracts.content.PropertyValueType> propertyValueTypes() throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.content.PropertyValueType>> client = com.mozu.api.clients.content.PropertyTypeClient.propertyValueTypesClient();
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

			
}



