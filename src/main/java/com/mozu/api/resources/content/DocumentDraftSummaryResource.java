/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.content;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the document publishing subresource to manage and publish document drafts in the Content service.
/// </summary>
public class DocumentDraftSummaryResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public DocumentDraftSummaryResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   DocumentDraftSummaryPagedCollection documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries();
	* </code></pre></p>
	* @return com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection
	* @see com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection
	*/
	public com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection listDocumentDraftSummaries() throws Exception
	{
		return listDocumentDraftSummaries( null,  null,  null);
	}

/**
	* Retrieves a list of the documents currently in draft state, according to any defined filter and sort criteria.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   DocumentDraftSummaryPagedCollection documentDraftSummaryPagedCollection = documentdraftsummary.ListDocumentDraftSummaries( documentLists,  pageSize,  startIndex);
	* </code></pre></p>
	* @param documentLists Lists that contain the document drafts.
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection
	* @see com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection
	*/
	public com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection listDocumentDraftSummaries(String documentLists, Integer pageSize, Integer startIndex) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.DocumentDraftSummaryPagedCollection> client = com.mozu.api.clients.content.DocumentDraftSummaryClient.listDocumentDraftSummariesClient( documentLists,  pageSize,  startIndex);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

		/**
	* Publish one or more document drafts to live content on the site.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   documentdraftsummary.PublishDocuments( documentIds);
	* </code></pre></p>
	* @param documentIds List of unique identifiers of the document drafts to publish.
	* @return 
	* @see string
	*/
	public void publishDocuments(ArrayList<String> documentIds) throws Exception
	{
		publishDocuments( null,  documentIds);
	}

/**
	* Publish one or more document drafts to live content on the site.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   documentdraftsummary.PublishDocuments( documentLists,  documentIds);
	* </code></pre></p>
	* @param documentLists List of document lists that contain documents to publish.
	* @param documentIds List of unique identifiers of the document drafts to publish.
	* @return 
	* @see string
	*/
	public void publishDocuments(String documentLists, ArrayList<String> documentIds) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.DocumentDraftSummaryClient.publishDocumentsClient( documentLists,  documentIds);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

	/**
	* Deletes the drafts of the specified documents. Published documents cannot be deleted.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   documentdraftsummary.DeleteDocumentDrafts( documentIds);
	* </code></pre></p>
	* @param documentIds Unique identifiers of the documents to delete.
	* @return 
	*/
	public void deleteDocumentDrafts(String documentIds) throws Exception
	{
		deleteDocumentDrafts( documentIds,  null);
	}

/**
	* Deletes the drafts of the specified documents. Published documents cannot be deleted.
	* <p><pre><code>
	*    DocumentDraftSummary documentdraftsummary = new DocumentDraftSummary();
	*   documentdraftsummary.DeleteDocumentDrafts( documentIds,  documentLists);
	* </code></pre></p>
	* @param documentIds Unique identifiers of the documents to delete.
	* @param documentLists List of document lists that contain documents to delete.
	* @return 
	*/
	public void deleteDocumentDrafts(String documentIds, String documentLists) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.DocumentDraftSummaryClient.deleteDocumentDraftsClient( documentIds,  documentLists);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



