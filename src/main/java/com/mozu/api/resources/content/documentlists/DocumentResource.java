/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.content.documentlists;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class DocumentResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public DocumentResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	Document document = document.GetDocument( documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 */
	public com.mozu.api.contracts.content.Document getDocument(String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.Document> client = com.mozu.api.clients.content.documentlists.DocumentClient.getDocumentClient( documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	document.GetDocumentContent( documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void getDocumentContent(String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentClient.getDocumentContentClient( documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	DocumentCollection documentCollection = document.GetDocuments( documentListName);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.content.DocumentCollection
	 * @see com.mozu.api.contracts.content.DocumentCollection
	 */
	public com.mozu.api.contracts.content.DocumentCollection getDocuments(String documentListName) throws Exception
	{
		return getDocuments( documentListName,  null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	DocumentCollection documentCollection = document.GetDocuments( documentListName,  filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.content.DocumentCollection
	 * @see com.mozu.api.contracts.content.DocumentCollection
	 */
	public com.mozu.api.contracts.content.DocumentCollection getDocuments(String documentListName, String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.DocumentCollection> client = com.mozu.api.clients.content.documentlists.DocumentClient.getDocumentsClient( documentListName,  filter,  pageSize,  sortBy,  startIndex, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	Document document = document.CreateDocument( document,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @param document 
	 * @return com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 */
	public com.mozu.api.contracts.content.Document createDocument(com.mozu.api.contracts.content.Document document, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.Document> client = com.mozu.api.clients.content.documentlists.DocumentClient.createDocumentClient( document,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	Document document = document.UpdateDocument( document,  documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @param document 
	 * @return com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 */
	public com.mozu.api.contracts.content.Document updateDocument(com.mozu.api.contracts.content.Document document, String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.Document> client = com.mozu.api.clients.content.documentlists.DocumentClient.updateDocumentClient( document,  documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	document.UpdateDocumentContent( stream,  documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return 
	 * @see Stream
	 */
	public void updateDocumentContent(java.io.InputStream stream, String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentClient.updateDocumentContentClient( stream,  documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	document.DeleteDocument( documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteDocument(String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentClient.deleteDocumentClient( documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Document document = new Document();
	 *	document.DeleteDocumentContent( documentId,  documentListName, authTicket);
	 * </code></pre></p>
	 * @param documentId 
	 * @param documentListName 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteDocumentContent(String documentId, String documentListName, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentClient.deleteDocumentContentClient( documentId,  documentListName, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



