/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.content.documentlists;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class DocumentTreeResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public DocumentTreeResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.GetTreeDocumentContent( documentListName,  documentName);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void getTreeDocumentContent(String documentListName, String documentName) throws Exception
	{
		getTreeDocumentContent( documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.GetTreeDocumentContent( documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void getTreeDocumentContent(String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentTreeClient.getTreeDocumentContentClient( documentListName,  documentName,  folderId,  folderPath, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	Document document = documenttree.GetTreeDocument( documentListName,  documentName);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 */
	public com.mozu.api.contracts.content.Document getTreeDocument(String documentListName, String documentName) throws Exception
	{
		return getTreeDocument( documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	Document document = documenttree.GetTreeDocument( documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.content.Document
	 * @see com.mozu.api.contracts.content.Document
	 */
	public com.mozu.api.contracts.content.Document getTreeDocument(String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.content.Document> client = com.mozu.api.clients.content.documentlists.DocumentTreeClient.getTreeDocumentClient( documentListName,  documentName,  folderId,  folderPath, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.UpdateTreeDocumentContent( stream,  documentListName,  documentName);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return 
	 * @see Stream
	 */
	public void updateTreeDocumentContent(java.io.InputStream stream, String documentListName, String documentName) throws Exception
	{
		updateTreeDocumentContent( stream,  documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.UpdateTreeDocumentContent( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return 
	 * @see Stream
	 */
	public void updateTreeDocumentContent(java.io.InputStream stream, String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentTreeClient.updateTreeDocumentContentClient( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.DeleteTreeDocumentContent( stream,  documentListName,  documentName);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return 
	 * @see Stream
	 */
	public void deleteTreeDocumentContent(java.io.InputStream stream, String documentListName, String documentName) throws Exception
	{
		deleteTreeDocumentContent( stream,  documentListName,  documentName,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	DocumentTree documenttree = new DocumentTree();
	 *	documenttree.DeleteTreeDocumentContent( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
	 * </code></pre></p>
	 * @param documentListName 
	 * @param documentName 
	 * @param folderId 
	 * @param folderPath 
	 * @param authTicket User Auth Ticket
	 * @param stream 
	 * @return 
	 * @see Stream
	 */
	public void deleteTreeDocumentContent(java.io.InputStream stream, String documentListName, String documentName, String folderId, String folderPath, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.content.documentlists.DocumentTreeClient.deleteTreeDocumentContentClient( stream,  documentListName,  documentName,  folderId,  folderPath, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



