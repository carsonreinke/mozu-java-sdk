/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.content.documentlists;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the facets subresource to allow a merchant to add information for product indexing and searching.
/// </summary>
public class FacetResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public FacetResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves the properties of facets that aid in indexing and searching.
	* <p><pre><code>
	*    Facet facet = new Facet();
	*   Facet facet = facet.GetFacets( documentListName,  propertyName);
	* </code></pre></p>
	* @param documentListName The document list associated with the facets to retrieve.
	* @param propertyName The property name associated with the facets to retrieve.
	* @return List<com.mozu.api.contracts.content.Facet>
	* @see com.mozu.api.contracts.content.Facet
	*/
	public ArrayList<com.mozu.api.contracts.content.Facet> getFacets(String documentListName, String propertyName) throws Exception
	{
		return getFacets( documentListName,  propertyName,  null);
	}

/**
	* Retrieves the properties of facets that aid in indexing and searching.
	* <p><pre><code>
	*    Facet facet = new Facet();
	*   Facet facet = facet.GetFacets( documentListName,  propertyName,  publishState);
	* </code></pre></p>
	* @param documentListName The document list associated with the facets to retrieve.
	* @param propertyName The property name associated with the facets to retrieve.
	* @param publishState The current state of the document, which is Active, Draft, or Latest. Active documents are published and cannot be deleted. Querying Latest returns the most recent version of the document, regardless of whether it is published or a draft.
	* @return List<com.mozu.api.contracts.content.Facet>
	* @see com.mozu.api.contracts.content.Facet
	*/
	public ArrayList<com.mozu.api.contracts.content.Facet> getFacets(String documentListName, String propertyName, String publishState) throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.content.Facet>> client = com.mozu.api.clients.content.documentlists.FacetClient.getFacetsClient( documentListName,  propertyName,  publishState);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

			
}



