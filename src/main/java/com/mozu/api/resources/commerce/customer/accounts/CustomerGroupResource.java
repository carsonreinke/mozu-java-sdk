/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.customer.accounts;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class CustomerGroupResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public CustomerGroupResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroupCollection customerGroupCollection = customergroup.GetAccountGroups( accountId);
	 * </code></pre></p>
	 * @param accountId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroupCollection
	 * @see com.mozu.api.contracts.customer.CustomerGroupCollection
	 */
	public com.mozu.api.contracts.customer.CustomerGroupCollection getAccountGroups(Integer accountId) throws Exception
	{
		return getAccountGroups( accountId,  null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroupCollection customerGroupCollection = customergroup.GetAccountGroups( accountId,  filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroupCollection
	 * @see com.mozu.api.contracts.customer.CustomerGroupCollection
	 */
	public com.mozu.api.contracts.customer.CustomerGroupCollection getAccountGroups(Integer accountId, String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> client = com.mozu.api.clients.commerce.customer.accounts.CustomerGroupClient.getAccountGroupsClient( accountId,  filter,  pageSize,  sortBy,  startIndex, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroup customerGroup = customergroup.GetAccountGroup( accountId,  groupId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 */
	public com.mozu.api.contracts.customer.CustomerGroup getAccountGroup(Integer accountId, Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> client = com.mozu.api.clients.commerce.customer.accounts.CustomerGroupClient.getAccountGroupClient( accountId,  groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroup customerGroup = customergroup.AddAccountGroup( accountId,  groupId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 */
	public com.mozu.api.contracts.customer.CustomerGroup addAccountGroup(Integer accountId, Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> client = com.mozu.api.clients.commerce.customer.accounts.CustomerGroupClient.addAccountGroupClient( accountId,  groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	customergroup.DeleteAccountGroup( accountId,  groupId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteAccountGroup(Integer accountId, Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.customer.accounts.CustomerGroupClient.deleteAccountGroupClient( accountId,  groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



