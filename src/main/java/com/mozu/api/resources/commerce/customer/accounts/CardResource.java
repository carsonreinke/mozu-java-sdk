/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.customer.accounts;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Cards subresource to manage stored credit cards for customer accounts. Mozu stores limited card data in the Customer service for expedited ordering purposes; however, the complete card data is stored in the Payment service.
/// </summary>
public class CardResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public CardResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves all stored credit cards for the customer account.
	* <p><pre><code>
	*    Card card = new Card();
	*   CardCollection cardCollection = card.GetAccountCards( accountId);
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @return com.mozu.api.contracts.customer.CardCollection
	* @see com.mozu.api.contracts.customer.CardCollection
	*/
	public com.mozu.api.contracts.customer.CardCollection getAccountCards(Integer accountId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CardCollection> client = com.mozu.api.clients.commerce.customer.accounts.CardClient.getAccountCardsClient( accountId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Creates a new credit card record and stores it for the customer account.
	* <p><pre><code>
	*    Card card = new Card();
	*   Card card = card.AddAccountCard( accountId,  card);
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @param card Properties of the customer credit card to add to the account.
	* @return com.mozu.api.contracts.customer.Card
	* @see com.mozu.api.contracts.customer.Card
	* @see com.mozu.api.contracts.customer.Card
	*/
	public com.mozu.api.contracts.customer.Card addAccountCard(Integer accountId, com.mozu.api.contracts.customer.Card card) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.Card> client = com.mozu.api.clients.commerce.customer.accounts.CardClient.addAccountCardClient( accountId,  card);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Update one or more properties of a credit card defined for a customer account.
	* <p><pre><code>
	*    Card card = new Card();
	*   Card card = card.UpdateAccountCard( accountId,  card);
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @param card Properties of the customer account credit card to update.
	* @return com.mozu.api.contracts.customer.Card
	* @see com.mozu.api.contracts.customer.Card
	* @see com.mozu.api.contracts.customer.Card
	*/
	public com.mozu.api.contracts.customer.Card updateAccountCard(Integer accountId, com.mozu.api.contracts.customer.Card card) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.Card> client = com.mozu.api.clients.commerce.customer.accounts.CardClient.updateAccountCardClient( accountId,  card);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Removes a stored credit card from a customer account.
	* <p><pre><code>
	*    Card card = new Card();
	*   card.DeleteAccountCard( accountId,  cardId);
	* </code></pre></p>
	* @param accountId Unique identifier of the customer account.
	* @param cardId Unique identifier of the credit card to delete.
	* @return 
	*/
	public void deleteAccountCard(Integer accountId, String cardId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.customer.accounts.CardClient.deleteAccountCardClient( accountId,  cardId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



