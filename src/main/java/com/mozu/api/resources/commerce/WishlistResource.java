/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class WishlistResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public WishlistResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	WishlistCollection wishlistCollection = wishlist.GetWishlists();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection
	 */
	public com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection getWishlists() throws Exception
	{
		return getWishlists( null,  null,  null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	WishlistCollection wishlistCollection = wishlist.GetWishlists( filter,  pageSize,  q,  qLimit,  sortBy,  startIndex, authTicket);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param q 
	 * @param qLimit 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection
	 */
	public com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection getWishlists(String filter, Integer pageSize, String q, Integer qLimit, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistCollection> client = com.mozu.api.clients.commerce.WishlistClient.getWishlistsClient( filter,  pageSize,  q,  qLimit,  sortBy,  startIndex, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	Wishlist wishlist = wishlist.GetWishlist( wishlistId, authTicket);
	 * </code></pre></p>
	 * @param wishlistId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 */
	public com.mozu.api.contracts.commerceruntime.wishlists.Wishlist getWishlist(String wishlistId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> client = com.mozu.api.clients.commerce.WishlistClient.getWishlistClient( wishlistId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	Wishlist wishlist = wishlist.CreateWishlist( wishlist, authTicket);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param wishlist 
	 * @return com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 */
	public com.mozu.api.contracts.commerceruntime.wishlists.Wishlist createWishlist(com.mozu.api.contracts.commerceruntime.wishlists.Wishlist wishlist, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> client = com.mozu.api.clients.commerce.WishlistClient.createWishlistClient( wishlist, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	Wishlist wishlist = wishlist.UpdateWishlist( wishlist,  wishlistId, authTicket);
	 * </code></pre></p>
	 * @param wishlistId 
	 * @param authTicket User Auth Ticket
	 * @param wishlist 
	 * @return com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 */
	public com.mozu.api.contracts.commerceruntime.wishlists.Wishlist updateWishlist(com.mozu.api.contracts.commerceruntime.wishlists.Wishlist wishlist, String wishlistId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> client = com.mozu.api.clients.commerce.WishlistClient.updateWishlistClient( wishlist,  wishlistId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Wishlist wishlist = new Wishlist();
	 *	wishlist.DeleteWishlist( wishlistId, authTicket);
	 * </code></pre></p>
	 * @param wishlistId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteWishlist(String wishlistId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.WishlistClient.deleteWishlistClient( wishlistId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



