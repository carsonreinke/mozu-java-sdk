/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.orders;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class PickupResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public PickupResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	Pickup pickup = new Pickup();
	 *	Pickup pickup = pickup.GetPickup( orderId,  pickupId, authTicket);
	 * </code></pre></p>
	 * @param orderId 
	 * @param pickupId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Pickup getPickup(String orderId, String pickupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Pickup> client = com.mozu.api.clients.commerce.orders.PickupClient.getPickupClient( orderId,  pickupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Pickup pickup = new Pickup();
	 *	string string = pickup.GetAvailablePickupFulfillmentActions( orderId,  pickupId, authTicket);
	 * </code></pre></p>
	 * @param orderId 
	 * @param pickupId 
	 * @param authTicket User Auth Ticket
	 * @return List<string>
	 * @see string
	 */
	public List<String> getAvailablePickupFulfillmentActions(String orderId, String pickupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<List<String>> client = com.mozu.api.clients.commerce.orders.PickupClient.getAvailablePickupFulfillmentActionsClient( orderId,  pickupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Pickup pickup = new Pickup();
	 *	Pickup pickup = pickup.CreatePickup( pickup,  orderId, authTicket);
	 * </code></pre></p>
	 * @param orderId 
	 * @param authTicket User Auth Ticket
	 * @param pickup 
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Pickup createPickup(com.mozu.api.contracts.commerceruntime.fulfillment.Pickup pickup, String orderId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Pickup> client = com.mozu.api.clients.commerce.orders.PickupClient.createPickupClient( pickup,  orderId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Pickup pickup = new Pickup();
	 *	Pickup pickup = pickup.UpdatePickup( pickup,  orderId,  pickupId, authTicket);
	 * </code></pre></p>
	 * @param orderId 
	 * @param pickupId 
	 * @param authTicket User Auth Ticket
	 * @param pickup 
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Pickup
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Pickup updatePickup(com.mozu.api.contracts.commerceruntime.fulfillment.Pickup pickup, String orderId, String pickupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Pickup> client = com.mozu.api.clients.commerce.orders.PickupClient.updatePickupClient( pickup,  orderId,  pickupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Pickup pickup = new Pickup();
	 *	pickup.DeletePickup( orderId,  pickupId, authTicket);
	 * </code></pre></p>
	 * @param orderId 
	 * @param pickupId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deletePickup(String orderId, String pickupId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.PickupClient.deletePickupClient( orderId,  pickupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



