/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.orders;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use this subresource to manage notes associated with an active order.
/// </summary>
public class OrderNoteResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public OrderNoteResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of all notes for an order.
	* <p><pre><code>
	*    OrderNote ordernote = new OrderNote();
	*   OrderNote orderNote = ordernote.GetOrderNotes( orderId);
	* </code></pre></p>
	* @param orderId Unique identifier of the order whose notes are retrieved.
	* @return List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote> getOrderNotes(String orderId) throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> client = com.mozu.api.clients.commerce.orders.OrderNoteClient.getOrderNotesClient( orderId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a specific order note from an order.
	* <p><pre><code>
	*    OrderNote ordernote = new OrderNote();
	*   OrderNote orderNote = ordernote.GetOrderNote( noteId,  orderId);
	* </code></pre></p>
	* @param noteId Unique identifier of the note text to retrieve.
	* @param orderId Unique identifier of the order note to retrieve.
	* @return com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public com.mozu.api.contracts.commerceruntime.orders.OrderNote getOrderNote(String noteId, String orderId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> client = com.mozu.api.clients.commerce.orders.OrderNoteClient.getOrderNoteClient( noteId,  orderId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Adds a note to the order. This is an internal note that the merchant can add to an order.
	* <p><pre><code>
	*    OrderNote ordernote = new OrderNote();
	*   OrderNote orderNote = ordernote.CreateOrderNote( orderId,  orderNote);
	* </code></pre></p>
	* @param orderId Unique identifier of the order to add a note.
	* @param orderNote The Unicode alphanumeric text contained in the note. Max length: 256 characters.
	* @return com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public com.mozu.api.contracts.commerceruntime.orders.OrderNote createOrderNote(String orderId, com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> client = com.mozu.api.clients.commerce.orders.OrderNoteClient.createOrderNoteClient( orderId,  orderNote);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Updates a specific order note for an order.
	* <p><pre><code>
	*    OrderNote ordernote = new OrderNote();
	*   OrderNote orderNote = ordernote.UpdateOrderNote( noteId,  orderId,  orderNote);
	* </code></pre></p>
	* @param noteId Unique identifier of the note whose text is being updated.
	* @param orderId Unique identifier of the order whose note is being updated.
	* @param orderNote The Unicode alphanumeric text contained in the note.
	* @return com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	* @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	*/
	public com.mozu.api.contracts.commerceruntime.orders.OrderNote updateOrderNote(String noteId, String orderId, com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> client = com.mozu.api.clients.commerce.orders.OrderNoteClient.updateOrderNoteClient( noteId,  orderId,  orderNote);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Deletes a specific order note on an order.
	* <p><pre><code>
	*    OrderNote ordernote = new OrderNote();
	*   ordernote.DeleteOrderNote( noteId,  orderId);
	* </code></pre></p>
	* @param noteId Unique identifier of the note text to delete.
	* @param orderId Unique identifier of the order note to delete.
	* @return 
	*/
	public void deleteOrderNote(String noteId, String orderId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.OrderNoteClient.deleteOrderNoteClient( noteId,  orderId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



