/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.catalog.admin.attributedefinition.producttypes;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Properties subresource to define how property product attributes are used for a specific product type. Product attribute definitions are unique for each associated product type.
/// </summary>
public class ProductTypePropertyResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public ProductTypePropertyResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of product property attributes defined for a product type.
	* <p><pre><code>
	*    ProductTypeProperty producttypeproperty = new ProductTypeProperty();
	*   AttributeInProductType attributeInProductType = producttypeproperty.GetProperties( productTypeId);
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @return List<com.mozu.api.contracts.productadmin.AttributeInProductType>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType> getProperties(Integer productTypeId) throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyClient.getPropertiesClient( productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a product property attribute definition for the specified product type.
	* <p><pre><code>
	*    ProductTypeProperty producttypeproperty = new ProductTypeProperty();
	*   AttributeInProductType attributeInProductType = producttypeproperty.GetProperty( attributeFQN,  productTypeId);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType getProperty(String attributeFQN, Integer productTypeId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyClient.getPropertyClient( attributeFQN,  productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Assigns a property attribute to the specified product type, according to the information defined in the request.
	* <p><pre><code>
	*    ProductTypeProperty producttypeproperty = new ProductTypeProperty();
	*   AttributeInProductType attributeInProductType = producttypeproperty.AddProperty( productTypeId,  attributeInProductType);
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType Properties of the property attribute to define for the specified product type.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType addProperty(Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyClient.addPropertyClient( productTypeId,  attributeInProductType);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Updates the definition of a property attribute for the specified product type.
	* <p><pre><code>
	*    ProductTypeProperty producttypeproperty = new ProductTypeProperty();
	*   AttributeInProductType attributeInProductType = producttypeproperty.UpdateProperty( attributeFQN,  productTypeId,  attributeInProductType);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType Properties of the property attribute to define for the product type.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType updateProperty(String attributeFQN, Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyClient.updatePropertyClient( attributeFQN,  productTypeId,  attributeInProductType);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Removes a property attribute previously defined for the specified product type.
	* <p><pre><code>
	*    ProductTypeProperty producttypeproperty = new ProductTypeProperty();
	*   producttypeproperty.DeleteProperty( attributeFQN,  productTypeId);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @return 
	*/
	public void deleteProperty(String attributeFQN, Integer productTypeId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypePropertyClient.deletePropertyClient( attributeFQN,  productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



