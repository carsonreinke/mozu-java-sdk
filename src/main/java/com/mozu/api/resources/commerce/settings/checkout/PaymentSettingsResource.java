/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.settings.checkout;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Specify settings when creating payments for order checkout on the site.
/// </summary>
public class PaymentSettingsResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public PaymentSettingsResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of the payment settings for the specified site.
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   PaymentSettings paymentSettings = paymentsettings.GetPaymentSettings();
	* </code></pre></p>
	* @return com.mozu.api.contracts.sitesettings.order.PaymentSettings
	* @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	*/
	public com.mozu.api.contracts.sitesettings.order.PaymentSettings getPaymentSettings() throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.getPaymentSettingsClient();
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* 
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   Gateway gateway = paymentsettings.GetActiveGatewayForCountry( countryCode);
	* </code></pre></p>
	* @param countryCode 
	* @return com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	*/
	public com.mozu.api.contracts.sitesettings.order.Gateway getActiveGatewayForCountry(String countryCode) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.getActiveGatewayForCountryClient( countryCode);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* 
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   GatewayDefinition gatewayDefinition = paymentsettings.GetGatewayDefinitions();
	* </code></pre></p>
	* @return List<com.mozu.api.contracts.paymentservice.GatewayDefinition>
	* @see com.mozu.api.contracts.paymentservice.GatewayDefinition
	*/
	public ArrayList<com.mozu.api.contracts.paymentservice.GatewayDefinition> getGatewayDefinitions() throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.paymentservice.GatewayDefinition>> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.getGatewayDefinitionsClient();
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* 
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   Gateway gateway = paymentsettings.GetGateway( gatewayId);
	* </code></pre></p>
	* @param gatewayId 
	* @return com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	*/
	public com.mozu.api.contracts.sitesettings.order.Gateway getGateway(String gatewayId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.getGatewayClient( gatewayId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* 
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   Gateway gateway = paymentsettings.CreateGateway( gateway);
	* </code></pre></p>
	* @param gateway 
	* @return com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	*/
	public com.mozu.api.contracts.sitesettings.order.Gateway createGateway(com.mozu.api.contracts.sitesettings.order.Gateway gateway) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.createGatewayClient( gateway);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Updates one or more properties in the configured payment settings for a site.
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   PaymentSettings paymentSettings = paymentsettings.UpdatePaymentSettings( paymentSettings);
	* </code></pre></p>
	* @param paymentSettings Properties of the payment settings to use for the site.
	* @return com.mozu.api.contracts.sitesettings.order.PaymentSettings
	* @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	* @see com.mozu.api.contracts.sitesettings.order.PaymentSettings
	*/
	public com.mozu.api.contracts.sitesettings.order.PaymentSettings updatePaymentSettings(com.mozu.api.contracts.sitesettings.order.PaymentSettings paymentSettings) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.PaymentSettings> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.updatePaymentSettingsClient( paymentSettings);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* 
	* <p><pre><code>
	*    PaymentSettings paymentsettings = new PaymentSettings();
	*   Gateway gateway = paymentsettings.UpdateGateway( gatewayId,  gateway);
	* </code></pre></p>
	* @param gatewayId 
	* @param gateway 
	* @return com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	* @see com.mozu.api.contracts.sitesettings.order.Gateway
	*/
	public com.mozu.api.contracts.sitesettings.order.Gateway updateGateway(String gatewayId, com.mozu.api.contracts.sitesettings.order.Gateway gateway) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.order.Gateway> client = com.mozu.api.clients.commerce.settings.checkout.PaymentSettingsClient.updateGatewayClient( gatewayId,  gateway);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	
}



