/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.catalog.admin.products;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
/// </summary>
public class ProductVariationResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public ProductVariationResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves the details of a product variation based on the supplied product code and variation key.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   ProductVariation productVariation = productvariation.GetProductVariation( productCode,  variationKey);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return com.mozu.api.contracts.productadmin.ProductVariation
	* @see com.mozu.api.contracts.productadmin.ProductVariation
	*/
	public com.mozu.api.contracts.productadmin.ProductVariation getProductVariation(String productCode, String variationKey) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductVariation> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductVariationClient.getProductVariationClient( productCode,  variationKey);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a list of the product variations configured for the specified product code.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   ProductVariationPagedCollection productVariationPagedCollection = productvariation.GetProductVariations( productCode);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return com.mozu.api.contracts.productadmin.ProductVariationPagedCollection
	* @see com.mozu.api.contracts.productadmin.ProductVariationPagedCollection
	*/
	public com.mozu.api.contracts.productadmin.ProductVariationPagedCollection getProductVariations(String productCode) throws Exception
	{
		return getProductVariations( null,  null,  productCode,  null,  null);
	}

/**
	* Retrieves a list of the product variations configured for the specified product code.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   ProductVariationPagedCollection productVariationPagedCollection = productvariation.GetProductVariations( filter,  pageSize,  productCode,  sortBy,  startIndex);
	* </code></pre></p>
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return com.mozu.api.contracts.productadmin.ProductVariationPagedCollection
	* @see com.mozu.api.contracts.productadmin.ProductVariationPagedCollection
	*/
	public com.mozu.api.contracts.productadmin.ProductVariationPagedCollection getProductVariations(String filter, Integer pageSize, String productCode, String sortBy, Integer startIndex) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductVariationPagedCollection> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductVariationClient.getProductVariationsClient( filter,  pageSize,  productCode,  sortBy,  startIndex);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

		/**
	* Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   ProductVariationCollection productVariationCollection = productvariation.UpdateProductVariations( productCode,  productVariations);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param productVariations Wrapper for the collection of variations configured for the specified product code.
	* @return com.mozu.api.contracts.productadmin.ProductVariationCollection
	* @see com.mozu.api.contracts.productadmin.ProductVariationCollection
	* @see com.mozu.api.contracts.productadmin.ProductVariationCollection
	*/
	public com.mozu.api.contracts.productadmin.ProductVariationCollection updateProductVariations(String productCode, com.mozu.api.contracts.productadmin.ProductVariationCollection productVariations) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductVariationCollection> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductVariationClient.updateProductVariationsClient( productCode,  productVariations);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Modifies the details of a variation, based on the supplied variation key, for the specified product code.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   ProductVariation productVariation = productvariation.UpdateProductVariation( productCode,  variationKey,  productVariation);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @param productVariation Wrapper for the properties of the specified product variation.
	* @return com.mozu.api.contracts.productadmin.ProductVariation
	* @see com.mozu.api.contracts.productadmin.ProductVariation
	* @see com.mozu.api.contracts.productadmin.ProductVariation
	*/
	public com.mozu.api.contracts.productadmin.ProductVariation updateProductVariation(String productCode, String variationKey, com.mozu.api.contracts.productadmin.ProductVariation productVariation) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductVariation> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductVariationClient.updateProductVariationClient( productCode,  variationKey,  productVariation);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Deletes a variation, based on the supplied variation key, for the specified product code.
	* <p><pre><code>
	*    ProductVariation productvariation = new ProductVariation();
	*   productvariation.DeleteProductVariation( productCode,  variationKey);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return 
	*/
	public void deleteProductVariation(String productCode, String variationKey) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.products.ProductVariationClient.deleteProductVariationClient( productCode,  variationKey);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



