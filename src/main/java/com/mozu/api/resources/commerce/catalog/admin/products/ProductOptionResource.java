/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin.products;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class ProductOptionResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public ProductOptionResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	ProductOption productoption = new ProductOption();
	 *	ProductOption productOption = productoption.GetOptions(dataViewMode,  productCode, authTicket);
	 * </code></pre></p>
	 * @param productCode 
	 * @param authTicket User Auth Ticket
	 * @return List<com.mozu.api.contracts.productadmin.ProductOption>
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 */
	public List<com.mozu.api.contracts.productadmin.ProductOption> getOptions(com.mozu.api.DataViewMode dataViewMode, String productCode, AuthTicket authTicket) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductOption>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductOptionClient.getOptionsClient(dataViewMode,  productCode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductOption productoption = new ProductOption();
	 *	ProductOption productOption = productoption.GetOption(dataViewMode,  attributeFQN,  productCode, authTicket);
	 * </code></pre></p>
	 * @param attributeFQN 
	 * @param productCode 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.productadmin.ProductOption
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 */
	public com.mozu.api.contracts.productadmin.ProductOption getOption(com.mozu.api.DataViewMode dataViewMode, String attributeFQN, String productCode, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductOption> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductOptionClient.getOptionClient(dataViewMode,  attributeFQN,  productCode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductOption productoption = new ProductOption();
	 *	ProductOption productOption = productoption.AddOption(dataViewMode,  productOption,  productCode, authTicket);
	 * </code></pre></p>
	 * @param productCode 
	 * @param authTicket User Auth Ticket
	 * @param productOption 
	 * @return com.mozu.api.contracts.productadmin.ProductOption
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 */
	public com.mozu.api.contracts.productadmin.ProductOption addOption(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.ProductOption productOption, String productCode, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductOption> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductOptionClient.addOptionClient(dataViewMode,  productOption,  productCode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductOption productoption = new ProductOption();
	 *	ProductOption productOption = productoption.UpdateOption(dataViewMode,  productOption,  attributeFQN,  productCode, authTicket);
	 * </code></pre></p>
	 * @param attributeFQN 
	 * @param productCode 
	 * @param authTicket User Auth Ticket
	 * @param productOption 
	 * @return com.mozu.api.contracts.productadmin.ProductOption
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 * @see com.mozu.api.contracts.productadmin.ProductOption
	 */
	public com.mozu.api.contracts.productadmin.ProductOption updateOption(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.ProductOption productOption, String attributeFQN, String productCode, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductOption> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductOptionClient.updateOptionClient(dataViewMode,  productOption,  attributeFQN,  productCode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductOption productoption = new ProductOption();
	 *	productoption.DeleteOption(dataViewMode,  attributeFQN,  productCode, authTicket);
	 * </code></pre></p>
	 * @param attributeFQN 
	 * @param productCode 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteOption(com.mozu.api.DataViewMode dataViewMode, String attributeFQN, String productCode, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.products.ProductOptionClient.deleteOptionClient(dataViewMode,  attributeFQN,  productCode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



