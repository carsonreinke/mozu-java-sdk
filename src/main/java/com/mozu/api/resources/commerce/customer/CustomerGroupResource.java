/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.customer;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class CustomerGroupResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public CustomerGroupResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroupCollection customerGroupCollection = customergroup.GetGroups();
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroupCollection
	 * @see com.mozu.api.contracts.customer.CustomerGroupCollection
	 */
	public com.mozu.api.contracts.customer.CustomerGroupCollection getGroups() throws Exception
	{
		return getGroups( null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroupCollection customerGroupCollection = customergroup.GetGroups( filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroupCollection
	 * @see com.mozu.api.contracts.customer.CustomerGroupCollection
	 */
	public com.mozu.api.contracts.customer.CustomerGroupCollection getGroups(String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroupCollection> client = com.mozu.api.clients.commerce.customer.CustomerGroupClient.getGroupsClient( filter,  pageSize,  sortBy,  startIndex, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroup customerGroup = customergroup.GetGroup( groupId, authTicket);
	 * </code></pre></p>
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 */
	public com.mozu.api.contracts.customer.CustomerGroup getGroup(Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> client = com.mozu.api.clients.commerce.customer.CustomerGroupClient.getGroupClient( groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroup customerGroup = customergroup.AddGroup( group, authTicket);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param group 
	 * @return com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 */
	public com.mozu.api.contracts.customer.CustomerGroup addGroup(com.mozu.api.contracts.customer.CustomerGroup group, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> client = com.mozu.api.clients.commerce.customer.CustomerGroupClient.addGroupClient( group, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	CustomerGroup customerGroup = customergroup.UpdateGroup( group,  groupId, authTicket);
	 * </code></pre></p>
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @param group 
	 * @return com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 * @see com.mozu.api.contracts.customer.CustomerGroup
	 */
	public com.mozu.api.contracts.customer.CustomerGroup updateGroup(com.mozu.api.contracts.customer.CustomerGroup group, Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.CustomerGroup> client = com.mozu.api.clients.commerce.customer.CustomerGroupClient.updateGroupClient( group,  groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CustomerGroup customergroup = new CustomerGroup();
	 *	customergroup.DeleteGroup( groupId, authTicket);
	 * </code></pre></p>
	 * @param groupId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteGroup(Integer groupId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.customer.CustomerGroupClient.deleteGroupClient( groupId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



