/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.customer.accounts;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class TransactionResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public TransactionResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	Transaction transaction = new Transaction();
	 *	Transaction transaction = transaction.GetTransactions( accountId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param authTicket User Auth Ticket
	 * @return List<com.mozu.api.contracts.customer.Transaction>
	 * @see com.mozu.api.contracts.customer.Transaction
	 */
	public List<com.mozu.api.contracts.customer.Transaction> getTransactions(Integer accountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.customer.Transaction>> client = com.mozu.api.clients.commerce.customer.accounts.TransactionClient.getTransactionsClient( accountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Transaction transaction = new Transaction();
	 *	Transaction transaction = transaction.AddTransaction( transaction,  accountId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param authTicket User Auth Ticket
	 * @param transaction 
	 * @return com.mozu.api.contracts.customer.Transaction
	 * @see com.mozu.api.contracts.customer.Transaction
	 * @see com.mozu.api.contracts.customer.Transaction
	 */
	public com.mozu.api.contracts.customer.Transaction addTransaction(com.mozu.api.contracts.customer.Transaction transaction, Integer accountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.Transaction> client = com.mozu.api.clients.commerce.customer.accounts.TransactionClient.addTransactionClient( transaction,  accountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Transaction transaction = new Transaction();
	 *	transaction.RemoveTransaction( accountId,  transactionId, authTicket);
	 * </code></pre></p>
	 * @param accountId 
	 * @param transactionId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void removeTransaction(Integer accountId, String transactionId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.customer.accounts.TransactionClient.removeTransactionClient( accountId,  transactionId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



