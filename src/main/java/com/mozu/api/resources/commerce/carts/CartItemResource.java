/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.carts;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the cart items subresource to manage a collection of items in an active shopping cart.
/// </summary>
public class CartItemResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public CartItemResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of cart items including the total number of items in the cart.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   CartItemCollection cartItemCollection = cartitem.GetCartItems();
	* </code></pre></p>
	* @return com.mozu.api.contracts.commerceruntime.carts.CartItemCollection
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItemCollection
	*/
	public com.mozu.api.contracts.commerceruntime.carts.CartItemCollection getCartItems() throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItemCollection> client = com.mozu.api.clients.commerce.carts.CartItemClient.getCartItemsClient();
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a particular cart item by providing the cart item ID.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   CartItem cartItem = cartitem.GetCartItem( cartItemId);
	* </code></pre></p>
	* @param cartItemId Identifier of the cart item to retrieve.
	* @return com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	*/
	public com.mozu.api.contracts.commerceruntime.carts.CartItem getCartItem(String cartItemId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> client = com.mozu.api.clients.commerce.carts.CartItemClient.getCartItemClient( cartItemId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Adds an item such as product to the current shopper's cart.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   CartItem cartItem = cartitem.AddItemToCart( cartItem);
	* </code></pre></p>
	* @param cartItem All properties of the new cart item. The product code is required.
	* @return com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	*/
	public com.mozu.api.contracts.commerceruntime.carts.CartItem addItemToCart(com.mozu.api.contracts.commerceruntime.carts.CartItem cartItem) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> client = com.mozu.api.clients.commerce.carts.CartItemClient.addItemToCartClient( cartItem);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Update properties of a specific cart item.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   CartItem cartItem = cartitem.UpdateCartItem( cartItemId,  cartItem);
	* </code></pre></p>
	* @param cartItemId Identifier of the cart item to update.
	* @param cartItem The properties of the cart item to update.
	* @return com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	*/
	public com.mozu.api.contracts.commerceruntime.carts.CartItem updateCartItem(String cartItemId, com.mozu.api.contracts.commerceruntime.carts.CartItem cartItem) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> client = com.mozu.api.clients.commerce.carts.CartItemClient.updateCartItemClient( cartItemId,  cartItem);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Update the quantity of an individual cart item in the cart of a current shopper.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   CartItem cartItem = cartitem.UpdateCartItemQuantity( cartItemId,  quantity);
	* </code></pre></p>
	* @param cartItemId Identifier of the cart item to update quantity.
	* @param quantity The number of cart items in the shopper's active cart.
	* @return com.mozu.api.contracts.commerceruntime.carts.CartItem
	* @see com.mozu.api.contracts.commerceruntime.carts.CartItem
	*/
	public com.mozu.api.contracts.commerceruntime.carts.CartItem updateCartItemQuantity(String cartItemId, Integer quantity) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.CartItem> client = com.mozu.api.clients.commerce.carts.CartItemClient.updateCartItemQuantityClient( cartItemId,  quantity);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Removes all cart items in the shopper's active cart.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   Cart cart = cartitem.RemoveAllCartItems();
	* </code></pre></p>
	* @return com.mozu.api.contracts.commerceruntime.carts.Cart
	* @see com.mozu.api.contracts.commerceruntime.carts.Cart
	*/
	public com.mozu.api.contracts.commerceruntime.carts.Cart removeAllCartItems() throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.carts.Cart> client = com.mozu.api.clients.commerce.carts.CartItemClient.removeAllCartItemsClient();
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Delete a specific cart item by providing the cart item ID.
	* <p><pre><code>
	*    CartItem cartitem = new CartItem();
	*   cartitem.DeleteCartItem( cartItemId);
	* </code></pre></p>
	* @param cartItemId Identifier of the cart item to delete.
	* @return 
	*/
	public void deleteCartItem(String cartItemId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.carts.CartItemClient.deleteCartItemClient( cartItemId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



