/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.catalog.admin.attributedefinition.producttypes;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
/// </summary>
public class ProductTypeExtraResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public ProductTypeExtraResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of extra attributes defined for the specified product type.
	* <p><pre><code>
	*    ProductTypeExtra producttypeextra = new ProductTypeExtra();
	*   AttributeInProductType attributeInProductType = producttypeextra.GetExtras( productTypeId);
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @return List<com.mozu.api.contracts.productadmin.AttributeInProductType>
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType> getExtras(Integer productTypeId) throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.productadmin.AttributeInProductType>> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypeExtraClient.getExtrasClient( productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves the details of an extra attribute definition for the specified product type.
	* <p><pre><code>
	*    ProductTypeExtra producttypeextra = new ProductTypeExtra();
	*   AttributeInProductType attributeInProductType = producttypeextra.GetExtra( attributeFQN,  productTypeId);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type whose extra is being retrieved.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType getExtra(String attributeFQN, Integer productTypeId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypeExtraClient.getExtraClient( attributeFQN,  productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Assigns a defined extra attribute to the product type based on the information supplied in the request.
	* <p><pre><code>
	*    ProductTypeExtra producttypeextra = new ProductTypeExtra();
	*   AttributeInProductType attributeInProductType = producttypeextra.AddExtra( productTypeId,  attributeInProductType);
	* </code></pre></p>
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType The properties of the extra attribute definition for this product type assignment.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType addExtra(Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypeExtraClient.addExtraClient( productTypeId,  attributeInProductType);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Update the definition of an extra attribute for the specified product type.
	* <p><pre><code>
	*    ProductTypeExtra producttypeextra = new ProductTypeExtra();
	*   AttributeInProductType attributeInProductType = producttypeextra.UpdateExtra( attributeFQN,  productTypeId,  attributeInProductType);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @param attributeInProductType The properties of the extra attribute definition to update for the product type.
	* @return com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	* @see com.mozu.api.contracts.productadmin.AttributeInProductType
	*/
	public com.mozu.api.contracts.productadmin.AttributeInProductType updateExtra(String attributeFQN, Integer productTypeId, com.mozu.api.contracts.productadmin.AttributeInProductType attributeInProductType) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.AttributeInProductType> client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypeExtraClient.updateExtraClient( attributeFQN,  productTypeId,  attributeInProductType);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Removes an extra attribute definition from the specified product type.
	* <p><pre><code>
	*    ProductTypeExtra producttypeextra = new ProductTypeExtra();
	*   producttypeextra.DeleteExtra( attributeFQN,  productTypeId);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productTypeId Identifier of the product type.
	* @return 
	*/
	public void deleteExtra(String attributeFQN, Integer productTypeId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.attributedefinition.producttypes.ProductTypeExtraClient.deleteExtraClient( attributeFQN,  productTypeId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



