/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;

/** <summary>
 * 
 * </summary>
 */
public class DiscountResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public DiscountResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountCollection discountCollection = discount.GetDiscounts(dataViewMode);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.productadmin.DiscountCollection
	 * @see com.mozu.api.contracts.productadmin.DiscountCollection
	 */
	public com.mozu.api.contracts.productadmin.DiscountCollection getDiscounts(com.mozu.api.DataViewMode dataViewMode) throws Exception
	{
		return getDiscounts(dataViewMode,  null,  null,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountCollection discountCollection = discount.GetDiscounts(dataViewMode,  filter,  pageSize,  sortBy,  startIndex, authTicket);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param sortBy 
	 * @param startIndex 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.productadmin.DiscountCollection
	 * @see com.mozu.api.contracts.productadmin.DiscountCollection
	 */
	public com.mozu.api.contracts.productadmin.DiscountCollection getDiscounts(com.mozu.api.DataViewMode dataViewMode, String filter, Integer pageSize, String sortBy, Integer startIndex, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountsClient(dataViewMode,  filter,  pageSize,  sortBy,  startIndex, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.GetDiscount(dataViewMode,  discountId, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount getDiscount(com.mozu.api.DataViewMode dataViewMode, Integer discountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountClient(dataViewMode,  discountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountLocalizedContent discountLocalizedContent = discount.GetDiscountContent(dataViewMode,  discountId, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param authTicket User Auth Ticket
	 * @return com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.DiscountLocalizedContent getDiscountContent(com.mozu.api.DataViewMode dataViewMode, Integer discountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountContentClient(dataViewMode,  discountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	string string = discount.GenerateRandomCoupon(dataViewMode, authTicket);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return string
	 * @see string
	 */
	public String generateRandomCoupon(com.mozu.api.DataViewMode dataViewMode, AuthTicket authTicket) throws Exception
	{
		MozuClient<String> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.generateRandomCouponClient(dataViewMode, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.CreateDiscount(dataViewMode,  discount, authTicket);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param discount 
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount createDiscount(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.Discount discount, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.createDiscountClient(dataViewMode,  discount, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Redemption redemption = discount.RedeemDiscount(dataViewMode,  redemption, authTicket);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @param redemption 
	 * @return com.mozu.api.contracts.productadmin.discounts.Redemption
	 * @see com.mozu.api.contracts.productadmin.discounts.Redemption
	 * @see com.mozu.api.contracts.productadmin.discounts.Redemption
	 */
	public com.mozu.api.contracts.productadmin.discounts.Redemption redeemDiscount(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.discounts.Redemption redemption, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.discounts.Redemption> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.redeemDiscountClient(dataViewMode,  redemption, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.UpdateDiscount(dataViewMode,  discount,  discountId, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param authTicket User Auth Ticket
	 * @param discount 
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount updateDiscount(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.Discount discount, Integer discountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.updateDiscountClient(dataViewMode,  discount,  discountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountLocalizedContent discountLocalizedContent = discount.UpdateDiscountContent(dataViewMode,  content,  discountId, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param authTicket User Auth Ticket
	 * @param content 
	 * @return com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.DiscountLocalizedContent updateDiscountContent(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.DiscountLocalizedContent content, Integer discountId, AuthTicket authTicket) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.updateDiscountContentClient(dataViewMode,  content,  discountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	discount.DeleteDiscount(dataViewMode,  discountId, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void deleteDiscount(com.mozu.api.DataViewMode dataViewMode, Integer discountId, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.deleteDiscountClient(dataViewMode,  discountId, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	discount.UnRedeemDiscount(dataViewMode);
	 * </code></pre></p>
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void unRedeemDiscount(com.mozu.api.DataViewMode dataViewMode) throws Exception
	{
		unRedeemDiscount(dataViewMode,  null,  null, null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	discount.UnRedeemDiscount(dataViewMode,  discountId,  orderNumber, authTicket);
	 * </code></pre></p>
	 * @param discountId 
	 * @param orderNumber 
	 * @param authTicket User Auth Ticket
	 * @return 
	 */
	public void unRedeemDiscount(com.mozu.api.DataViewMode dataViewMode, Integer discountId, Integer orderNumber, AuthTicket authTicket) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.unRedeemDiscountClient(dataViewMode,  discountId,  orderNumber, authTicket);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



