/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.orders;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use this subresource to manage shipping information for orders.
/// </summary>
public class ShippingInfoResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public ShippingInfoResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieve a list of the shipping information for the specified order.
	* <p><pre><code>
	*    ShippingInfo shippinginfo = new ShippingInfo();
	*   ShippingInfo shippingInfo = shippinginfo.GetShippingInfo( orderId);
	* </code></pre></p>
	* @param orderId Unique identifier of the order associated with the shipping information to retrieve.
	* @return com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	*/
	public com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo getShippingInfo(String orderId) throws Exception
	{
		return getShippingInfo( false,  orderId);
	}

/**
	* Retrieve a list of the shipping information for the specified order.
	* <p><pre><code>
	*    ShippingInfo shippinginfo = new ShippingInfo();
	*   ShippingInfo shippingInfo = shippinginfo.GetShippingInfo( draft,  orderId);
	* </code></pre></p>
	* @param draft If true, retrieve the draft version of the order's shipping information, which might include uncommitted changes.
	* @param orderId Unique identifier of the order associated with the shipping information to retrieve.
	* @return com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	*/
	public com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo getShippingInfo(Boolean draft, String orderId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo> client = com.mozu.api.clients.commerce.orders.ShippingInfoClient.getShippingInfoClient( draft,  orderId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

		/**
	* Updates one or more propertes of shipping information for the specified order.
	* <p><pre><code>
	*    ShippingInfo shippinginfo = new ShippingInfo();
	*   ShippingInfo shippingInfo = shippinginfo.SetShippingInfo( orderId,  shippingInfo);
	* </code></pre></p>
	* @param orderId Unique identifier of the order associated with the shipping information to update.
	* @param shippingInfo Container for the shipping information associated with an order.
	* @return com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	*/
	public com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo setShippingInfo(String orderId, com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo shippingInfo) throws Exception
	{
		return setShippingInfo( orderId,  null,  null,  shippingInfo);
	}

/**
	* Updates one or more propertes of shipping information for the specified order.
	* <p><pre><code>
	*    ShippingInfo shippinginfo = new ShippingInfo();
	*   ShippingInfo shippingInfo = shippinginfo.SetShippingInfo( orderId,  updateMode,  version,  shippingInfo);
	* </code></pre></p>
	* @param orderId Unique identifier of the order associated with the shipping information to update.
	* @param updateMode Specifies whether to set the shipping information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal", "ApplyToDraft", or "ApplyAndCommit".
	* @param version If applicable, the version of the order or draft for which to set the shipping information.
	* @param shippingInfo Container for the shipping information associated with an order.
	* @return com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	* @see com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo
	*/
	public com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo setShippingInfo(String orderId, String updateMode, String version, com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo shippingInfo) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.shipping.ShippingInfo> client = com.mozu.api.clients.commerce.orders.ShippingInfoClient.setShippingInfoClient( orderId,  updateMode,  version,  shippingInfo);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	
}



