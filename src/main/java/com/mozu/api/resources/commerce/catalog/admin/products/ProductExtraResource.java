/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.catalog.admin.products;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// Use the Extras resource to configure an extra product attribute for products associated with the product type that uses the extra attribute.
/// </summary>
public class ProductExtraResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public ProductExtraResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves a list of extras configured for the product according to any defined filter and sort criteria.
	* <p><pre><code>
	*    ProductExtra productextra = new ProductExtra();
	*   ProductExtra productExtra = productextra.GetExtras( productCode);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return List<com.mozu.api.contracts.productadmin.ProductExtra>
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public ArrayList<com.mozu.api.contracts.productadmin.ProductExtra> getExtras(String productCode) throws Exception
	{
		MozuClient<ArrayList<com.mozu.api.contracts.productadmin.ProductExtra>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductExtraClient.getExtrasClient( productCode);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves the details of an extra attribute configuration for the product specified in the request.
	* <p><pre><code>
	*    ProductExtra productextra = new ProductExtra();
	*   ProductExtra productExtra = productextra.GetExtra( attributeFQN,  productCode);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public com.mozu.api.contracts.productadmin.ProductExtra getExtra(String attributeFQN, String productCode) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductExtraClient.getExtraClient( attributeFQN,  productCode);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Configure an extra attribute for the product specified in the request.
	* <p><pre><code>
	*    ProductExtra productextra = new ProductExtra();
	*   ProductExtra productExtra = productextra.AddExtra( productCode,  productExtra);
	* </code></pre></p>
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param productExtra Properties of the product extra to configure for the specified product.
	* @return com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public com.mozu.api.contracts.productadmin.ProductExtra addExtra(String productCode, com.mozu.api.contracts.productadmin.ProductExtra productExtra) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductExtraClient.addExtraClient( productCode,  productExtra);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Updates the configuration of an extra attribute for the product specified in the request.
	* <p><pre><code>
	*    ProductExtra productextra = new ProductExtra();
	*   ProductExtra productExtra = productextra.UpdateExtra( attributeFQN,  productCode,  productExtra);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param productExtra Properties of the extra attribute to update for the specified product.
	* @return com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	* @see com.mozu.api.contracts.productadmin.ProductExtra
	*/
	public com.mozu.api.contracts.productadmin.ProductExtra updateExtra(String attributeFQN, String productCode, com.mozu.api.contracts.productadmin.ProductExtra productExtra) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductExtra> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductExtraClient.updateExtraClient( attributeFQN,  productCode,  productExtra);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Delete a product extra configuration for the product specified in the request.
	* <p><pre><code>
	*    ProductExtra productextra = new ProductExtra();
	*   productextra.DeleteExtra( attributeFQN,  productCode);
	* </code></pre></p>
	* @param attributeFQN The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @param productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return 
	*/
	public void deleteExtra(String attributeFQN, String productCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.products.ProductExtraClient.deleteExtraClient( attributeFQN,  productCode);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



