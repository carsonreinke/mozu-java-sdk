/**
*     This code was auto-generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
*/
package com.mozu.api.resources.commerce.orders.attributedefinition;

import com.mozu.api.ApiContext;
import com.mozu.api.resources.BaseResource;
import java.util.ArrayList;
import com.mozu.api.MozuClient;

/// <summary>
/// A grouping of related orders attributes.
/// </summary>
public class AttributeSetResource extends BaseResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	
	public AttributeSetResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	* Retrieves the attribute set by providing the name and namespace.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSet attributeSet = attributeset.GetAttributeSetByName( fqn);
	* </code></pre></p>
	* @param fqn The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @return com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSet getAttributeSetByName(String fqn) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.extensible.AttributeSet> client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.getAttributeSetByNameClient( fqn);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a list of attribute sets according to any filter criteria or sort options.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSetCollection attributeSetCollection = attributeset.GetAttributeSets();
	* </code></pre></p>
	* @return com.mozu.api.contracts.core.extensible.AttributeSetCollection
	* @see com.mozu.api.contracts.core.extensible.AttributeSetCollection
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSetCollection getAttributeSets() throws Exception
	{
		return getAttributeSets( null,  null,  null,  null);
	}

/**
	* Retrieves a list of attribute sets according to any filter criteria or sort options.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSetCollection attributeSetCollection = attributeset.GetAttributeSets( filter,  pageSize,  sortBy,  startIndex);
	* </code></pre></p>
	* @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param pageSize Specifies the number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param startIndex Indicates the zero-based offset in the complete result set where the returned entities begin, when creating paged results from a query. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return com.mozu.api.contracts.core.extensible.AttributeSetCollection
	* @see com.mozu.api.contracts.core.extensible.AttributeSetCollection
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSetCollection getAttributeSets(String filter, Integer pageSize, String sortBy, Integer startIndex) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.extensible.AttributeSetCollection> client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.getAttributeSetsClient( filter,  pageSize,  sortBy,  startIndex);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Retrieves a specific attribute set by providing the attribute set ID.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSet attributeSet = attributeset.GetAttributeSet( attributeSetId);
	* </code></pre></p>
	* @param attributeSetId Identifier of the attribute set being retrieved.
	* @return com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSet getAttributeSet(Integer attributeSetId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.extensible.AttributeSet> client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.getAttributeSetClient( attributeSetId);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Create new attribute set to provide order extensibility.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSet attributeSet = attributeset.CreateAttributeSet( attributeSet);
	* </code></pre></p>
	* @param attributeSet The properties of the orders attribute set being created.
	* @return com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSet createAttributeSet(com.mozu.api.contracts.core.extensible.AttributeSet attributeSet) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.extensible.AttributeSet> client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.createAttributeSetClient( attributeSet);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

	/**
	* Update an existing attribute set by providing the attribute set ID.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   AttributeSet attributeSet = attributeset.UpdateAttributeSet( attributeSetId,  attributeSet);
	* </code></pre></p>
	* @param attributeSetId Identifier of the attribute set being updated.
	* @param attributeSet The properties of the attribute set being updated.
	* @return com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	* @see com.mozu.api.contracts.core.extensible.AttributeSet
	*/
	public com.mozu.api.contracts.core.extensible.AttributeSet updateAttributeSet(Integer attributeSetId, com.mozu.api.contracts.core.extensible.AttributeSet attributeSet) throws Exception
	{
		MozuClient<com.mozu.api.contracts.core.extensible.AttributeSet> client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.updateAttributeSetClient( attributeSetId,  attributeSet);
		setContext(_apiContext, client,true);
		client.executeRequest();
		return client.getResult();

	}

/**
	* Associate an attribute with an attribute set.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   attributeset.UpsertAttributeSetAssignment( assignment);
	* </code></pre></p>
	* @param assignment Properties of the attribute set assignment.
	* @return 
	* @see com.mozu.api.contracts.core.extensible.AttributeSetAssignment
	*/
	public void upsertAttributeSetAssignment(com.mozu.api.contracts.core.extensible.AttributeSetAssignment assignment) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.upsertAttributeSetAssignmentClient( assignment);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

	/**
	* Delete a specific attribute set by providing the attribute set ID.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   attributeset.DeleteAttributeSet( attributeSetId);
	* </code></pre></p>
	* @param attributeSetId Identifier of the attribute set being deleted.
	* @return 
	*/
	public void deleteAttributeSet(Integer attributeSetId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.deleteAttributeSetClient( attributeSetId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

/**
	* Removes the attribute from its assigned attribute set.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   attributeset.RemoveAttributeSetAssignment( attributeSetId,  locationId);
	* </code></pre></p>
	* @param attributeSetId Identifier of the attribute set.
	* @param locationId Identifier of the location. Locations describe where in the application the attribute set definition will be rendered (such as a page).
	* @return 
	*/
	public void removeAttributeSetAssignment(Integer attributeSetId, Integer locationId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.removeAttributeSetAssignmentClient( attributeSetId,  locationId);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}

/**
	* Delete a specific attribute set by providing the fully qualified name.
	* <p><pre><code>
	*    AttributeSet attributeset = new AttributeSet();
	*   attributeset.DeleteAttributeSetByName( fqn);
	* </code></pre></p>
	* @param fqn The fully qualified name of the attribute, which is a user defined attribute identifier.
	* @return 
	*/
	public void deleteAttributeSetByName(String fqn) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.orders.attributedefinition.AttributeSetClient.deleteAttributeSetByNameClient( fqn);
		setContext(_apiContext, client,true);
		client.executeRequest();

	}


}



